antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,44.1,1,27.259]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[2,44.1,3,47.41]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[4,31.832]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[5,17.492,6,34.59]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[6,34.59,7,24.883]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1-6",[8,55.362]],["name/1-6",[]],["text/1-6",[]],["component/1-6",[]],["title/1-7",[9,25.169,10,26.697,11,45.457]],["name/1-7",[]],["text/1-7",[]],["component/1-7",[]],["title/1-8",[12,46.758]],["name/1-8",[]],["text/1-8",[]],["component/1-8",[]],["title/1-9",[13,47.587]],["name/1-9",[]],["text/1-9",[]],["component/1-9",[]],["title/1-10",[14,36.405]],["name/1-10",[]],["text/1-10",[]],["component/1-10",[]],["title/1-11",[5,17.492,15,43.171]],["name/1-11",[]],["text/1-11",[]],["component/1-11",[]],["title/1-12",[5,15.295,16,20.467,17,26.163]],["name/1-12",[]],["text/1-12",[]],["component/1-12",[]],["title/1-13",[18,17.599,19,31.855]],["name/1-13",[]],["text/1-13",[]],["component/1-13",[]],["title/1",[20,14.728,21,12.498,22,7.114,23,28.75]],["name/1",[17,1.8]],["text/1",[2,1.933,3,2.078,4,1.927,5,2.547,6,3.706,7,3.193,9,1.262,10,2.712,12,0.997,13,1.786,14,2.203,15,2.534,16,2.616,17,2.657,18,2.707,20,2.802,21,2.525,22,1.541,23,0.922,24,1.216,25,1.123,26,2.707,27,1.735,28,0.896,29,2.95,30,2.238,31,1.735,32,1.481,33,1.054,34,3.072,35,3.025,36,1.461,37,0.667,38,1.181,39,1.034,40,2.784,41,2.784,42,3.358,43,2.025,44,1.123,45,1.735,46,0.896,47,1.891,48,1.345,49,1.933,50,1.599,51,1.481,52,2.274,53,1.756,54,0.777,55,0.768,56,1.075,57,1.405,58,2.277,59,2.203,60,1.461,61,1.295,62,1.559,63,1.735,64,1.997,65,2.647,66,0.691,67,9.812,68,1.599,69,1.718,70,0.635,71,2.941,72,2.928,73,0.785,74,2.235,75,1.098,76,0.936,77,1.274,78,2.616,79,1.854,80,1.671,81,1.582,82,1.599,83,1.577,84,2.194,85,1.238,86,1.345,87,0.83,88,2.392,89,0.965,90,2.238,91,1.205,92,0.965,93,1.295,94,0.679,95,0.884,96,1.572,97,2.579,98,2.025,99,3.153,100,2.227,101,2.137,102,1.599,103,2.822,104,1.599,105,1.599,106,1.405,107,2.274,108,2.137,109,1.516,110,1.123,111,1.034,112,2.896,113,2.367,114,2.025,115,2.367,116,1.034,117,1.977,118,1.755,119,1.755,120,2.59,121,2.274,122,1.295,123,1.295,124,1.295,125,1.295,126,1.345,127,1.577,128,1.755,129,1.892,130,1.352,131,2.712,132,1.366,133,2.137,134,1.977,135,1.345,136,1.054,137,0.777,138,1.252,139,0.673,140,1.405,141,1.582,142,3.025,143,1.582,144,1.933,145,1.786,146,1.034,147,0.821,148,1.405,149,1.123,150,1.345,151,0.738,152,2.078,153,1.854,154,1.819,155,1.786,156,1.819,157,2.279,158,1.755,159,0.95,160,1.481,161,2.392,162,1.075,163,1.345,164,0.997,165,0.95,166,1.054,167,1.123,168,0.785,169,0.76,170,1.977,171,1.015,172,1.735,173,1.481,174,2.137,175,0.507,176,1.151,177,1.181]],["component/1",[178,0.572]],["title/2-1",[147,32.952,179,69.672]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2",[180,26.974,181,30.245,182,60.921]],["name/2",[183,4.192]],["text/2",[7,1.513,9,2.625,10,2.785,16,1.423,17,1.819,18,1.605,20,3.192,21,1.467,22,0.835,23,2.25,25,2.743,34,2.103,36,2.027,38,2.883,46,2.188,59,1.896,62,1.615,64,1.718,68,2.219,71,1.96,77,1.767,83,2.188,90,3.478,91,1.672,92,2.355,94,1.658,95,3.238,97,3.328,98,2.809,107,2.355,127,2.188,128,3.652,130,2.814,132,2.843,139,2.465,147,3.005,148,3.431,159,2.319,177,2.883,184,4.236,185,2.964,186,3.791,187,3.615,188,4.584,189,2.65,190,4.236,191,2.743,192,4.236,193,2.682,194,2.625,195,4.236,196,1.959,197,3.615,198,2.052,199,4.236,200,6.355,201,5.423,202,2.573,203,4.236,204,4.925,205,4.236,206,3.615,207,2.809,208,4.236,209,4.236,210,4.236,211,3.376,212,3.615,213,3.005,214,4.236,215,4.446,216,3.615,217,2.319,218,2.964,219,2.964,220,4.236,221,4.236,222,4.236,223,3.615,224,2.809,225,2.907,226,3.615,227,4.236,228,3.862,229,4.236,230,3.649,231,4.236,232,4.236,233,4.236,234,2.25,235,4.236,236,3.284,237,2.394,238,2.809,239,4.236,240,3.862,241,3.615,242,3.615,243,1.767,244,4.236,245,2.284,246,4.236,247,4.236,248,4.236,249,4.236,250,4.236,251,4.236,252,1.937,253,4.236,254,4.236,255,3.161,256,4.236,257,2.554,258,3.161,259,4.236,260,4.236,261,2.004,262,2.324,263,2.355,264,4.236,265,4.236,266,3.615,267,3.284,268,1.562,269,3.161,270,2.435,271,4.236,272,4.236,273,4.236,274,3.056]],["component/2",[178,0.572]],["title/3-1",[151,29.627,257,27.998]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3-2",[71,21.487,151,29.627]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["title/3",[13,28.478,20,13.249,21,11.244,22,6.4,26,14.226]],["name/3",[17,1.8]],["text/3",[0,2.173,1,1.343,5,2.2,7,1.226,10,1.504,14,1.536,18,2.316,20,2.384,21,2.024,22,1.524,23,2.872,24,3.49,25,2.223,26,3.147,36,1.643,47,2.499,49,2.173,67,9.456,68,3.502,69,3.793,71,2.93,72,1.962,83,1.773,84,2.198,87,1.643,91,1.355,100,2.445,130,2.394,139,1.332,145,3.162,151,4.338,166,2.085,167,2.223,180,1.52,181,2.684,186,1.536,213,2.557,217,2.959,245,1.851,257,4.327,262,2.446,275,3.129,276,3.678,277,4.587,278,3.162,279,3.783,280,5.823,281,3.129,282,2.277,283,1.773,284,1.587,285,2.929,286,3.433,287,3.129,288,2.562,289,2.085,290,3.433,291,3.433,292,2.661,293,3.129,294,4.55,295,2.78,296,3.84,297,2.562,298,2.127,299,2.277,300,3.5,301,2.661,302,2.298,303,3.129,304,2.929,305,3.129,306,2.085,307,1.256,308,3.005,309,3.433,310,3.283,311,1.227,312,2.223,313,2.477,314,1.52,315,3.422,316,2.402,317,1.851,318,2.929,319,3.35,320,2.718,321,3.22,322,2.173]],["component/3",[178,0.572]],["title/4-1",[77,33.934]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[96,31.285]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[7,29.057]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4-4",[16,20.467,21,14.068,22,8.008]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["title/4-5",[80,44.53]],["name/4-5",[]],["text/4-5",[]],["component/4-5",[]],["title/4-6",[82,36.486,83,35.983]],["name/4-6",[]],["text/4-6",[]],["component/4-6",[]],["title/4-7",[323,60.707]],["name/4-7",[]],["text/4-7",[]],["component/4-7",[]],["title/4-8",[97,42.606]],["name/4-8",[]],["text/4-8",[]],["component/4-8",[]],["title/4-9",[324,69.426]],["name/4-9",[]],["text/4-9",[]],["component/4-9",[]],["title/4-10",[325,69.426]],["name/4-10",[]],["text/4-10",[]],["component/4-10",[]],["title/4-11",[326,53.953]],["name/4-11",[]],["text/4-11",[]],["component/4-11",[]],["title/4-12",[302,23.94,307,25.486]],["name/4-12",[]],["text/4-12",[]],["component/4-12",[]],["title/4-13",[311,15.809,327,22.733]],["name/4-13",[]],["text/4-13",[]],["component/4-13",[]],["title/4",[21,14.068,22,8.008,74,24.262]],["name/4",[21,0.295,22,0.168,53,0.548,74,0.508,75,0.808]],["text/4",[0,1.149,1,1.657,4,0.71,5,1.718,6,0.901,7,3.105,13,1.062,16,2.562,18,2.247,19,1.453,20,2.767,21,2.552,22,1.533,25,1.175,34,1.577,36,0.869,37,2.631,39,1.082,41,2.896,42,1.598,43,3.831,46,1.641,53,4.329,58,1.084,59,2.585,60,0.869,61,2.371,66,1.265,70,2.113,71,0.98,73,0.821,74,3.681,75,1.149,76,4.687,77,4.275,78,2.25,79,3.087,80,4.501,81,3.862,82,3.328,83,3.282,84,1.044,85,2.343,87,2.027,91,3.01,94,1.657,96,3.612,97,3.803,98,3.831,117,3.74,147,0.859,168,0.821,174,1.27,175,1.688,181,4.417,189,1.767,225,1.211,230,2.027,237,1.795,241,1.549,243,1.767,245,0.979,257,1.277,261,0.859,269,2.371,299,1.204,307,0.664,308,4.239,311,0.412,312,3.74,314,0.804,323,3.793,324,4.338,325,3.615,326,3.371,328,2.301,329,2.681,330,1.407,331,1.655,332,2.573,333,3.805,334,2.435,335,0.913,336,5.084,337,0.75,338,1.47,339,1.655,340,1.655,341,0.788,342,2.107,343,1.826,344,2.463,345,1.407,346,1.549,347,1.816,348,1.27,349,3.283,350,2.024,351,1.766,352,1.816,353,1.816,354,1.739,355,1.549,356,0.849,357,2.573,358,2.223,359,0.879,360,2.057,361,2.107,362,2.711,363,0.938,364,2.573,365,2.292,366,2.107,367,3.177,368,1.702,369,1.407,370,2.609,371,1.407,372,1.816,373,1.816,374,1.816,375,1.549,376,1.27,377,1.826,378,0.89,379,1.235,380,6.238,381,1.062,382,1.355,383,1.539,384,2.355,385,2.743,386,0.938,387,2.896,388,0.994,389,0.951,390,0.879,391,1.655,392,1.103,393,0.675,394,1.407,395,1.009,396,1.47,397,1.009,398,1.47,399,0.913,400,1.27,401,1.407,402,1.31,403,0.638,404,0.638,405,0.638,406,0.638,407,0.638,408,0.638,409,0.638,410,0.638,411,0.638]],["component/4",[178,0.572]],["title/5-1",[311,15.809,327,22.733]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5",[20,13.249,21,11.244,22,6.4,84,16.002,85,19.745]],["name/5",[84,0.877,85,1.082]],["text/5",[1,1.23,5,2.224,9,2.082,10,1.377,12,1.806,16,2.425,17,3.099,18,2.237,20,1.717,21,0.726,22,0.949,30,2.758,46,1.623,47,1.453,53,1.35,61,2.345,66,1.252,68,1.646,70,1.843,71,0.969,72,1.829,74,1.252,84,2.372,85,3.951,86,2.436,87,1.504,94,4.084,97,1.646,114,2.084,119,1.806,127,3.727,142,1.694,144,1.989,146,1.872,159,2.758,165,1.72,186,1.406,194,3.909,196,1.453,198,1.522,213,1.486,215,2.199,225,1.921,230,1.504,234,1.669,237,1.776,243,3.517,262,1.15,268,1.159,284,4.095,296,1.377,311,0.713,329,1.105,333,2.802,337,2.082,350,2.007,351,4.012,356,3.694,362,2.682,368,2.025,393,2.937,403,1.105,404,1.105,405,1.105,406,1.105,407,1.105,408,1.105,409,1.105,410,1.105,411,1.105,412,2.084,413,2.682,414,3.143,415,2.545,416,3.621,417,2.084,418,2.865,419,2.267,420,2.682,421,3.143,422,2.436,423,5.28,424,7.686,425,2.682,426,1.947,427,2.267,428,2.682,429,2.865,430,3.393,431,3.526,432,2.865,433,2.682,434,6.609,435,2.865,436,4.414,437,2.436,438,3.143,439,1.504,440,2.082,441,1.838,442,3.143,443,3.143,444,2.865,445,2.199,446,3.429,447,2.865,448,2.865,449,2.345,450,2.865,451,3.143,452,4.081,453,4.3,454,2.682,455,2.084,456,2.865,457,1.909,458,1.947,459,5.039,460,2.865,461,2.865,462,2.865,463,3.143,464,1.747,465,2.865,466,3.143,467,2.865,468,2.802,469,2.865,470,2.502,471,3.143,472,3.19,473,2.267,474,1.747,475,1.838,476,2.345,477,6.158,478,2.865,479,3.143,480,5.039,481,2.436,482,3.143,483,2.035,484,3.143,485,3.143,486,2.545,487,2.345,488,4.081,489,1.694,490,3.143,491,2.345,492,3.143,493,3.143,494,2.682,495,2.682,496,2.139,497,2.865,498,2.035,499,2.139,500,2.865,501,2.865,502,2.436,503,2.865,504,2.865,505,3.635,506,2.865,507,2.139,508,2.865]],["component/5",[178,0.572]],["title/6-1",[59,27.259,96,23.426,369,47.219]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[59,27.259,96,23.426,245,32.841]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[91,27.501,96,26.791]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[96,26.791,509,37.559]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6-5",[96,23.426,416,26.163,510,33.871]],["name/6-5",[]],["text/6-5",[]],["component/6-5",[]],["title/6-6",[20,14.728,96,20.812,511,26.535,512,31.656]],["name/6-6",[]],["text/6-6",[]],["component/6-6",[]],["title/6-7",[59,27.259,96,23.426,152,41.455]],["name/6-7",[]],["text/6-7",[]],["component/6-7",[]],["title/6-8",[91,27.501,96,26.791]],["name/6-8",[]],["text/6-8",[]],["component/6-8",[]],["title/6-9",[96,26.791,509,37.559]],["name/6-9",[]],["text/6-9",[]],["component/6-9",[]],["title/6-10",[96,23.426,416,26.163,510,33.871]],["name/6-10",[]],["text/6-10",[]],["component/6-10",[]],["title/6-11",[59,27.259,96,23.426,120,23.629]],["name/6-11",[]],["text/6-11",[]],["component/6-11",[]],["title/6-12",[91,27.501,96,26.791]],["name/6-12",[]],["text/6-12",[]],["component/6-12",[]],["title/6-13",[513,47.587]],["name/6-13",[]],["text/6-13",[]],["component/6-13",[]],["title/6-14",[96,26.791,509,37.559]],["name/6-14",[]],["text/6-14",[]],["component/6-14",[]],["title/6-15",[95,27.578,317,29.176,514,26.535,515,41.949]],["name/6-15",[]],["text/6-15",[]],["component/6-15",[]],["title/6-16",[30,38.133,514,34.159]],["name/6-16",[]],["text/6-16",[]],["component/6-16",[]],["title/6-17",[84,26.739]],["name/6-17",[]],["text/6-17",[]],["component/6-17",[]],["title/6-18",[97,36.486,137,31.175]],["name/6-18",[]],["text/6-18",[]],["component/6-18",[]],["title/6-19",[59,27.259,96,23.426,368,24.481]],["name/6-19",[]],["text/6-19",[]],["component/6-19",[]],["title/6-20",[59,24.217,96,20.812,175,15.814,368,21.749]],["name/6-20",[]],["text/6-20",[]],["component/6-20",[]],["title/6-21",[302,23.94,307,25.486]],["name/6-21",[]],["text/6-21",[]],["component/6-21",[]],["title/6-22",[311,15.809,327,22.733]],["name/6-22",[]],["text/6-22",[]],["component/6-22",[]],["title/6",[5,11.109,20,12.041,21,10.218,22,5.816,59,19.799,96,17.014]],["name/6",[53,0.84,59,0.875,96,0.752]],["text/6",[1,0.268,5,1.874,6,0.34,9,0.283,13,0.4,14,0.306,16,1.446,18,2.025,19,1.656,20,2.095,21,1.664,22,1.23,25,0.443,26,0.38,28,0.354,30,2.678,33,0.416,34,0.34,35,0.369,36,0.887,37,0.5,39,0.774,47,0.857,50,2.831,52,3.576,53,1.849,55,0.575,59,3.786,60,1.128,62,0.261,64,0.278,65,2.344,66,1.289,69,1.502,70,2.684,71,0.211,72,2.045,74,0.939,75,1.173,76,2.914,77,1.51,79,1.965,80,1.541,82,0.68,83,0.354,84,0.427,85,0.527,87,1.348,88,0.4,91,2.311,92,1.799,94,2.115,95,2.026,96,3.86,97,0.68,102,0.358,103,0.701,104,0.68,118,0.747,120,2.741,132,0.306,136,0.416,137,1.448,139,1.788,147,0.614,152,3.983,153,3.132,154,2.157,158,0.393,159,1.771,162,0.805,164,1.355,165,0.375,166,0.416,168,0.31,169,1.033,175,2.397,180,1.044,181,0.34,186,0.83,187,0.584,194,0.424,196,0.601,198,1.142,202,1.126,211,0.364,217,0.375,218,0.479,225,4.479,238,0.454,241,1.582,243,0.983,245,3.956,252,0.594,255,1.383,257,2.949,262,0.862,268,1.335,270,1.86,277,0.381,278,0.4,283,0.354,284,0.857,292,0.531,293,0.624,296,0.3,297,0.969,298,0.424,299,2.855,301,1.007,303,1.184,311,0.155,314,1.603,317,2.638,327,0.223,329,1.138,330,1.007,331,0.624,334,0.747,337,2.657,338,0.554,341,2,343,0.393,350,1.836,351,0.381,354,0.375,356,1.317,359,1.926,361,0.861,364,3.22,368,3.463,369,2.807,370,0.495,377,0.393,378,1.156,383,0.898,384,1.566,386,1.671,388,1.015,389,0.68,390,1.926,392,1.126,393,3.051,395,0.381,399,0.653,400,0.909,403,0.241,404,0.241,405,0.241,406,0.241,407,0.241,408,0.241,409,0.241,410,0.241,411,0.241,412,0.454,416,1.555,417,1.229,423,2.013,426,0.424,427,0.494,430,0.294,434,0.511,439,0.887,440,1.496,453,1.582,457,0.416,464,0.381,468,1.311,470,1.606,472,2.292,473,0.937,475,1.379,477,1.109,483,0.443,491,0.511,496,0.466,509,4.373,510,3.005,511,1.156,512,2.118,513,1.379,514,2.111,515,0.531,516,0.466,517,0.624,518,0.774,519,1.299,520,0.685,521,0.554,522,0.685,523,0.861,524,0.554,525,0.884,526,0.685,527,1.926,528,0.624,529,3.005,530,2.565,531,0.685,532,1.759,533,1.048,534,2.668,535,2.149,536,1.299,537,1.184,538,1.854,539,0.685,540,0.584,541,0.584,542,3.226,543,0.774,544,0.685,545,3.236,546,0.433,547,1.563,548,1.007,549,0.969,550,3.137,551,2.357,552,1.383,553,1.299,554,0.909,555,2.031,556,1.299,557,1.109,558,0.494,559,1.184,560,3.09,561,2.972,562,0.969,563,1.252,564,1.299,565,1.7,566,1.299,567,1.007,568,1.416,569,1.052,570,1.7,571,0.511,572,0.584,573,2.149,574,1.299,575,0.624,576,1.109,577,0.747,578,0.511,579,0.932,580,0.554,581,0.494,582,0.685,583,0.531,584,1.854,585,0.969,586,0.349,587,1.299,588,1.184,589,3.236,590,1.299,591,1.007,592,0.433,593,0.685,594,1.126,595,0.884,596,2.534,597,1.677,598,0.479,599,0.841,600,0.584,601,1.854,602,0.685,603,0.685,604,0.685,605,0.685,606,0.624,607,0.584,608,0.584,609,0.584,610,0.584,611,0.624,612,0.494,613,0.466,614,1.563,615,0.685,616,0.387,617,0.466,618,0.443,619,0.511,620,0.454,621,1.184,622,0.624,623,0.531,624,0.624,625,0.479,626,1.893,627,1.184,628,1.299,629,0.554,630,0.369,631,0.685,632,0.584,633,0.653,634,0.554,635,0.4,636,0.685,637,0.685,638,2.575,639,2.357,640,2.357,641,1.299,642,0.711,643,0.454,644,1.582,645,0.364,646,1.052,647,0.624,648,0.685,649,0.454,650,0.685,651,1.299,652,1.337,653,1.854,654,1.271,655,1.854,656,1.501,657,1.854,658,1.854,659,1.854,660,1.854,661,1.854,662,1.854,663,1.404,664,1.69,665,1.854,666,0.685,667,0.624,668,0.408,669,0.531,670,0.685,671,0.584,672,1.299,673,1.299,674,0.685,675,0.387,676,0.685,677,0.624,678,0.822,679,1.184,680,1.591,681,1.109,682,0.4,683,0.554,684,1.229,685,0.554,686,0.511,687,0.554,688,3.621,689,0.734,690,0.685,691,1.854,692,0.624,693,0.393,694,3.236,695,0.685,696,0.443,697,1.229,698,0.584,699,1.299,700,0.554,701,1.299,702,1.854,703,1.431,704,1.854,705,0.685,706,0.685,707,0.624,708,2.357,709,0.624,710,0.466,711,0.685,712,0.685,713,0.624,714,0.685,715,0.884,716,0.685,717,0.313,718,1.69,719,0.685,720,0.584,721,1.299,722,0.685,723,0.511,724,0.685,725,0.349,726,0.789,727,0.685,728,0.685,729,0.685,730,1.299,731,0.685,732,0.685,733,0.685,734,0.685,735,0.685,736,0.685,737,1.299,738,0.443,739,0.494,740,1.299,741,0.685,742,0.416,743,0.685,744,0.685,745,1.007,746,0.685,747,0.584,748,0.685,749,0.685,750,0.685,751,0.685,752,1.299,753,0.554,754,0.624,755,0.685,756,0.685,757,0.685,758,1.109,759,0.685,760,0.685,761,0.685,762,0.685,763,0.685,764,0.685,765,0.685,766,0.685,767,0.624,768,0.685]],["component/6",[178,0.572]],["title/7-1",[88,40.751,90,38.133]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[89,38.736,90,38.133]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[175,17.8,769,49.335,770,55.534]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[188,50.261,189,29.059]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[302,23.94,307,25.486]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[311,15.809,327,22.733]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7",[20,11.034,21,9.364,22,5.33,88,23.717,89,22.544,90,22.193,91,16.005]],["name/7",[22,0.203,88,0.903,90,0.845,94,0.604]],["text/7",[5,1.321,6,1.647,9,3.352,16,2.726,18,2.05,20,0.903,21,1.874,22,1.444,26,1.537,37,1.276,47,1.534,53,1.425,54,1.484,60,1.587,70,1.924,71,1.622,72,1.909,74,2.964,76,1.788,77,1.384,80,1.816,82,1.737,84,1.09,85,2.134,87,1.587,88,5.05,89,4.511,90,5.91,91,3.408,92,3.635,93,2.475,94,2.558,95,4.4,102,1.737,103,1.989,112,4.072,132,1.484,139,1.287,167,2.147,168,1.5,169,2.305,175,1.537,186,3.33,188,2.393,196,1.534,202,2.014,225,3.686,230,1.587,252,1.517,261,1.569,262,3.434,263,1.844,268,1.223,284,1.534,299,2.2,302,1.14,311,0.753,315,2.1,317,1.788,328,1.321,329,1.85,348,2.321,350,2.095,351,3.635,354,4.073,356,1.551,368,2.627,370,2.006,371,2.571,376,2.321,377,1.906,383,2.548,386,1.713,388,1.816,399,1.668,403,1.166,404,1.166,405,1.166,406,1.166,407,1.166,408,1.166,409,1.166,410,1.166,411,1.166,423,1.844,439,2.518,455,2.2,468,1.844,487,2.475,489,1.788,518,1.976,521,2.686,524,2.686,549,2.475,561,3.195,586,1.69,594,4.519,633,1.668,645,1.762,726,2.014,769,7.829,770,7.397,771,3.077,772,2.257,773,5.261,774,7.441,775,5.068,776,2.686,777,3.681,778,3.317,779,2.831,780,3.195,781,2.686,782,2.321,783,3.317,784,3.424,785,3.077,786,2.055,787,3.024,788,3.024,789,3.317,790,3.317,791,3.681,792,3.317,793,3.317]],["component/7",[178,0.572]],["title/8-1",[7,21.757,175,17.8,377,35.012]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[302,23.94,307,25.486]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[311,15.809,327,22.733]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8",[7,19.329,20,14.728,21,12.498,22,7.114]],["name/8",[7,0.699,22,0.257,83,1.01]],["text/8",[1,2.974,5,0.634,7,4.058,9,3.332,18,2.037,19,1.155,20,0.687,21,0.583,22,1.317,30,4.957,34,2.092,35,2.271,37,1.62,58,0.861,60,3.029,66,3.365,70,2.315,73,1.142,77,4.284,78,3.362,85,3.27,91,3.575,94,0.988,96,0.971,102,1.323,116,1.504,117,1.635,118,1.451,119,1.451,120,0.98,139,0.98,146,2.51,168,1.142,175,2.469,180,1.866,189,1.053,191,1.635,225,4.514,243,1.053,268,0.931,278,1.477,284,1.168,306,1.534,311,0.573,314,1.866,328,1.006,329,1.482,342,1.675,349,6.549,350,2.52,351,3.911,356,2.535,368,3.965,370,0.963,377,4.368,381,2.465,386,1.304,388,1.382,389,2.207,393,2.826,398,2.045,403,0.888,404,0.888,405,0.888,406,0.888,407,0.888,408,0.888,409,0.888,410,0.888,411,0.888,416,1.81,468,2.343,499,1.719,525,1.719,527,4.251,529,3.519,571,3.144,581,1.822,586,1.287,597,2.51,598,4.428,654,2.271,680,1.427,684,2.794,687,5.125,782,2.948,786,1.565,794,2.155,795,3.841,796,3.794,797,4.942,798,3.976,799,1.957,800,6.843,801,1.884,802,3.412,803,5.075,804,1.635,805,5.422,806,5.422,807,6.329,808,2.525,809,6.329,810,1.635,811,2.525,812,1.767,813,4.045,814,2.525,815,2.525,816,4.214,817,2.525,818,1.767,819,1.767,820,2.045,821,1.957,822,2.302,823,2.525]],["component/8",[178,0.572]],["title/9-1",[22,9.158,97,36.486]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[7,24.883,97,36.486]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[77,25.409,78,32.361,97,31.903]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[77,25.409,97,31.903,360,39.44]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[7,21.757,77,25.409,97,31.903]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9-6",[22,7.114,64,21.949,69,18.883,378,26.535]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["title/9-7",[127,27.952,257,21.749,280,32.242,824,29.176]],["name/9-7",[]],["text/9-7",[]],["component/9-7",[]],["title/9-8",[22,8.008,71,18.788,72,22.106]],["name/9-8",[]],["text/9-8",[]],["component/9-8",[]],["title/9-9",[97,36.486,177,47.41]],["name/9-9",[]],["text/9-9",[]],["component/9-9",[]],["title/9-10",[302,23.94,307,25.486]],["name/9-10",[]],["text/9-10",[]],["component/9-10",[]],["title/9-11",[311,15.809,327,22.733]],["name/9-11",[]],["text/9-11",[]],["component/9-11",[]],["title/9",[20,14.728,21,12.498,22,7.114,97,28.343]],["name/9",[53,1.146,97,1.397]],["text/9",[1,1.801,5,1.872,7,3.509,9,3.774,15,3.269,16,1.773,17,0.679,18,2.229,19,2.105,20,1.253,21,1.561,22,1.391,23,0.839,26,0.462,28,1.96,34,1.395,36,2.525,37,2.029,50,0.827,53,1.977,54,1.699,55,0.7,58,0.539,62,1.072,64,1.539,66,2.523,69,0.981,70,1.028,71,0.487,72,1.02,74,1.833,76,1.515,77,4.453,78,3.59,84,3.128,85,2.891,87,0.756,88,0.924,91,0.624,94,2.478,97,5.39,106,1.279,127,1.452,136,0.959,137,0.707,139,0.613,161,1.644,162,1.741,163,2.178,168,1.271,169,0.692,170,1.023,175,2.34,177,1.912,180,0.7,186,1.258,217,2.519,225,4.474,230,0.756,234,0.839,237,0.893,243,0.659,252,1.285,257,1.525,268,0.583,280,1.674,284,0.73,307,0.578,311,0.358,314,0.7,328,0.629,329,1.335,341,0.685,349,1.225,350,1.119,351,0.878,354,0.865,355,1.348,356,0.739,359,0.765,360,3.416,363,0.816,368,1.85,370,2.843,377,1.615,378,4.145,381,1.644,383,0.765,390,0.765,392,0.959,393,2.355,397,0.878,399,0.795,401,1.225,403,0.556,404,0.556,405,0.556,406,0.556,407,0.556,408,0.556,409,0.556,410,0.556,411,0.556,427,1.14,440,1.568,441,0.924,470,1.885,474,3.522,481,4.531,489,0.852,509,2.046,511,0.775,525,3.132,527,3.611,529,2.11,530,2.261,557,1.348,563,0.839,597,0.941,599,1.023,612,1.14,613,1.075,616,0.893,642,1.538,668,0.941,717,1.285,723,3.435,725,0.805,777,1.106,780,0.959,782,1.967,785,0.924,798,2.601,800,1.279,803,3.806,813,1.179,824,1.515,825,1.225,826,4.273,827,1.279,828,2.398,829,2.398,830,3.728,831,1.179,832,0.865,833,1.58,834,1.58,835,1.279,836,1.58,837,2.81,838,1.58,839,1.44,840,3.796,841,1.58,842,1.348,843,2.562,844,1.58,845,1.179,846,3.074,847,2.81,848,1.361,849,1,850,1.58,851,1.58,852,1.58,853,1.58,854,1.58,855,0.865,856,1.44,857,1.075,858,1.075,859,4.442,860,2.22,861,1.44,862,4.809,863,1.225,864,3.321,865,1.58,866,1.44,867,1.44,868,2.562,869,3.074,870,1.44,871,1.44,872,1.225,873,1.279,874,1.44,875,1.44,876,2.562,877,1.075,878,1.348,879,1.225,880,3.46,881,0.908,882,1.348,883,2.178,884,1.44,885,1.44,886,1.44,887,1.44,888,1.44,889,1.44,890,1.58,891,1.58,892,3.46,893,2.276,894,2.276,895,2.562,896,1.44,897,2.562,898,3.46,899,1.44,900,1.44,901,1.279,902,1.934,903,1.225,904,1.279,905,0.839,906,1.023,907,1.279,908,1.279,909,1.58]],["component/9",[178,0.572]],["title/10-1",[79,29.567,80,26.649,175,14.226,217,26.649,360,31.521]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[79,29.567,80,26.649,96,18.722,175,14.226,509,26.247]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[16,16.358,79,29.567,80,26.649,175,14.226,384,27.07]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10-4",[302,23.94,307,25.486]],["name/10-4",[]],["text/10-4",[]],["component/10-4",[]],["title/10-5",[311,15.809,327,22.733]],["name/10-5",[]],["text/10-5",[]],["component/10-5",[]],["title/10",[79,42.309,80,38.133]],["name/10",[79,1.188,80,1.071,166,1.188]],["text/10",[1,0.96,5,0.616,6,0.674,7,2.069,9,1.387,13,0.795,16,3.363,18,1.342,19,1.535,20,0.37,21,2.07,22,1.423,26,1.926,30,0.743,37,0.522,42,0.683,43,1.628,50,0.711,53,0.583,54,1.098,55,0.601,58,0.463,60,0.65,64,0.995,65,1.589,66,0.541,70,2.411,71,2.31,73,0.614,74,1.639,77,3.62,78,0.722,79,3.226,80,5.55,84,0.446,85,3.863,88,1.964,89,2.287,91,0.969,93,1.014,94,2.709,95,3.817,96,3.394,112,2.513,132,0.608,137,1.841,146,1.462,147,1.161,154,1.462,158,0.781,164,0.781,168,0.614,175,2.904,189,0.567,196,0.628,211,0.722,217,3.402,225,4.127,243,0.567,252,1.535,257,1.653,261,0.642,262,0.497,268,2.935,278,0.795,284,0.628,299,5.944,300,0.879,311,0.308,317,3.893,325,2.865,328,0.541,329,1.18,335,1.234,343,0.781,354,0.743,356,0.635,360,2.664,361,2.226,365,2.422,368,1.653,370,1.28,378,0.666,380,2.237,382,1.014,384,5.183,385,4.024,387,1.238,388,0.743,393,1.975,395,0.755,399,1.688,400,1.717,403,0.863,404,0.478,405,0.478,406,0.478,407,0.478,408,0.478,409,0.478,410,0.478,411,0.478,416,3.322,417,0.901,423,2.953,426,0.842,430,0.583,434,2.505,437,1.053,468,0.755,470,0.674,472,5.284,481,4.49,489,0.732,505,0.98,509,3.732,510,3.849,517,1.238,527,4.204,529,1.867,530,2,546,0.86,547,1.628,562,1.831,563,0.722,568,2.671,570,2.422,571,1.014,576,1.159,577,4.574,579,1.234,581,2.968,583,2.602,586,3.358,592,1.554,596,1.717,597,0.809,613,0.924,626,1.964,629,3.332,630,0.732,633,1.234,642,0.743,678,0.86,682,1.436,684,2.728,696,1.589,784,0.711,786,0.842,796,0.951,802,1.1,803,0.98,804,0.879,825,1.053,827,1.1,848,0.658,849,2.125,857,0.924,859,2.834,864,1.771,879,1.053,893,1.1,894,2.719,906,0.879,910,1.717,911,0.879,912,2.454,913,0.951,914,3.389,915,2.349,916,1.988,917,1.358,918,0.842,919,1.159,920,1.1,921,1.358,922,1.159,923,1.159,924,0.692,925,0.901,926,1.159,927,0.924,928,1.358,929,1.358,930,4.337,931,4.337,932,3.75,933,1.358,934,5.281,935,1.238,936,2.237,937,2.237,938,3.061,939,1.238,940,2.237,941,0.901,942,1.238,943,1.358,944,1.238,945,4.758,946,1.358,947,2.454,948,1.358,949,3.164,950,1.238,951,3.357,952,1.358,953,0.924,954,2.094,955,1.358,956,1.358,957,1.159,958,1.358,959,2.174,960,2.237,961,1.238,962,1.1,963,0.795,964,1.159]],["component/10",[178,0.572]],["title/11-1",[82,36.486,91,27.501]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[82,31.903,83,31.463,175,17.8]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[302,23.94,307,25.486]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11-4",[311,15.809,327,22.733]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["title/11",[20,13.249,21,11.244,22,6.4,82,25.498,83,25.146]],["name/11",[22,0.203,82,0.809,83,0.798,166,0.938]],["text/11",[1,0.732,5,1.623,7,0.668,9,0.773,16,1.095,18,1.633,19,2.372,20,1.179,21,1.493,22,1.346,26,0.953,42,0.94,43,1.24,47,0.864,48,5.388,52,2.41,58,0.638,59,1.459,60,0.895,65,2.111,66,0.745,71,1.005,73,1.474,74,1.298,76,1.008,77,3.224,80,1.784,82,5.813,83,4.426,85,0.758,88,1.094,89,1.04,91,3.176,92,2.41,93,1.395,94,3.024,95,0.953,96,1.995,102,5.403,112,0.811,132,2.322,136,1.98,147,0.884,154,3.091,158,1.075,159,3.221,164,1.075,168,1.474,169,1.899,175,2.351,176,2.162,185,1.308,189,0.78,202,1.135,207,1.24,225,4.232,237,1.057,245,3.485,252,3.534,257,1.742,261,1.542,268,0.69,284,0.864,296,0.819,299,3.441,308,4.764,311,0.424,314,0.828,315,1.184,317,1.008,327,0.61,328,0.745,329,0.657,333,2.41,337,1.347,338,3.51,340,2.972,341,0.811,343,1.075,350,0.745,354,1.023,356,0.874,359,0.906,361,2.874,368,2.961,371,6.966,377,2.982,385,1.211,393,3.268,395,1.04,397,1.04,399,0.94,403,0.657,404,0.657,405,0.657,406,0.657,407,0.657,408,0.657,409,0.657,410,0.657,411,0.657,416,1.4,423,1.04,430,1.4,436,2.281,470,0.928,472,5.092,509,1.757,510,2.41,515,2.527,525,1.272,527,1.579,528,1.704,529,1.813,530,1.942,540,1.596,541,3.698,542,3.631,549,4.391,555,2.352,561,3.574,563,1.732,568,0.94,571,3.234,575,1.704,577,1.075,585,1.395,635,1.907,638,1.211,642,1.023,645,1.732,646,1.514,678,2.063,679,1.704,680,1.057,689,1.057,696,1.211,703,3.151,717,0.855,742,1.135,747,2.782,753,1.514,771,2.535,777,1.308,784,0.979,804,1.211,810,1.211,849,3.284,858,1.272,859,4.39,872,1.449,873,1.514,906,2.111,910,2.281,913,1.308,924,0.953,953,2.218,960,1.704,965,1.514,966,1.24,967,0.979,968,1.704,969,1.704,970,1.596,971,1.87,972,1.87,973,1.704,974,1.87,975,1.395,976,1.704,977,1.449,978,1.704,979,1.87,980,1.87,981,5.189,982,1.87,983,3.26,984,1.87,985,1.308,986,1.87,987,1.87,988,1.87,989,1.349,990,4.428,991,6.464,992,1.87,993,3.26,994,3.26,995,1.272,996,1.449,997,1.87,998,1.87,999,1.596,1000,6.464,1001,8.323,1002,3.26,1003,1.87,1004,1.87,1005,1.87,1006,1.87,1007,1.87,1008,1.87,1009,1.308,1010,4.334,1011,1.87,1012,1.114]],["component/11",[178,0.572]],["title/12-1",[77,25.409,78,32.361,175,17.8]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[302,23.94,307,25.486]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[311,15.809,327,22.733]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12",[20,14.728,21,12.498,22,7.114,78,28.75]],["name/12",[36,1.277,78,1.417]],["text/12",[1,0.77,5,1.671,7,3.12,16,2.236,18,2.146,20,0.928,21,1.745,22,1.421,24,0.784,26,1.945,30,5.943,34,3.751,35,1.838,37,1.311,39,1.173,43,1.306,47,0.91,52,2.507,55,0.872,58,0.671,64,0.798,66,2.42,68,1.031,70,2.223,71,2.053,73,1.542,77,3.644,78,5.181,83,1.761,84,1.121,88,1.994,91,1.346,94,0.77,103,0.744,109,0.977,117,4.31,118,3.493,119,3.493,120,0.764,136,3.691,158,1.132,162,1.22,166,1.196,175,2.672,180,1.997,186,0.881,189,1.422,198,1.651,202,1.196,224,2.261,225,4.078,243,0.821,245,2.431,252,1.559,257,0.791,261,1.613,262,0.72,268,2.241,278,1.152,284,1.576,296,0.863,299,2.99,311,0.447,328,1.358,329,1.585,334,1.132,335,1.715,346,1.68,348,1.378,350,0.784,368,3.919,370,1.719,377,1.132,388,2.943,390,3.224,393,2.656,399,0.99,400,3.155,403,0.692,404,0.692,405,0.692,406,0.692,407,0.692,408,0.692,409,0.692,410,0.692,411,0.692,423,2.507,440,0.813,452,1.594,468,1.095,474,5.49,487,1.469,499,4.136,510,2.507,527,3.459,534,4.125,550,1.34,555,1.42,563,1.811,567,1.526,577,3.826,579,0.99,597,1.173,599,1.275,635,1.152,642,1.078,654,1.838,669,2.643,675,1.113,678,1.246,680,3.038,682,3.555,697,1.306,703,1.196,742,1.196,753,1.594,798,1.927,803,2.46,813,1.469,819,6.399,820,2.761,821,1.526,822,1.795,848,2.184,849,1.246,855,2.468,859,1.173,860,1.152,863,2.643,864,4.385,877,1.34,893,2.761,894,1.594,905,1.811,911,2.207,924,1.003,944,1.795,964,2.909,1013,1.994,1014,1.969,1015,1.594,1016,1.68,1017,1.795,1018,1.526,1019,6.264,1020,1.795,1021,1.795,1022,1.795,1023,1.152,1024,1.969,1025,1.42,1026,1.306,1027,3.41,1028,1.969,1029,1.795,1030,1.469,1031,1.969,1032,1.969,1033,1.969,1034,1.969,1035,1.969,1036,1.969,1037,1.795,1038,1.795,1039,1.795,1040,1.795,1041,1.795,1042,1.969,1043,1.68,1044,1.469,1045,1.969,1046,1.795,1047,2.909,1048,1.969,1049,1.969,1050,1.969,1051,1.969,1052,1.795,1053,1.969,1054,3.41,1055,1.969,1056,1.969,1057,1.969,1058,1.969,1059,1.378]],["component/12",[178,0.572]],["title/13-1",[22,8.008,58,20.775,98,40.399]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[22,8.008,62,23.227,98,40.399]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13-3",[22,7.114,62,20.635,98,35.891,345,41.949]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["title/13-4",[302,23.94,307,25.486]],["name/13-4",[]],["text/13-4",[]],["component/13-4",[]],["title/13-5",[311,15.809,327,22.733]],["name/13-5",[]],["text/13-5",[]],["component/13-5",[]],["title/13",[20,14.728,21,12.498,22,7.114,98,35.891]],["name/13",[36,1.277,98,1.769]],["text/13",[1,2,5,1.283,7,0.654,9,2.637,10,1.868,16,1.075,18,0.462,19,1.463,20,0.871,21,1.341,22,1.36,26,1.696,37,1.639,50,1.675,54,0.819,58,2.974,62,3.325,64,0.742,70,1.87,71,0.987,72,1.161,73,1.447,77,3.041,80,3.494,85,1.729,94,3.412,96,2.804,98,7.288,104,0.958,109,0.909,137,3.075,139,1.241,147,0.866,168,1.447,175,2.548,189,1.334,196,1.479,225,4.525,230,1.531,234,0.972,237,1.808,257,2.565,262,1.559,263,1.017,278,1.871,284,0.846,296,0.802,311,0.415,314,0.81,328,1.274,329,1.797,332,2.591,334,1.839,335,1.609,337,2.112,341,2.769,343,2.45,344,1.418,345,6.914,356,1.496,359,1.55,363,1.652,368,3.505,370,1.625,386,1.652,389,1.675,390,1.55,392,1.943,393,3.501,395,1.017,399,0.92,403,0.643,404,0.643,405,0.643,406,0.643,407,0.643,408,0.643,409,0.643,410,0.643,411,0.643,423,3.821,440,0.756,468,1.017,470,2.538,472,2.025,474,1.779,488,4.702,510,1.017,514,1.569,527,3.092,529,3.549,563,1.7,568,2.571,577,2.45,586,0.932,599,1.185,609,1.562,630,1.725,635,1.07,642,1.751,643,2.122,649,2.122,652,2.308,663,1.906,693,1.052,788,1.668,795,1.668,819,1.281,832,1.002,855,3.761,949,1.906,953,2.177,954,2.73,966,1.214,1012,1.906,1023,1.07,1060,2.337,1061,1.668,1062,1.668,1063,1.668,1064,1.668,1065,7.291,1066,2.48,1067,1.562,1068,2.916,1069,1.993,1070,4.263,1071,1.281,1072,1.281,1073,3.199,1074,3.199,1075,5.112,1076,3.199,1077,5.112,1078,3.199,1079,5.112,1080,3.199,1081,4.263,1082,1.943,1083,4.263,1084,2.025,1085,4.263,1086,6.384,1087,4.263,1088,2.308,1089,1.83,1090,1.83,1091,0.886,1092,1.214,1093,1.482,1094,1.943,1095,3.199,1096,3.045,1097,1.982,1098,1.83,1099,1.83,1100,1.83,1101,1.83,1102,1.83,1103,1.83,1104,1.185,1105,1.83,1106,5.806,1107,4.263,1108,1.83,1109,1.83,1110,1.83,1111,1.83,1112,1.83,1113,1.83,1114,1.83]],["component/13",[178,0.572]],["title/14-1",[5,11.109,16,14.866,17,19.002,20,12.041,21,10.218,22,5.816]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[16,20.467,17,26.163,381,35.632]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[5,13.588,16,18.183,17,23.243,170,35.039]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[5,16.48,16,14.866,17,19.002,71,13.646,296,19.39]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14-5",[5,12.224,16,16.358,17,20.91,71,15.016,103,18.407]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["title/14-6",[16,20.467,17,26.163,150,47.219]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["title/14-7",[16,18.183,17,23.243,196,25.021,366,35.891]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["title/14-8",[15,30.17,22,6.4,66,19.39,366,32.288,426,30.17]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["title/14-9",[5,12.224,16,16.358,17,20.91,46,25.146,206,41.548]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["title/14-10",[16,18.183,17,23.243,128,31.105,366,35.891]],["name/14-10",[]],["text/14-10",[]],["component/14-10",[]],["title/14-11",[5,12.224,16,16.358,17,20.91,84,16.002,1115,30.818]],["name/14-11",[]],["text/14-11",[]],["component/14-11",[]],["title/14-12",[7,24.883,120,27.023]],["name/14-12",[]],["text/14-12",[]],["component/14-12",[]],["title/14-13",[7,24.883,119,40.041]],["name/14-13",[]],["text/14-13",[]],["component/14-13",[]],["title/14-14",[15,25.125,16,13.623,17,17.414,71,12.505,103,15.33,725,20.661,906,26.251]],["name/14-14",[]],["text/14-14",[]],["component/14-14",[]],["title/14-15",[302,23.94,307,25.486]],["name/14-15",[]],["text/14-15",[]],["component/14-15",[]],["title/14-16",[311,15.809,327,22.733]],["name/14-16",[]],["text/14-16",[]],["component/14-16",[]],["title/14",[2,34.257,3,36.829,16,18.183,17,23.243]],["name/14",[2,0.978,3,1.051,16,0.519,17,0.663]],["text/14",[1,1.955,2,0.49,5,2.318,7,2.668,9,0.602,12,0.838,13,0.452,15,4.445,16,3.45,17,4.245,18,2.07,19,0.667,20,2.138,21,1.657,22,1.365,23,0.775,26,1.89,30,0.798,33,0.885,34,1.766,35,0.786,36,0.37,37,1.368,38,0.526,39,0.869,44,0.944,46,1.351,47,1.209,50,1.083,53,0.888,54,1.392,55,0.646,56,0.903,58,0.264,60,0.698,62,0.556,64,1.061,66,3.747,68,2.077,69,1.743,70,1.138,71,2.11,72,0.281,74,1.042,77,2.319,84,2.059,85,1.261,90,0.423,91,1.033,94,0.57,96,0.561,97,0.405,103,1.64,116,2.977,118,1.189,119,2.691,120,1.683,127,1.351,128,1.787,132,0.652,137,0.652,139,0.802,140,0.626,142,1.918,144,2.51,145,1.53,146,0.461,149,0.944,155,0.452,159,0.798,161,1.53,164,1.503,165,2.562,167,0.944,168,1.407,169,2.318,170,0.944,175,2.222,177,0.526,180,0.342,181,0.384,186,1.171,196,2.006,198,2.101,202,0.47,206,1.765,211,1.39,213,0.69,218,0.541,224,0.967,225,3.736,234,0.775,243,1.297,252,1.196,257,2.6,262,1.828,268,0.965,270,0.838,276,0.526,283,0.399,284,0.956,292,0.599,296,0.906,302,0.266,306,0.47,308,0.43,310,0.47,311,0.175,312,1.694,314,0.342,323,1.543,328,1.042,329,1.394,333,0.43,341,0.335,342,0.513,348,0.541,350,1.579,351,2.412,354,2.171,356,1.663,366,4.418,368,1.25,370,0.997,378,1.944,381,0.452,383,1.723,384,2.412,388,2.375,390,4.109,393,1.156,400,0.541,403,0.272,404,0.272,405,0.272,406,0.272,407,0.272,408,0.272,409,0.513,410,0.272,411,0.272,416,0.888,420,0.66,422,0.599,423,2.778,426,5.011,430,1.123,434,3.238,439,0.37,440,0.855,441,2.081,449,0.577,457,0.47,464,2.205,483,0.501,509,1.918,511,0.715,514,0.715,516,0.992,527,0.375,547,3.507,549,3.238,554,0.541,561,4.045,563,1.39,567,0.599,568,1.04,569,5.073,572,0.66,577,2.045,579,1.316,581,2.567,583,1.603,591,0.599,592,0.49,594,0.885,595,0.526,608,0.66,613,1.78,633,0.733,634,0.626,642,1.432,654,2.524,675,0.824,682,1.21,693,0.838,696,0.501,717,1.984,725,1.585,738,0.501,784,0.405,785,0.452,786,0.903,798,0.824,799,1.13,810,0.944,812,1.83,832,1.947,846,2.881,881,0.444,901,0.626,904,1.181,905,1.099,927,1.408,940,5.511,941,0.513,963,2.081,966,1.735,967,0.405,970,1.765,1013,3.093,1018,0.599,1059,1.02,1067,0.66,1104,2.303,1115,2.963,1116,0.705,1117,0.967,1118,7.174,1119,0.66,1120,0.599,1121,0.773,1122,0.599,1123,0.773,1124,0.773,1125,1.02,1126,0.626,1127,0.705,1128,0.773,1129,0.773,1130,0.461,1131,1.329,1132,0.773,1133,1.675,1134,0.705,1135,0.705,1136,1.244,1137,0.705,1138,0.66,1139,0.66,1140,0.773,1141,0.66,1142,0.773,1143,5.163,1144,3.703,1145,3.995,1146,0.773,1147,2.068,1148,0.773,1149,0.773,1150,0.66,1151,0.773,1152,4.339,1153,3.036,1154,0.773,1155,0.773,1156,0.773,1157,0.705,1158,0.773,1159,4.339,1160,0.773,1161,0.773,1162,0.773,1163,1.458,1164,1.458,1165,1.458,1166,1.458,1167,1.458,1168,1.458,1169,4.268,1170,1.765,1171,2.616,1172,0.773,1173,2.068,1174,0.773,1175,2.068,1176,2.068,1177,0.66,1178,0.705,1179,0.773,1180,2.232,1181,0.773,1182,2.068,1183,2.068,1184,2.068,1185,2.068,1186,2.068,1187,0.773,1188,0.773,1189,0.773,1190,1.458,1191,1.458,1192,1.458,1193,1.458,1194,1.458,1195,0.541,1196,0.773,1197,0.773,1198,0.773,1199,0.773,1200,0.773,1201,0.773,1202,0.773,1203,1.458,1204,0.773,1205,0.773,1206,3.11,1207,3.11,1208,3.11,1209,3.11,1210,3.11,1211,0.773,1212,0.773,1213,0.773,1214,0.773,1215,0.773,1216,2.068,1217,1.458,1218,0.773,1219,1.458,1220,1.458,1221,1.458,1222,1.458,1223,1.458,1224,0.773,1225,0.558,1226,0.798,1227,0.838,1228,2.068,1229,0.773,1230,0.773,1231,0.773,1232,0.558,1233,0.773,1234,0.773,1235,0.705,1236,1.244,1237,0.705,1238,0.705,1239,0.705,1240,0.773,1241,0.773,1242,0.773,1243,0.599,1244,0.705,1245,0.66,1246,1.329,1247,0.705,1248,1.589,1249,1.181,1250,1.503,1251,0.885,1252,0.705,1253,1.13,1254,1.052,1255,1.088,1256,1.329,1257,1.181,1258,2.881,1259,0.66,1260,0.705,1261,0.66,1262,0.501,1263,0.66,1264,0.66,1265,0.66,1266,0.66]],["component/14",[178,0.572]],["title/15-1",[1267,53.953]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[16,14.866,17,19.002,22,5.816,26,12.929,103,16.728,579,22.251]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[302,23.94,307,25.486]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[311,15.809,327,22.733]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15",[16,18.183,17,23.243,71,16.691,103,20.461]],["name/15",[16,0.519,17,0.663,71,0.476,103,0.584]],["text/15",[1,1.616,2,1.561,3,1.678,5,2.183,7,1.904,9,1.019,12,4.317,16,3.779,17,4.753,18,1.754,19,1.128,20,2.044,21,0.954,22,1.415,26,2.195,28,1.274,33,1.498,34,1.225,36,1.977,37,2.05,39,1.469,49,1.561,53,1.059,54,1.849,55,1.092,58,2.368,60,2.984,62,2.647,64,1,66,2.123,68,3.265,69,0.861,71,2.912,72,0.895,73,1.116,74,1.645,84,1.752,85,2.162,96,2.05,103,2.84,127,3.586,128,3.064,136,1.498,139,2.693,142,4.049,144,3.947,155,2.416,161,1.443,164,1.418,165,2.261,167,3.451,168,2.411,169,1.081,175,1.822,180,1.092,181,1.225,189,1.723,196,3.21,198,1.195,218,2.891,234,2.195,243,1.029,257,2.506,258,1.84,262,2.54,268,0.91,311,0.56,314,1.092,328,1.645,329,1.874,333,1.371,335,2.078,337,1.707,341,1.792,350,1.645,351,1.371,354,1.35,356,1.153,366,5.29,368,2.142,370,1.575,377,1.418,386,1.274,403,1.874,404,0.867,405,0.867,406,0.867,407,0.867,408,0.867,409,0.867,410,0.867,411,0.867,420,3.525,422,3.202,426,4.302,430,2.289,431,1.726,440,2.868,441,1.443,470,1.225,494,2.105,505,1.779,516,1.678,563,2.832,579,4.207,580,1.998,591,1.912,599,1.597,613,2.811,654,1.33,675,3.012,678,1.561,683,1.998,710,1.678,717,1.889,725,5.406,776,1.998,796,1.726,810,2.675,848,1.195,905,1.31,906,1.597,963,4.393,1013,2.416,1060,1.128,1069,1.153,1115,2.615,1125,2.891,1138,2.105,1177,4.549,1226,2.261,1227,1.418,1238,2.248,1239,2.248,1250,1.418,1268,1.998,1269,4.131,1270,2.467,1271,3.766,1272,2.105,1273,2.248,1274,2.467,1275,1.84,1276,2.248,1277,2.467]],["component/15",[178,0.572]],["title/16-1",[5,13.588,16,18.183,17,23.243,69,18.883]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[16,20.467,17,26.163,1125,42.628]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[5,12.224,16,16.358,17,20.91,69,16.987,170,31.521]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[7,13.364,16,12.572,17,16.07,18,9.452,69,13.056,119,21.506,175,10.934,302,12.858]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[7,13.364,16,12.572,17,16.07,18,9.452,69,13.056,120,14.514,175,10.934,302,12.858]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[5,12.224,16,16.358,17,20.91,71,15.016,296,21.337]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16-7",[5,12.224,16,16.358,17,20.91,84,16.002,85,19.745]],["name/16-7",[]],["text/16-7",[]],["component/16-7",[]],["title/16-8",[302,23.94,307,25.486]],["name/16-8",[]],["text/16-8",[]],["component/16-8",[]],["title/16-9",[311,15.809,327,22.733]],["name/16-9",[]],["text/16-9",[]],["component/16-9",[]],["title/16",[5,13.588,16,18.183,17,23.243,170,35.039]],["name/16",[5,0.491,16,0.657,17,0.84]],["text/16",[1,2.182,2,0.643,3,0.692,5,2.517,7,3.646,9,0.778,12,1.082,15,2.699,16,3.636,17,4.658,18,2.298,19,1.499,20,2.154,21,1.434,22,1.06,23,2.045,26,1.815,33,0.617,34,2.769,35,1.767,37,1.675,39,1.121,47,0.87,49,1.664,53,2.395,55,0.45,59,1.467,60,0.486,62,1.002,66,2.221,68,0.532,69,2.264,70,0.688,71,2.717,72,0.683,74,0.749,84,2.601,85,2.734,86,0.788,87,1.569,90,1.794,91,1.294,94,1.506,97,0.986,103,1.455,116,2.293,118,1.082,119,4.356,120,2.409,127,3.482,128,0.584,132,2.496,133,0.711,139,0.73,142,3.985,144,4.415,145,0.594,146,1.121,147,0.89,149,2.122,151,0.432,159,0.556,161,1.101,165,2.107,168,0.851,169,1.909,170,1.218,173,1.606,175,1.405,181,0.505,185,2.294,186,1.467,194,0.63,196,1.215,198,2.11,202,0.617,207,0.674,211,1,213,3.816,215,0.711,217,0.556,224,1.743,225,1.002,234,1,237,0.574,243,1.817,252,0.465,257,0.408,262,0.372,268,1.922,270,2.213,279,0.711,284,0.47,296,1.152,302,1.126,306,1.596,311,0.231,314,0.833,321,0.605,327,1.07,329,1.354,333,1.046,334,0.584,335,0.946,337,1.8,341,1.422,348,0.711,350,1.533,351,1.461,356,2.248,359,1.588,363,1.693,366,2.174,368,2.375,370,1.468,377,1.511,383,0.492,384,1.823,388,1.439,393,3.15,399,0.511,403,0.662,404,0.357,405,0.357,406,0.357,407,0.357,408,0.357,409,0.924,410,0.357,411,0.357,412,0.674,413,0.867,415,1.524,416,3.175,417,0.674,423,2.673,424,4.382,425,0.867,426,2.031,427,0.733,428,0.867,430,1.653,431,1.839,434,1.961,439,0.486,440,1.591,441,3.633,464,1.461,468,0.565,477,0.867,489,1.015,494,0.867,495,0.867,496,1.281,497,0.926,498,2.82,499,0.692,500,0.926,501,0.926,502,2.984,503,0.926,504,1.716,505,2.777,506,0.926,507,2.231,508,0.926,514,1.607,543,0.605,547,2.889,579,0.511,592,0.643,594,1.596,663,1.566,675,1.063,689,0.574,693,1.511,696,1.218,715,0.692,717,0.465,726,0.617,804,0.658,812,1.839,825,0.788,826,0.823,848,0.492,877,0.692,902,1.962,904,2.128,905,2.045,911,2.122,941,1.743,963,1.537,1013,1.101,1018,0.788,1059,1.317,1082,1.596,1084,1.664,1115,0.643,1117,0.674,1120,0.788,1125,2.694,1138,0.867,1139,0.867,1144,5.536,1177,0.867,1227,1.082,1244,0.926,1245,0.867,1246,4.382,1247,1.716,1248,2.645,1249,1.524,1250,2.763,1251,2.338,1252,0.926,1253,1.459,1254,1.358,1255,1.961,1256,0.926,1257,1.524,1258,3.527,1259,0.867,1260,0.926,1261,0.867,1262,0.658,1263,2.798,1264,0.867,1265,0.867,1266,0.867,1276,0.926,1278,0.711,1279,0.926,1280,1.016,1281,0.867,1282,0.758,1283,1.016,1284,2.075,1285,1.016,1286,3.278,1287,1.016,1288,1.016,1289,1.606,1290,1.016,1291,1.016,1292,1.016,1293,1.016,1294,2.396,1295,1.016,1296,2.396,1297,2.396,1298,1.882,1299,2.628,1300,1.882,1301,0.788,1302,1.882,1303,1.524,1304,2.984,1305,3.509,1306,3.285,1307,2.553,1308,1.016,1309,0.926,1310,1.896,1311,1.524,1312,0.926,1313,0.926,1314,1.016,1315,0.867,1316,0.711,1317,0.788,1318,0.758,1319,0.788,1320,0.788,1321,0.867,1322,0.926,1323,0.926,1324,0.926,1325,0.926,1326,0.926,1327,1.016,1328,1.016,1329,1.882,1330,1.016,1331,1.016,1332,1.016,1333,0.733,1334,0.733,1335,1.016,1336,0.733,1337,1.016,1338,1.016,1339,0.926,1340,1.716,1341,0.788,1342,1.016,1343,1.016,1344,0.867,1345,1.016,1346,2.243,1347,0.758,1348,0.711]],["component/16",[178,0.572]],["title/17-1",[7,17.389,84,16.002,120,18.885,139,18.885,654,26.247]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[7,17.389,84,16.002,120,18.885,133,34.069,139,18.885]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[7,17.389,132,21.786,196,22.509,289,29.567,514,23.872]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[24,17.621,120,17.162,186,19.799,317,23.853,378,21.694,689,25.004]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17-5",[7,17.389,22,6.4,91,19.218,120,18.885,175,14.226]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["title/17-6",[302,23.94,307,25.486]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["title/17-7",[311,15.809,327,22.733]],["name/17-7",[]],["text/17-7",[]],["component/17-7",[]],["title/17",[7,23.443,34,21.967,35,23.853,71,13.646,120,17.162]],["name/17",[7,0.828,34,0.634,35,0.688,120,0.495]],["text/17",[4,1.068,5,0.999,7,3.837,10,0.859,18,2.283,19,1.248,20,1.939,21,1.238,22,1.331,24,1.972,26,2.439,30,3.772,34,3.159,35,3.43,36,0.508,37,1.306,46,0.548,54,1.519,55,1.504,58,1.357,59,0.475,60,0.508,65,0.687,69,1.87,70,2.429,71,2.435,72,1.232,74,1.087,76,0.572,77,0.817,78,0.564,84,2.787,85,3.703,87,0.508,91,2.115,92,0.59,94,1.068,100,0.886,103,1.699,116,3.61,117,0.687,118,1.952,119,0.61,120,4.156,129,0.658,130,2.536,131,1.3,132,3.284,133,6.021,134,1.269,135,0.823,137,1.519,139,3.183,147,0.502,151,2.577,164,1.126,169,0.465,175,1.859,186,3.952,189,0.817,196,0.491,213,1.882,219,0.743,225,3.663,230,0.508,237,1.919,243,3.222,252,0.896,258,2.036,262,1.811,263,0.59,268,1.976,270,1.568,276,2.708,277,1.517,278,0.621,283,1.754,284,1.262,289,1.19,296,0.465,307,0.717,311,0.241,313,0.766,314,1.762,315,0.672,317,3.088,322,0.672,328,1.087,329,1.58,333,2.98,334,0.61,335,0.534,337,0.439,341,0.461,350,0.78,351,0.59,356,0.916,359,0.514,361,1.81,363,0.548,368,2.557,370,1.295,378,0.961,381,1.596,383,0.949,384,1.09,388,0.581,389,0.556,390,0.514,392,0.645,393,2.469,397,0.59,403,0.373,404,0.373,405,0.373,406,0.373,407,0.373,408,0.373,409,0.373,410,0.373,411,0.373,412,0.704,416,1.93,417,0.704,430,0.842,440,2.045,441,0.621,445,1.371,446,2.311,449,0.792,464,2.498,468,3.691,470,0.973,472,0.672,483,1.269,489,0.572,496,1.857,499,2.311,513,1.986,514,1.665,516,0.722,533,1.542,568,1.372,586,0.999,595,1.334,597,1.167,598,0.743,613,0.722,616,0.6,617,1.334,630,1.471,633,1.708,634,1.587,635,1.146,638,0.687,643,1.3,645,2.114,647,1.786,652,0.766,654,2.669,656,0.86,664,0.968,668,0.632,675,0.6,684,1.3,689,1.107,725,1.391,771,1.596,772,0.722,780,1.657,784,1.026,785,1.986,791,0.743,798,1.107,801,0.792,812,0.743,827,0.86,829,1.672,842,1.672,845,1.462,877,0.722,902,1.73,949,1.167,959,1.767,1013,1.146,1052,3.095,1059,4.646,1060,0.485,1069,0.496,1091,1.645,1092,1.81,1094,1.657,1096,2.677,1097,1.214,1119,1.672,1136,0.906,1226,1.073,1227,0.61,1248,2.416,1249,2.21,1250,3.08,1251,1.19,1253,0.823,1254,1.414,1257,3.639,1262,0.687,1334,0.766,1349,0.968,1350,0.704,1351,2.898,1352,1.786,1353,0.906,1354,1.214,1355,0.968,1356,1.062,1357,1.062,1358,1.062,1359,0.968,1360,2.329,1361,0.704,1362,3.084,1363,1.062,1364,1.062,1365,1.062,1366,1.062,1367,3.395,1368,2.488,1369,1.062,1370,1.062,1371,1.96,1372,1.062,1373,0.792,1374,1.062,1375,1.062,1376,1.062,1377,1.062,1378,1.062,1379,0.968,1380,1.062,1381,1.062,1382,0.968,1383,1.062,1384,1.062,1385,1.96,1386,1.96,1387,1.96,1388,1.062,1389,1.96,1390,1.462,1391,1.786,1392,1.96,1393,1.96,1394,1.786,1395,2.729,1396,3.396,1397,1.96,1398,3.095,1399,1.96,1400,1.96,1401,1.786,1402,1.672,1403,1.062,1404,1.062,1405,1.062,1406,1.062,1407,0.743,1408,0.823,1409,1.062,1410,1.062,1411,0.968,1412,1.062,1413,2.329,1414,1.214,1415,0.86,1416,0.86,1417,0.743,1418,0.792,1419,1.462,1420,1.672,1421,0.86,1422,0.672,1423,1.24,1424,1.3,1425,0.968,1426,0.968,1427,1.062,1428,1.96,1429,1.062,1430,2.729,1431,1.062,1432,0.968,1433,0.968,1434,3.396,1435,1.587,1436,0.968,1437,0.823,1438,1.062]],["component/17",[178,0.572]],["title/18-1",[22,7.114,84,17.788,446,36.829,1262,35.039]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[175,15.814,446,36.829,703,32.867,1262,35.039]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[83,35.983,1439,63.511]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18-4",[302,23.94,307,25.486]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["title/18-5",[311,15.809,327,22.733]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["title/18",[7,14.481,18,10.242,34,20.131,35,21.859,71,12.505,118,23.304,119,23.304]],["name/18",[7,0.552,34,0.767,35,0.833,119,0.888]],["text/18",[7,2.78,18,2.698,19,0.868,20,2.203,21,1.99,22,1.211,26,1.281,30,4.837,34,1.64,35,1.023,37,0.73,38,1.292,47,2.027,48,1.471,50,1.73,53,0.815,54,2.917,55,1.463,60,1.581,68,0.994,70,1.918,71,2.011,72,0.689,73,0.858,74,1.746,77,0.792,78,1.755,82,0.994,84,2.558,85,4.165,88,1.11,89,1.055,91,1.731,94,2.051,96,0.73,103,0.718,106,1.537,117,1.229,118,4.654,119,5.548,120,0.736,139,2.529,146,1.131,147,2.48,164,1.091,165,1.039,168,1.494,169,1.447,175,2.047,186,0.849,189,0.792,194,1.176,224,6.215,243,3.686,252,3.204,262,0.694,268,0.7,278,3.067,283,0.98,284,2.027,311,0.431,314,2.631,327,1.078,328,1.315,329,1.542,335,1.661,343,1.898,344,2.56,350,2.791,354,1.039,368,3.63,370,0.724,377,2.52,383,1.6,386,0.98,393,3.359,399,1.661,401,2.56,403,0.667,404,0.667,405,0.667,406,0.667,407,0.667,408,1.161,409,0.667,410,0.667,411,0.667,416,1.419,430,1.419,436,4.562,440,2.694,444,1.73,445,5.859,446,7.636,447,3.011,448,1.73,449,6.042,450,3.011,455,1.259,468,1.055,474,1.836,486,4.246,489,1.781,495,2.819,511,0.931,516,2.248,533,1.073,534,1.176,558,1.369,586,1.683,613,2.248,635,1.11,646,1.537,685,1.537,693,1.091,698,1.62,703,4.255,775,1.471,785,1.11,798,1.073,819,1.328,825,1.471,878,1.62,910,1.328,914,1.11,963,1.11,989,1.369,1015,1.537,1019,2.311,1059,2.311,1116,1.73,1122,2.56,1135,1.73,1226,1.808,1262,6.068,1263,5.98,1349,1.73,1350,1.259,1414,1.176,1439,1.73,1440,1.73,1441,1.898,1442,1.62,1443,1.73,1444,1.898,1445,1.73,1446,1.898,1447,1.898,1448,3.303,1449,1.898,1450,1.898,1451,1.898,1452,1.898,1453,1.898,1454,2.383,1455,1.898,1456,1.898,1457,1.898,1458,1.898,1459,1.898,1460,1.62,1461,1.898,1462,1.898,1463,1.898,1464,1.898,1465,1.898,1466,1.898,1467,3.303,1468,3.303,1469,2.248,1470,1.898,1471,7.008,1472,1.62,1473,1.898,1474,1.62,1475,1.898,1476,1.537,1477,1.898,1478,1.898,1479,1.898,1480,1.898,1481,1.898,1482,1.416,1483,1.898,1484,1.898,1485,1.898]],["component/18",[178,0.572]],["title/19-1",[7,19.329,22,7.114,117,35.039,175,15.814]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[302,23.94,307,25.486]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[311,15.809,327,22.733]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19",[7,17.389,20,13.249,21,11.244,22,6.4,117,31.521]],["name/19",[7,0.699,22,0.257,117,1.267]],["text/19",[1,1.522,5,0.409,7,3.975,9,1.607,10,0.714,12,3.704,16,1.307,18,1.828,20,1.754,21,1.671,22,1.417,26,1.74,28,0.841,30,0.891,32,1.39,34,4.142,35,1.556,37,2.07,47,0.753,53,1.67,56,1.009,58,1.836,60,2.85,62,0.621,66,2.882,70,1.423,71,1.66,74,0.649,77,3.48,78,3.845,84,1.769,85,1.908,87,0.779,91,2.857,92,2.616,93,1.215,94,2.33,103,0.616,116,1.72,117,7.056,136,0.989,137,2.105,139,1.825,142,1.556,165,0.891,167,1.054,175,2.115,180,2.637,194,1.009,198,2.279,223,1.39,225,4.275,238,1.08,261,1.839,262,1.056,268,2.789,311,0.37,314,1.722,328,0.649,329,2.545,334,1.659,335,0.819,337,1.193,339,1.485,341,0.706,343,1.659,350,1.874,357,1.319,358,1.14,365,4.649,368,3.352,370,1.794,376,1.14,377,3.423,378,1.907,383,1.398,388,5.19,390,1.883,392,2.362,393,2.554,397,0.905,399,2.366,400,2.02,403,0.573,404,0.573,405,0.573,406,0.573,407,0.573,408,0.573,409,0.573,410,0.573,411,0.573,416,2.949,419,2.083,445,2.721,474,0.905,512,0.953,527,0.789,534,1.009,558,1.175,562,1.215,616,1.632,638,1.054,652,2.805,654,3.702,678,1.031,680,2.198,684,1.08,685,1.319,686,1.215,696,1.054,697,1.08,723,2.154,725,1.471,739,1.175,785,0.953,798,0.92,800,1.319,803,2.805,812,1.14,818,1.14,832,0.891,848,1.398,858,3.663,859,1.72,903,1.262,913,1.14,924,1.982,963,1.689,1009,2.02,1019,2.721,1029,1.485,1047,1.39,1117,4.554,1150,1.39,1243,1.262,1278,3.767,1334,1.175,1351,1.39,1486,1.39,1487,1.629,1488,1.629,1489,2.154,1490,1.629,1491,1.629,1492,5.383,1493,1.629,1494,1.319,1495,4.705,1496,3.889,1497,7.852,1498,4.705,1499,2.887,1500,4.705,1501,2.887,1502,1.629,1503,1.629,1504,1.629,1505,1.629,1506,4.907,1507,6.445,1508,1.629,1509,1.629,1510,1.629,1511,1.629,1512,1.629,1513,1.629,1514,2.646,1515,3.545,1516,1.629,1517,3.545,1518,2.887,1519,1.485,1520,1.629,1521,1.629,1522,1.485,1523,1.629,1524,1.629,1525,1.629,1526,1.629,1527,1.629,1528,1.629,1529,1.629,1530,1.629,1531,1.629,1532,1.629,1533,1.629,1534,1.629,1535,1.629,1536,1.629,1537,1.629,1538,1.629,1539,1.629,1540,1.629,1541,1.629,1542,1.485,1543,1.319]],["component/19",[178,0.572]],["title/20-1",[7,24.883,34,34.59]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[7,24.883,1019,48.751]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[311,15.809,327,22.733]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20",[5,15.295,6,30.245,115,47.219]],["name/20",[5,0.388,6,0.767,64,0.626,115,1.197]],["text/20",[7,2.455,18,1.506,20,1.282,21,1.088,22,0.904,30,1.583,36,2.255,42,1.454,43,3.124,50,2.467,53,2.023,55,1.28,65,3.05,72,2.163,74,3.014,77,3.157,84,0.95,85,2.418,90,2.579,91,3.522,94,2.69,96,3.648,103,2.254,115,8.357,116,1.723,119,4.665,120,1.122,132,3.632,139,1.122,154,2.807,169,1.267,175,2.607,186,1.294,189,1.206,196,1.337,224,1.918,225,4.321,237,3.885,252,3.711,257,3.439,258,3.516,262,3.264,268,1.738,296,3.013,307,1.058,311,0.656,328,1.152,329,1.017,364,2.342,368,3.439,393,3.182,399,1.454,403,1.017,404,1.017,405,1.017,406,1.017,407,1.017,408,1.017,409,1.017,410,1.017,411,1.017,439,2.255,440,1.195,446,6.071,474,3.315,475,5.397,496,1.968,509,1.559,514,1.418,515,2.241,527,2.282,529,2.619,534,1.792,548,4.621,594,1.756,638,1.872,696,1.872,715,5.151,745,5.328,775,4.621,780,2.861,782,2.023,798,1.634,813,3.516,818,3.297,819,3.297,848,2.282,881,2.708,905,1.536,910,2.023,965,2.342,1019,5.988,1059,2.023,1253,5.328,1254,3.399,1262,1.872,1282,3.516,1436,2.636,1494,2.342,1544,2.892,1545,4.711,1546,2.892,1547,2.892,1548,4.295,1549,4.711,1550,3.297,1551,2.636,1552,4.711,1553,4.295,1554,2.892,1555,4.295,1556,4.711,1557,2.892,1558,4.711,1559,2.892,1560,2.468,1561,2.086,1562,2.636,1563,6.874,1564,2.892,1565,4.711,1566,2.636,1567,2.892,1568,2.892]],["component/20",[178,0.572]],["title/21-1",[72,25.281,1569,63.511]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[22,9.158,58,23.76]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[22,8.008,24,24.262,26,17.8]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[22,8.008,26,17.8,62,23.227]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[10,26.697,22,8.008,26,17.8]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[302,23.94,307,25.486]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21-7",[311,15.809,327,22.733]],["name/21-7",[]],["text/21-7",[]],["component/21-7",[]],["title/21",[22,7.114,58,18.457,71,16.691,72,19.639]],["name/21",[5,0.388,22,0.203,58,0.527,73,0.699]],["text/21",[0,1.034,1,1.845,4,0.901,5,0.578,6,0.433,8,0.594,10,1.009,16,1.913,17,0.375,18,1.873,20,1.924,21,1.977,22,1.445,24,1.553,26,2.257,28,1.189,30,0.478,37,1.664,38,3.209,42,2.372,47,0.404,49,0.553,50,0.457,53,1.243,54,0.731,55,1.02,58,2.346,61,2.16,62,2.275,64,0.663,69,0.57,70,1.855,71,2.699,72,2.343,73,0.395,74,0.651,75,1.034,77,2.784,79,0.53,84,0.287,85,0.354,88,0.511,89,1.28,91,0.345,94,1.526,95,0.445,99,0.445,100,1.763,102,2.266,103,1.095,109,0.433,111,0.52,112,1.691,118,2.914,120,2.314,127,1.189,128,0.939,129,1.427,130,3.482,132,1.03,137,1.296,138,0.63,139,0.893,142,0.471,144,0.553,147,0.413,153,0.992,154,0.52,156,0.52,158,0.502,159,0.478,169,0.383,175,1.95,180,0.723,181,1.143,186,1.532,188,1.179,189,0.681,193,0.553,196,1.339,198,0.791,211,1.223,213,0.773,225,4.104,230,0.782,234,0.868,237,0.493,242,1.965,243,0.364,245,3.811,252,1.979,261,0.773,262,1.059,263,0.908,267,0.677,268,0.849,274,0.63,276,0.594,278,0.956,284,0.755,296,1.009,301,1.785,302,0.995,311,0.198,314,0.387,321,0.52,322,1.034,328,0.348,329,1.371,332,0.707,337,1.415,341,0.709,356,0.764,359,1.115,361,5.023,363,0.844,366,1.083,368,1.376,370,1.487,378,0.428,384,0.485,390,1.402,392,0.53,393,1.609,402,1.179,403,0.307,404,0.307,405,0.307,406,0.307,407,0.307,408,0.307,409,0.307,410,0.307,411,0.307,412,0.579,416,1.471,419,0.63,440,0.675,454,3.327,470,1.7,476,4.981,498,0.565,499,1.112,510,0.485,511,0.428,512,0.956,514,0.428,518,0.52,523,6.168,524,0.707,533,3.372,546,1.034,568,1.456,586,1.745,599,1.058,614,0.579,617,1.112,626,1.347,630,0.881,635,0.511,642,1.874,649,1.527,652,0.63,663,0.973,669,1.266,680,0.923,682,1.694,717,0.399,725,0.445,771,0.511,777,1.143,780,0.53,801,1.219,818,1.143,824,0.881,832,1.26,845,0.651,848,0.423,849,0.553,855,0.478,859,0.973,860,0.511,906,0.565,918,5.242,924,0.445,949,0.973,967,0.457,1009,0.611,1012,0.52,1023,0.511,1060,1.566,1069,0.408,1072,0.611,1082,0.992,1084,1.034,1091,2.096,1092,1.92,1093,1.323,1094,0.992,1096,0.973,1117,0.579,1125,0.611,1126,1.323,1130,2.04,1262,4.18,1271,1.489,1284,4.225,1289,2.922,1307,1.92,1333,4.658,1336,0.63,1348,0.611,1353,0.745,1367,0.745,1401,0.796,1414,2.416,1417,1.611,1437,0.677,1514,6.017,1543,1.323,1553,2.099,1561,1.179,1569,2.099,1570,7.512,1571,0.651,1572,0.677,1573,1.634,1574,6.221,1575,0.651,1576,0.873,1577,0.745,1578,0.873,1579,0.63,1580,0.745,1581,1.491,1582,1.527,1583,0.873,1584,1.634,1585,3.554,1586,0.873,1587,0.873,1588,1.394,1589,0.873,1590,0.873,1591,0.873,1592,0.873,1593,0.873,1594,0.873,1595,0.873,1596,0.873,1597,1.634,1598,0.677,1599,0.873,1600,0.707,1601,0.796,1602,0.873,1603,0.873,1604,1.634,1605,2.895,1606,1.634,1607,0.873,1608,1.489,1609,0.53,1610,0.651,1611,0.873,1612,0.873,1613,0.873,1614,0.873,1615,0.873,1616,5.44,1617,2.639,1618,1.489,1619,1.489,1620,1.489,1621,5.229,1622,1.634,1623,1.634,1624,8.842,1625,8.842,1626,0.873,1627,0.796,1628,0.873,1629,1.266,1630,0.796,1631,0.873,1632,1.634,1633,1.489,1634,0.707,1635,1.489,1636,1.219,1637,2.099,1638,0.873,1639,6.676,1640,6.676,1641,6.676,1642,0.873,1643,2.303,1644,0.873,1645,2.303,1646,1.634,1647,1.489,1648,0.873,1649,0.873,1650,0.873,1651,0.873,1652,0.796,1653,0.873,1654,0.873,1655,0.873,1656,0.873,1657,0.873,1658,0.873,1659,0.873,1660,1.112,1661,0.873,1662,2.303,1663,1.634,1664,0.873,1665,0.873,1666,0.873,1667,0.873,1668,0.873,1669,0.873,1670,0.873,1671,0.873,1672,0.873,1673,0.873,1674,0.873,1675,0.873,1676,0.873,1677,1.634,1678,1.634,1679,0.873,1680,0.873,1681,0.873,1682,0.873,1683,0.873,1684,0.873,1685,0.873,1686,0.873,1687,0.873,1688,0.873,1689,0.873,1690,1.634,1691,0.745,1692,0.873,1693,0.745,1694,1.634,1695,1.634,1696,0.873,1697,0.873,1698,0.873,1699,0.745,1700,1.179,1701,1.634,1702,1.634,1703,1.634,1704,1.634,1705,1.634,1706,1.634,1707,1.634,1708,1.634,1709,0.796,1710,0.796,1711,0.63]],["component/21",[178,0.572]],["title/22-1",[311,15.809,327,22.733]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22",[0,28.007,4,17.312,20,12.041,21,10.218,22,5.816,402,31.92]],["name/22",[0,1.238,4,0.765,402,1.411]],["text/22",[1,2.293,4,3.848,18,2.31,20,2.489,21,2.561,22,1.51,26,1.712,51,5.001,62,2.235,66,2.334,68,3.069,70,2.144,71,1.807,72,2.127,74,3.195,75,5.078,99,2.986,101,4.101,102,4.201,103,3.458,104,3.069,105,3.069,108,4.101,109,3.983,110,5.193,111,4.779,120,2.273,127,3.027,128,3.368,129,3.632,130,2.595,169,3.515,175,1.712,262,2.934,295,4.746,296,2.568,311,1.33,322,3.71,329,2.061,350,2.334,403,2.061,404,2.061,405,2.061,406,2.061,407,2.061,408,2.061,409,2.061,410,2.061,411,2.061,693,3.368,742,3.559,902,2.986,1091,2.839,1422,3.71,1579,4.228,1580,5.001,1712,5.343,1713,4.543,1714,5.343,1715,5.001]],["component/22",[178,0.572]],["title/23-1",[20,12.041,21,10.218,22,5.816,71,13.646,152,30.109,430,19.002]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[20,12.041,21,10.218,22,5.816,58,15.089,152,30.109,153,26.87]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[22,5.816,94,17.312,96,17.014,152,30.109,306,26.87,1716,40.335]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23-4",[72,25.281,175,20.357]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["title/23-5",[302,23.94,307,25.486]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["title/23-6",[311,15.809,327,22.733]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["title/23",[14,27.259,152,41.455,153,36.995]],["name/23",[14,0.875,152,1.331,153,1.188]],["text/23",[5,1,14,1.782,16,0.793,18,1.711,19,1.079,20,2.234,21,1.696,22,1.413,26,1.163,35,2.784,37,0.908,44,1.528,50,1.236,53,1.014,54,1.782,58,2.309,59,1.782,60,1.13,70,0.864,71,2.088,72,2.979,73,1.068,77,2.154,79,3.136,80,2.826,87,2.902,91,3.373,92,4.083,94,2.02,95,3.09,96,3.286,99,1.203,109,1.172,118,1.357,139,2.352,152,7.312,153,6.136,156,1.406,159,2.826,166,2.418,167,1.528,175,2.283,180,1.045,181,1.172,196,2.803,202,1.434,207,1.566,225,4.277,237,1.334,245,1.273,252,3.358,257,2.437,262,1.457,263,1.313,268,1.904,282,1.566,300,3.343,306,1.434,311,0.536,317,3.269,329,1.4,337,2.505,341,2.63,356,1.104,359,2.937,363,2.057,365,2.872,368,2.075,370,0.9,382,1.762,383,1.143,386,1.219,388,2.179,390,2.501,393,2.255,403,0.83,404,0.83,405,0.83,406,0.83,407,0.83,408,0.83,409,0.83,410,0.83,411,0.83,423,2.871,430,2.218,453,2.015,468,1.313,470,3.01,491,1.762,509,1.273,510,2.214,512,3.547,518,2.372,527,2.501,529,1.313,530,1.406,533,1.334,534,2.467,549,1.762,559,2.152,560,2.015,570,2.872,573,2.152,577,1.357,579,2.597,581,1.703,588,2.152,591,5.249,594,1.434,596,5.139,597,3.076,606,2.152,607,2.015,609,2.015,610,2.015,611,2.152,612,1.703,638,3.343,642,1.292,680,1.334,681,2.015,689,1.334,710,1.606,717,1.821,725,2.029,747,2.015,776,1.912,779,2.015,785,1.381,791,4.243,798,2.25,804,1.528,848,1.143,858,2.71,869,1.912,1060,2.361,1069,1.862,1226,2.179,1227,1.357,1268,1.912,1382,2.152,1494,1.912,1716,2.152,1717,5.164,1718,1.652,1719,2.361,1720,2.015,1721,2.361,1722,2.361,1723,2.361,1724,2.361,1725,2.467,1726,2.361,1727,2.361,1728,3.982,1729,3.982,1730,3.982,1731,1.566,1732,3.982,1733,3.982,1734,2.361,1735,2.361,1736,2.015,1737,2.361,1738,1.83,1739,2.361,1740,1.83,1741,2.361,1742,2.361,1743,2.361,1744,2.361,1745,2.361,1746,2.152]],["component/23",[178,0.572]],["title/24-1",[30,38.133,514,34.159]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[302,23.94,307,25.486]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24-3",[311,15.809,327,22.733]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["title/24",[5,11.109,20,12.041,21,10.218,22,5.816,120,17.162,154,26.359]],["name/24",[59,0.875,96,0.752,120,0.759]],["text/24",[4,1.042,5,2.549,18,1.652,20,2.631,21,2.312,22,1.426,24,2.242,26,2.116,30,3.081,33,2.673,37,3.321,47,1.231,50,1.394,53,1.143,54,1.191,58,0.908,59,4.326,62,1.015,64,1.08,69,3.013,70,2.059,71,2.547,72,2.373,77,1.11,83,1.375,87,1.274,89,2.448,96,4.077,100,3.529,103,1.007,120,4.234,129,1.65,130,3.656,137,1.97,139,2.536,147,1.259,151,2.393,154,3.353,161,1.557,175,0.778,181,1.322,189,2.348,193,1.685,213,1.259,217,1.457,225,4.006,252,2.013,257,1.769,268,0.982,283,1.375,311,0.604,314,1.179,319,1.65,321,3.353,328,1.753,329,3.036,337,3.223,341,2.837,356,1.245,359,3.167,368,1.769,370,3.518,383,1.289,386,1.375,390,1.289,393,3.329,403,0.936,404,0.936,405,0.936,406,0.936,407,0.936,408,0.936,409,0.936,410,0.936,411,0.936,412,2.919,430,1.143,439,2.107,468,1.48,509,1.435,527,2.132,529,2.448,530,1.586,534,3.488,543,1.586,568,1.339,586,1.357,617,1.812,618,1.724,619,1.987,620,1.766,621,2.427,622,2.427,623,2.064,624,2.427,625,1.863,626,2.575,627,2.427,629,2.156,630,2.373,638,1.724,643,1.766,715,1.812,725,1.357,804,1.724,860,1.557,925,1.766,949,1.586,953,1.812,1012,1.586,1060,2.013,1069,1.245,1091,2.726,1094,1.617,1096,2.623,1097,1.65,1227,1.53,1301,2.064,1422,2.787,1423,1.685,1725,2.728,1731,1.766,1747,2.272,1748,1.921,1749,2.662,1750,2.662,1751,2.662,1752,2.662,1753,2.662,1754,2.662,1755,2.662,1756,2.662,1757,2.662,1758,2.662,1759,2.662]],["component/24",[178,0.572]],["title/25-1",[20,13.249,21,11.244,22,6.4,156,29.005,430,20.91]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25-2",[20,13.249,21,11.244,22,6.4,156,29.005,1136,41.548]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["title/25-3",[34,30.245,156,36.292,320,30.636]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["title/25-4",[34,30.245,156,36.292,157,45.457]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["title/25-5",[20,13.249,21,11.244,22,6.4,156,29.005,175,14.226]],["name/25-5",[]],["text/25-5",[]],["component/25-5",[]],["title/25-6",[311,15.809,327,22.733]],["name/25-6",[]],["text/25-6",[]],["component/25-6",[]],["title/25",[22,6.4,64,19.745,155,28.478,156,29.005,157,36.33]],["name/25",[155,1.144,156,1.166,157,1.46]],["text/25",[0,1.403,1,1.477,4,1.929,5,2.004,18,1.47,20,2.347,21,2.265,22,1.481,26,2.52,34,3.527,37,3.07,49,1.403,54,1.689,56,2.339,58,2.226,60,1.061,62,2.219,66,0.883,70,2.129,71,2.191,72,2.578,73,1.002,74,0.883,84,2.624,87,1.061,94,1.929,100,2.229,103,0.838,107,2.741,132,0.992,137,0.992,139,1.464,151,1.605,155,2.208,156,6.476,157,7.803,168,1.707,175,1.907,186,2.206,189,2.056,191,1.435,193,5.624,196,2.279,198,3.161,225,1.439,257,2.339,261,1.048,262,1.381,268,2.146,270,1.274,289,1.346,311,0.503,315,1.403,320,4.015,328,0.883,329,2.928,335,1.115,362,1.891,368,0.891,370,3.044,377,1.274,389,1.161,390,1.828,393,1.833,399,1.115,403,0.779,404,0.779,405,0.779,406,0.779,407,0.779,408,0.779,409,0.779,410,0.779,411,0.779,416,1.621,430,3.914,431,1.551,440,0.916,473,1.599,475,2.883,488,3.057,507,4.834,513,1.296,514,1.087,561,1.346,563,2.005,579,1.115,586,1.923,633,1.115,645,1.177,668,2.248,717,1.013,725,1.923,784,2.581,786,1.373,830,1.795,855,2.066,905,1.177,914,1.296,959,3.191,1009,1.551,1060,2.661,1069,2.305,1071,1.551,1091,1.073,1117,3.269,1145,1.891,1153,1.891,1226,2.066,1227,1.274,1248,1.346,1250,1.274,1251,1.346,1307,3.269,1309,2.02,1310,1.599,1311,1.795,1315,1.891,1390,2.816,1424,1.47,1454,1.599,1550,1.551,1562,2.02,1579,3.556,1718,1.551,1731,1.47,1760,1.718,1761,2.216,1762,8.148,1763,1.891,1764,5.305,1765,3.774,1766,2.216,1767,2.216,1768,1.891,1769,2.02,1770,1.508,1771,1.795,1772,6.528,1773,1.718,1774,3.774,1775,2.216,1776,2.216,1777,2.216,1778,3.774,1779,2.216,1780,2.02,1781,5.951,1782,2.02,1783,2.02,1784,2.02,1785,1.718,1786,1.891,1787,2.216,1788,2.02,1789,2.216,1790,4.929,1791,4.929,1792,2.216,1793,2.216,1794,2.216,1795,2.216,1796,2.216,1797,2.216,1798,1.508]],["component/25",[178,0.572]],["title/26-1",[22,9.158,107,38.736]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[18,13.671,24,21.554,107,30.091,156,32.242]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26-3",[16,16.358,17,20.91,18,12.299,24,19.39,107,27.07]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["title/26-4",[302,23.94,307,25.486]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["title/26-5",[311,15.809,327,22.733]],["name/26-5",[]],["text/26-5",[]],["component/26-5",[]],["title/26",[16,18.183,22,7.114,107,30.091,158,31.105]],["name/26",[16,0.519,21,0.357,107,0.859,159,0.845]],["text/26",[1,2.439,5,1.459,9,0.564,10,0.598,14,0.611,16,3.016,17,2.838,18,2.3,20,0.371,22,1.364,24,1.645,26,1.207,34,1.674,37,1.836,42,2.077,46,2.133,49,0.864,52,0.759,53,1.059,54,1.103,56,0.846,58,2.644,59,0.611,62,1.82,66,0.544,70,2.126,71,0.76,73,1.525,74,1.645,77,2.895,80,3.18,82,2.791,94,0.534,95,2.433,96,2.049,102,1.291,107,4.651,111,0.813,139,0.956,156,5.885,157,3.976,158,2.373,171,0.798,175,2.39,189,1.028,196,0.631,198,1.194,225,4.264,234,0.725,238,1.635,243,1.028,252,0.624,261,0.646,262,1.511,268,0.909,274,0.985,283,1.273,284,1.909,296,0.598,300,3.45,306,0.829,311,0.31,314,0.604,328,0.982,329,2.043,333,2.296,334,0.785,337,1.393,341,0.592,350,2.483,356,1.931,359,0.661,363,0.705,366,4.382,368,3.707,370,1.82,383,0.661,384,2.963,389,1.291,390,4.348,393,1.253,399,1.24,403,0.867,404,0.48,405,0.48,406,0.48,407,0.48,408,0.48,409,0.48,410,0.48,411,0.48,416,3.109,426,3.601,430,1.059,439,2.781,440,0.564,441,0.798,457,1.497,470,2.05,472,0.864,507,6.49,510,0.759,511,1.209,543,0.813,546,0.864,567,1.911,572,3.524,577,2.744,586,1.718,626,0.798,633,0.687,635,1.442,642,2.917,654,4.509,678,0.864,682,0.798,689,0.771,703,1.497,717,0.624,725,1.256,739,0.985,785,2.792,791,4.066,801,3.562,830,1.997,855,1.845,924,2.104,1013,1.442,1025,0.985,1060,1.127,1069,1.153,1082,2.508,1130,1.469,1143,1.911,1144,2.104,1145,4.074,1153,4.074,1170,3.524,1226,1.349,1227,0.785,1235,1.244,1237,1.244,1454,0.985,1514,1.678,1515,2.247,1579,0.985,1718,0.955,1725,0.846,1760,6.009,1762,3.344,1764,1.244,1773,1.058,1781,2.247,1782,2.247,1783,2.247,1784,2.247,1785,1.911,1788,1.244,1799,1.365,1800,1.365,1801,0.985,1802,1.365,1803,1.365,1804,1.365,1805,0.905,1806,1.365,1807,3.371,1808,6.941,1809,2.465,1810,2.465,1811,2.465,1812,2.465,1813,2.465,1814,4.13,1815,2.465,1816,2.465,1817,2.465,1818,4.13,1819,2.465,1820,1.972,1821,5.329,1822,4.13,1823,6.234,1824,1.365,1825,6.805,1826,1.365,1827,3.765,1828,4.13,1829,4.774,1830,4.13,1831,4.13,1832,4.13,1833,4.13,1834,4.13,1835,4.13,1836,4.774,1837,4.13,1838,1.365,1839,1.365,1840,5.297,1841,1.365,1842,1.365,1843,5.329,1844,1.365,1845,1.365,1846,1.365,1847,1.911,1848,2.465,1849,2.465,1850,1.365,1851,2.465,1852,1.365]],["component/26",[178,0.572]],["title/27-1",[14,31.175,22,9.158]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[15,37.749,1827,55.534,1853,60.921]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[9,33.613]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27-4",[155,35.632,464,33.871,902,31.042]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["title/27-5",[18,15.388,464,33.871,902,31.042]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["title/27-6",[18,12.299,85,19.745,245,26.247,393,18.104,967,25.498]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["title/27-7",[84,22.898,1482,51.987]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["title/27-8",[12,46.758]],["name/27-8",[]],["text/27-8",[]],["component/27-8",[]],["title/27-9",[142,43.859]],["name/27-9",[]],["text/27-9",[]],["component/27-9",[]],["title/27-10",[1344,69.426]],["name/27-10",[]],["text/27-10",[]],["component/27-10",[]],["title/27-11",[422,63.06]],["name/27-11",[]],["text/27-11",[]],["component/27-11",[]],["title/27-12",[7,24.883,46,35.983]],["name/27-12",[]],["text/27-12",[]],["component/27-12",[]],["title/27-13",[7,24.883,120,27.023]],["name/27-13",[]],["text/27-13",[]],["component/27-13",[]],["title/27-14",[7,19.329,53,23.243,120,20.992,302,18.597]],["name/27-14",[]],["text/27-14",[]],["component/27-14",[]],["title/27-15",[119,40.041,252,31.855]],["name/27-15",[]],["text/27-15",[]],["component/27-15",[]],["title/27-16",[1854,63.511,1855,63.511]],["name/27-16",[]],["text/27-16",[]],["component/27-16",[]],["title/27-17",[311,15.809,327,22.733]],["name/27-17",[]],["text/27-17",[]],["component/27-17",[]],["title/27",[160,69.426]],["name/27",[2,1.689,3,1.815]],["text/27",[1,0.956,5,2.619,7,3.397,9,3.088,10,0.313,12,3.562,13,1.429,14,0.605,15,6.68,16,0.647,17,0.827,18,2.489,19,2.026,20,1.29,21,0.312,22,0.661,23,0.718,26,0.395,28,0.698,29,0.515,35,0.385,36,0.647,37,1.286,38,0.92,39,0.805,44,0.875,46,2.596,47,0.89,50,0.708,53,2.48,54,1.093,55,1.48,58,1.714,60,0.647,62,1.275,64,1.797,66,1.765,68,0.708,69,1.017,70,1.066,71,1.709,72,1.213,76,1.038,77,1.019,78,0.379,83,0.369,84,3.059,85,2.342,87,1.394,90,1.053,91,0.282,94,1.14,97,1.279,100,0.87,103,0.27,116,2.995,118,0.41,119,4.436,120,1.839,121,3.839,132,0.861,133,2.615,135,2.591,136,1.169,137,0.861,142,3.722,143,0.651,144,3.923,147,2.931,149,1.246,151,1.239,155,0.417,159,0.391,162,1.193,163,0.553,164,1.106,167,0.462,168,0.87,169,1.277,170,1.246,175,2.018,177,2.789,180,0.316,181,0.671,186,1.093,191,0.462,198,0.654,211,0.379,213,3.022,218,0.499,224,1.932,225,0.515,234,0.718,236,0.553,237,2.991,243,3.005,245,2.014,252,1.332,257,0.287,261,0.338,268,0.901,270,1.106,274,0.515,277,1.07,279,0.499,282,0.473,283,1.262,284,0.33,285,0.609,289,0.433,298,0.442,301,0.553,302,0.661,305,0.651,307,0.704,308,2.943,311,0.554,314,2.344,322,1.844,323,2.174,327,0.233,328,0.538,329,1.667,333,0.751,334,1.106,335,1.465,337,0.295,341,0.31,342,0.896,343,0.41,344,1.492,350,3.387,351,1.358,356,2.216,360,0.462,366,0.473,368,0.543,370,2.113,378,2.324,381,0.417,383,0.346,384,0.751,386,0.994,388,0.74,389,0.374,393,2.912,394,1.894,395,0.751,397,1.07,403,0.251,404,0.251,405,0.251,406,0.251,407,0.251,408,0.251,409,0.475,410,0.251,411,0.251,415,0.578,416,3.721,419,0.975,422,4.953,426,0.442,427,1.762,430,2.822,431,1.709,439,1.169,440,2.187,441,3.505,445,0.946,449,1.008,455,1.62,464,4.291,470,0.354,474,0.397,475,0.79,481,1.047,486,1.094,488,1.559,491,0.532,498,0.462,502,1.492,512,0.417,521,0.578,525,0.486,527,0.654,532,0.532,547,2.478,561,3.507,576,1.153,578,1.008,579,0.359,580,0.578,585,0.532,592,1.546,594,0.821,599,0.875,612,1.762,616,0.403,632,2.085,645,0.379,656,0.578,668,0.805,677,2.227,678,3.923,680,1.088,693,0.777,696,0.462,697,0.896,715,0.486,717,0.618,723,0.532,726,0.433,742,0.433,784,1.008,794,0.609,798,1.381,799,0.553,810,1.582,818,0.946,824,2.556,831,1.823,832,1.053,860,0.417,861,0.651,881,0.41,902,3.597,903,0.553,905,0.379,906,0.462,908,1.978,911,1.582,914,0.417,924,0.689,963,0.417,966,1.276,967,3.024,977,0.553,996,1.047,1023,0.417,1044,1.823,1059,1.709,1060,0.88,1063,0.651,1115,1.218,1130,1.736,1169,0.651,1195,0.499,1225,0.975,1245,0.609,1248,2.269,1249,1.559,1250,2.147,1251,1.484,1253,1.047,1254,1.388,1255,1.008,1258,0.578,1275,1.008,1282,0.532,1284,1.844,1289,1.642,1294,1.755,1296,1.232,1297,1.232,1304,0.553,1305,0.651,1306,0.609,1307,0.473,1310,0.515,1311,0.578,1313,0.651,1315,0.609,1317,0.553,1318,1.823,1319,0.553,1320,0.553,1321,0.609,1322,0.651,1323,0.651,1324,0.651,1325,0.651,1326,0.651,1333,0.515,1334,0.515,1340,0.651,1344,3.497,1346,2.085,1347,1.823,1348,1.709,1360,0.609,1362,0.553,1373,0.532,1408,0.553,1421,0.578,1432,0.651,1433,0.651,1437,0.553,1443,0.651,1482,0.532,1542,1.232,1543,1.559,1551,1.232,1636,2.495,1660,0.92,1740,1.047,1769,1.232,1854,4.04,1855,1.755,1856,3.048,1857,0.651,1858,0.651,1859,0.714,1860,0.714,1861,0.609,1862,0.452,1863,0.714,1864,0.714,1865,0.714,1866,0.651,1867,0.714,1868,0.651,1869,1.925,1870,0.714,1871,4.432,1872,1.351,1873,0.714,1874,1.351,1875,0.651,1876,1.925,1877,1.925,1878,1.351,1879,1.925,1880,1.925,1881,1.232,1882,0.714,1883,0.714,1884,0.651,1885,1.232,1886,0.714,1887,0.714,1888,1.153,1889,1.232,1890,0.714,1891,1.351,1892,2.227,1893,0.714,1894,0.714,1895,0.651,1896,1.232,1897,0.609,1898,0.714,1899,0.714,1900,1.755,1901,1.153,1902,0.651,1903,1.094,1904,0.651,1905,0.651,1906,0.651,1907,0.651,1908,0.714,1909,1.153,1910,1.351,1911,1.232,1912,1.351,1913,0.714,1914,0.714,1915,1.351,1916,1.351,1917,1.351,1918,0.714,1919,1.925,1920,0.714,1921,0.714,1922,3.343,1923,0.714,1924,0.714,1925,0.714,1926,0.714,1927,0.714,1928,0.714,1929,0.714,1930,0.855,1931,1.978,1932,0.714,1933,0.553,1934,0.651,1935,0.714,1936,3.048,1937,0.714,1938,0.651,1939,0.651,1940,0.714,1941,1.351,1942,0.714,1943,0.714,1944,3.343,1945,0.714,1946,0.714,1947,1.232,1948,1.351,1949,0.714,1950,1.232,1951,0.714,1952,0.651,1953,0.714,1954,0.714,1955,0.714,1956,0.714,1957,0.714,1958,0.714,1959,1.351,1960,0.714,1961,0.714,1962,0.609,1963,0.714]],["component/27",[178,0.572]],["title/28-1",[7,21.757,120,23.629,164,35.012]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[119,35.012,164,35.012,252,27.854]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28-3",[42,30.636,50,31.903,164,35.012]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["title/28-4",[5,15.295,15,37.749,906,39.44]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["title/28-5",[311,15.809,327,22.733]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["title/28",[5,13.588,15,33.536,71,16.691,103,20.461]],["name/28",[71,0.823,103,1.009]],["text/28",[5,2.596,7,3.26,9,2.213,10,0.858,13,3.132,15,6.944,18,2.39,19,0.895,20,2.372,22,1.263,23,1.802,24,2.133,26,1.565,34,1.684,35,1.829,36,1.624,38,3.644,42,1.706,50,1.777,51,1.671,53,0.841,55,0.867,60,0.937,64,0.794,66,0.78,68,3.475,69,2.113,70,3.189,71,3.401,72,3.533,83,1.011,84,2.786,91,0.773,97,1.025,100,1.534,103,3.727,118,3.078,119,4.331,120,3.061,130,2.371,132,0.876,137,3.187,139,3.382,151,1.443,159,1.071,163,1.517,164,4.093,168,1.534,169,0.858,170,2.196,175,1.77,186,2.396,234,1.04,236,1.517,243,0.817,252,3.876,258,3.35,261,0.926,262,2.427,263,1.088,268,0.722,277,1.886,279,2.374,289,3.252,296,1.487,307,0.716,311,0.444,329,0.688,335,0.984,370,1.712,381,1.145,386,1.011,393,0.728,394,1.517,395,1.088,397,3.959,403,0.688,404,0.688,405,0.688,406,0.688,407,0.688,408,0.688,409,0.688,410,0.688,411,0.688,416,0.841,439,1.624,440,0.809,464,2.496,496,1.332,514,2.201,527,0.948,533,3.026,547,1.298,578,2.531,591,2.63,592,1.239,612,1.412,675,2.537,680,1.106,717,2.053,725,4.821,726,1.189,784,1.777,796,1.37,799,1.517,902,2.288,905,2.385,906,3.921,908,1.585,913,1.37,914,1.145,962,1.585,966,1.298,967,2.805,1060,2.449,1091,0.948,1092,4.016,1115,2.842,1225,3.239,1227,3.078,1257,1.585,1258,5.373,1259,1.671,1261,1.671,1262,3.467,1264,1.671,1265,1.671,1266,1.671,1268,1.585,1352,4.882,1353,3.831,1362,1.517,1408,1.517,1411,1.785,1414,1.213,1417,1.37,1418,1.461,1419,1.461,1420,2.895,1423,2.147,1424,2.25,1425,1.785,1426,1.785,1550,1.37,1712,1.785,1725,2.782,1862,1.239,1892,3.093,1930,2.147,1950,1.785,1964,1.785,1965,1.958,1966,1.785,1967,2.895,1968,1.958,1969,1.958,1970,1.958,1971,1.958,1972,1.958,1973,1.958]],["component/28",[178,0.572]],["title/29-1",[1267,53.953]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[10,19.39,12,25.43,18,11.177,22,5.816,26,12.929,142,23.853]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[302,23.94,307,25.486]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[311,15.809,327,22.733]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29",[10,17.769,14,18.144,18,10.242,20,11.034,21,9.364,22,5.33,142,21.859]],["name/29",[10,0.857,14,0.875,142,1.055]],["text/29",[1,1.459,4,0.855,5,2.219,9,1.54,10,4.895,12,3.72,14,3.368,16,1.253,18,2.291,20,0.594,21,1.126,22,1.346,24,1.942,25,1.414,26,2.893,35,2.629,36,1.045,37,2.895,38,1.487,42,2.899,53,1.601,54,3.704,55,2.866,58,2.207,62,2.468,64,1.512,66,0.87,70,1.784,71,3.264,72,1.353,73,1.686,78,1.16,80,1.196,84,1.225,85,0.886,92,1.215,100,0.988,103,0.826,118,1.256,127,3.641,129,2.31,132,0.978,138,4.669,139,2.51,142,4.888,144,3.649,164,2.803,165,2.669,168,0.988,169,0.957,175,1.685,189,3.308,198,1.058,202,2.264,213,2.307,225,3.024,234,1.16,243,2.034,261,1.033,262,2.109,268,2.925,279,1.529,284,1.01,302,1.676,307,1.364,311,0.496,323,1.63,328,2.296,329,2.789,337,1.54,341,1.617,348,1.529,350,0.87,354,2.041,359,1.806,363,1.926,370,2.87,378,1.828,381,1.278,383,1.058,389,1.144,390,1.806,393,1.386,403,0.768,404,0.768,405,0.768,406,0.768,407,0.768,408,0.768,409,0.768,410,0.768,411,0.768,419,4.669,423,1.215,430,2.094,440,1.54,473,3.518,496,1.487,533,3.658,534,1.354,542,4.034,552,1.63,563,1.16,579,1.099,614,1.449,616,2.107,642,1.196,645,1.16,654,2.01,668,1.301,680,1.234,720,1.864,725,1.113,739,1.576,771,3.372,782,2.609,848,1.058,863,1.693,882,1.864,905,1.16,967,1.144,1018,1.693,1060,0.999,1069,1.021,1091,1.058,1092,1.449,1117,1.449,1180,6.015,1226,3.543,1227,1.256,1284,2.36,1348,1.529,1408,1.693,1414,3.022,1417,1.529,1469,4.404,1600,4.669,1610,1.63,1629,1.693,1693,3.181,1773,1.693,1805,1.449,1885,1.991,1904,1.991,1905,1.991,1906,1.991,1974,5.765,1975,1.991,1976,1.864,1977,5.255,1978,1.991,1979,5.9,1980,4.469,1981,1.991,1982,1.991,1983,1.991,1984,2.185,1985,2.185,1986,2.185,1987,3.399,1988,3.399,1989,2.185,1990,1.991,1991,2.185,1992,3.399,1993,2.185,1994,2.185,1995,1.991,1996,1.991,1997,2.185,1998,2.185,1999,1.991]],["component/29",[178,0.572]],["title/30-1",[12,31.105,84,17.788,86,41.949,87,25.9]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[302,23.94,307,25.486]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30-3",[311,15.809,327,22.733]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["title/30",[18,11.177,22,5.816,26,12.929,62,16.87,71,13.646,142,23.853]],["name/30",[12,1.533,142,1.438]],["text/30",[5,0.942,7,0.786,9,2.925,10,0.965,12,5.626,14,0.985,16,2.185,18,2.394,20,2.26,21,1.635,22,1.403,23,1.17,26,2.208,28,1.137,37,1.887,47,1.018,48,1.707,49,1.394,53,1.612,54,0.985,55,2.566,58,2.218,60,1.796,62,2.21,64,0.893,66,2.59,69,0.768,70,2.379,71,2.923,72,3.122,73,0.996,77,0.918,78,2.606,83,1.137,84,1.612,85,3.489,86,1.707,87,1.054,90,3.172,94,0.862,100,2.621,109,1.093,137,0.985,139,3.221,142,5.012,144,5.446,145,3.39,147,1.775,148,1.783,149,2.43,159,2.054,161,1.288,162,1.364,165,2.054,168,2.219,175,2.068,180,2.566,181,1.093,189,2.417,191,1.426,198,4.404,211,1.17,225,1.431,230,4.807,243,1.566,245,1.187,255,1.643,262,3.326,270,2.157,284,1.018,289,1.337,298,1.364,311,0.5,314,1.662,328,1.495,329,2.489,333,2.087,337,0.91,343,1.266,350,1.495,351,1.224,354,2.054,358,1.541,368,0.885,370,2.21,378,1.08,390,2.376,392,1.337,393,0.819,394,1.707,397,1.224,399,1.107,403,1.32,404,0.774,405,0.774,406,0.774,407,0.774,408,0.774,409,0.774,410,0.774,411,0.774,412,1.46,413,1.879,416,0.946,418,2.007,419,5.992,423,2.087,425,1.879,427,1.589,428,1.879,429,2.007,430,3.246,432,3.422,433,3.203,434,1.643,435,3.422,436,2.627,440,1.551,441,1.288,474,2.087,505,2.708,516,1.498,525,3.338,533,2.121,654,1.187,675,3.675,682,1.288,683,1.783,689,1.244,697,1.46,717,1.007,725,2.5,785,1.288,797,2.007,818,1.541,819,2.627,848,1.066,849,1.394,855,1.205,858,3.944,877,1.498,881,1.266,905,1.17,963,1.288,1013,1.288,1023,2.87,1060,1.007,1069,1.755,1091,1.066,1226,1.205,1227,1.266,1273,2.007,1284,2.376,1303,1.783,1307,2.489,1346,1.879,1350,1.46,1402,1.879,1414,2.326,1445,2.007,1454,2.708,1571,3.661,1660,1.498,1693,3.203,1711,1.589,1714,2.007,2000,2.801,2001,2.202,2002,1.707,2003,2.202,2004,1.783,2005,2.202,2006,3.422,2007,3.422,2008,2.202,2009,2.202,2010,2.202,2011,2.007,2012,2.007,2013,3.754,2014,2.202,2015,2.202,2016,2.202,2017,1.783]],["component/30",[178,0.572]],["title/31-1",[145,47.587]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[18,13.671,145,31.656,149,35.039,2018,39.043]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[18,13.671,130,23.964,145,31.656,149,35.039]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31-4",[9,25.169,289,36.995,1903,49.335]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["title/31-5",[145,40.751,2019,56.422]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["title/31-6",[18,13.671,71,16.691,84,17.788,2019,43.83]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["title/31-7",[18,13.671,130,23.964,149,35.039,2019,43.83]],["name/31-7",[]],["text/31-7",[]],["component/31-7",[]],["title/31-8",[37,20.812,145,31.656,149,35.039,161,31.656]],["name/31-8",[]],["text/31-8",[]],["component/31-8",[]],["title/31-9",[311,15.809,327,22.733]],["name/31-9",[]],["text/31-9",[]],["component/31-9",[]],["title/31",[142,32.841,144,38.56,145,35.632]],["name/31",[142,1.055,145,1.144,149,1.267]],["text/31",[1,1.301,4,2.062,9,2.706,12,1.911,14,1.488,18,2.373,19,2.41,20,2.633,21,1.217,22,0.693,24,1.324,36,1.591,44,3.412,47,2.437,58,1.134,70,1.928,84,1.732,85,3.022,90,4.078,111,1.981,130,2.334,139,1.29,142,3.53,144,6.124,145,6.186,146,3.14,147,2.493,148,6.034,149,6.847,169,2.87,175,0.972,180,2.334,181,1.651,189,2.198,191,2.153,211,1.766,225,2.497,230,4.334,243,2.198,262,3.437,268,1.226,282,2.205,287,3.031,288,2.481,289,3.201,311,0.754,314,2.334,329,1.169,333,2.931,335,1.672,343,1.911,350,1.324,351,1.849,354,2.885,386,1.717,403,1.853,404,1.169,405,1.169,406,1.169,407,1.169,408,1.169,409,1.169,410,1.169,411,1.169,416,1.428,419,2.399,430,1.428,440,2.178,532,2.481,595,2.263,618,2.153,646,2.693,668,1.981,678,2.105,693,1.911,697,2.205,717,1.52,725,1.694,739,3.803,772,2.263,784,3.902,901,2.693,907,2.693,911,2.153,975,2.481,1091,2.553,1096,1.981,1097,2.06,1104,2.153,1115,2.105,1119,2.837,1131,3.031,1250,1.911,1347,3.933,1348,2.327,1354,2.06,1355,3.031,1394,3.031,1422,2.105,1424,2.205,1437,2.577,1550,3.688,1773,2.577,1801,5.375,1805,3.495,1902,5.97,1903,7,1909,2.837,1936,3.031,1939,3.031,2006,4.805,2007,3.031,2011,3.031,2012,3.031,2019,4.269,2020,2.837,2021,3.325,2022,3.325,2023,3.031,2024,3.325,2025,3.325,2026,3.325,2027,3.325,2028,3.325,2029,3.325,2030,3.031,2031,3.325,2032,3.325,2033,3.325,2034,5.97,2035,3.803,2036,6.549,2037,3.325,2038,3.325,2039,3.325,2040,3.325,2041,3.031,2042,3.325,2043,3.325,2044,3.325,2045,5.271,2046,3.325,2047,3.325,2048,3.325,2049,3.325,2050,3.325,2051,2.837,2052,3.325]],["component/31",[178,0.572]],["title/32-1",[5,13.588,112,23.477,121,30.091,1267,35.891]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32-2",[121,30.091,132,24.217,175,15.814,316,37.871]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["title/32-3",[121,30.091,175,15.814,2053,49.337,2054,36.829]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["title/32-4",[46,27.952,121,30.091,175,15.814,457,32.867]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["title/32-5",[121,30.091,124,40.384,125,40.384,175,15.814]],["name/32-5",[]],["text/32-5",[]],["component/32-5",[]],["title/32-6",[175,15.814,1636,40.384,1713,41.949,2054,36.829]],["name/32-6",[]],["text/32-6",[]],["component/32-6",[]],["title/32-7",[302,23.94,307,25.486]],["name/32-7",[]],["text/32-7",[]],["component/32-7",[]],["title/32-8",[311,15.809,327,22.733]],["name/32-8",[]],["text/32-8",[]],["component/32-8",[]],["title/32",[5,11.109,20,12.041,21,10.218,22,5.816,112,19.194,121,24.601]],["name/32",[5,0.388,53,0.663,112,0.67,121,0.859]],["text/32",[5,1.555,6,1.621,8,7.23,18,2.271,19,0.462,20,0.275,21,0.233,22,0.683,23,0.537,26,0.295,37,0.389,43,0.67,46,3.705,53,3.081,54,0.838,55,1.698,58,0.892,60,1.562,64,0.76,68,1.37,70,2.83,71,2.146,72,0.367,74,1.908,77,0.781,84,3.139,85,2.624,87,0.484,90,2.099,91,1.713,94,2.531,103,1.641,112,3.769,121,3.597,122,1.398,123,1.398,124,4.828,125,2.861,126,3.713,130,0.448,132,3.935,137,0.838,139,1.266,154,1.116,175,3.121,185,0.707,186,1.461,189,0.781,193,0.64,196,0.467,225,4.517,230,1.835,237,3.142,243,1.091,257,3.398,261,1.814,262,2.889,268,0.965,283,0.522,284,0.467,306,0.614,307,0.685,311,0.229,314,0.448,316,4.334,317,2.067,326,0.67,328,0.403,329,0.92,333,2.888,334,3.386,335,0.508,337,0.418,341,0.439,343,0.581,349,0.784,350,1.042,359,0.49,363,0.522,368,3.039,370,0.998,376,1.831,377,0.581,384,2.663,389,1.37,392,2.329,393,2.406,395,0.562,397,0.562,399,0.508,403,0.355,404,0.355,405,0.355,406,0.355,407,0.355,408,0.355,409,0.355,410,0.355,411,0.355,415,0.819,416,1.864,423,2.132,426,1.161,430,0.804,441,0.591,457,5.461,458,0.626,464,1.041,470,1.904,474,0.562,475,0.591,511,1.283,523,2.543,547,2.878,558,0.729,561,2.635,568,1.928,579,0.508,586,3.002,597,2.585,599,1.213,625,2.683,633,1.928,635,0.591,680,0.571,683,0.819,685,0.819,689,0.571,703,1.589,710,0.688,717,0.462,745,2.972,780,1.137,784,0.981,785,1.91,786,0.626,791,2.683,818,0.707,819,0.707,821,0.784,828,1.598,835,1.517,855,0.553,902,0.954,905,0.537,913,0.707,918,2.376,926,0.863,978,0.922,1013,1.096,1130,2.854,1303,0.819,1347,1.398,1348,0.707,1379,1.707,1414,0.626,1482,0.754,1621,0.819,1636,4.622,1699,4.088,1713,3.713,1731,0.67,1736,0.863,1770,6.452,1884,0.922,1900,0.922,1930,0.64,2053,5.646,2054,5.019,2055,6.47,2056,4.736,2057,2.617,2058,6.54,2059,1.011,2060,1.011,2061,2.028,2062,1.011,2063,0.922,2064,2.976,2065,1.011,2066,1.011,2067,1.011,2068,1.011,2069,1.011,2070,0.922,2071,0.922,2072,0.922,2073,2.617,2074,3.835,2075,3.105,2076,3.272,2077,3.835,2078,1.011,2079,1.011,2080,1.011,2081,1.011,2082,2.617,2083,1.011,2084,1.011,2085,1.011,2086,2.617,2087,1.011,2088,1.011,2089,1.011,2090,1.873,2091,1.011,2092,4.34,2093,1.707,2094,1.707,2095,1.873,2096,1.707,2097,1.873,2098,0.922,2099,0.922,2100,3.265,2101,1.011,2102,4.736,2103,1.011,2104,1.011,2105,1.011,2106,1.011,2107,1.011,2108,0.922,2109,1.011,2110,0.922,2111,1.011,2112,1.873,2113,0.922,2114,0.922,2115,1.011,2116,1.011,2117,1.011,2118,1.011,2119,1.011,2120,1.011,2121,1.011,2122,1.011,2123,1.011,2124,1.011]],["component/32",[178,0.572]],["title/33-1",[6,24.173,22,6.4,124,36.33,125,36.33,175,14.226]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[6,18.578,21,8.641,22,4.919,26,10.934,71,11.54,84,12.298,126,29.003,175,10.934]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33-3",[26,17.8,62,23.227,175,17.8]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["title/33-4",[302,23.94,307,25.486]],["name/33-4",[]],["text/33-4",[]],["component/33-4",[]],["title/33-5",[311,15.809,327,22.733]],["name/33-5",[]],["text/33-5",[]],["component/33-5",[]],["title/33",[5,9.395,6,18.578,18,9.452,121,20.805,122,27.921,123,27.921,124,27.921,125,27.921]],["name/33",[5,0.32,6,0.634,122,0.952,123,0.952,126,0.989]],["text/33",[1,1.732,5,2.322,6,3.545,8,3.012,9,2.574,16,1.487,18,1.924,19,0.561,20,1.204,21,1.439,22,1.322,23,0.342,24,0.489,26,1.964,29,0.885,35,0.348,37,1.33,42,2.497,43,1.164,46,0.333,47,0.298,52,0.682,53,0.527,54,0.288,55,0.543,57,0.522,58,0.599,59,1.548,62,1.176,66,0.257,68,0.338,70,2.213,71,2.025,72,0.445,73,0.292,74,1.763,76,2.932,77,1.588,80,1.689,82,2.464,84,1.788,85,1.795,87,0.309,88,0.718,90,1.467,91,1.058,92,2.295,93,0.916,94,1.207,95,0.329,96,2.746,100,1.212,102,0.643,109,0.609,112,1.79,118,0.371,121,2.116,124,4.219,125,4.371,126,5.209,137,1.381,147,0.305,155,0.377,164,0.705,166,0.392,167,0.417,169,2.062,171,0.718,175,2.623,180,0.543,185,2.159,186,0.549,189,0.269,193,0.777,194,0.4,196,1.035,198,0.594,217,0.353,223,0.55,225,4.341,230,0.587,236,0.951,237,0.364,238,0.814,245,2.225,257,2.639,261,1.059,262,1.816,263,1.716,268,0.453,274,0.885,284,0.567,302,0.222,308,1.244,311,0.146,317,0.662,319,0.4,326,1.484,328,1.067,329,1.912,334,0.371,337,2.499,341,2.359,350,0.891,354,1.225,356,0.821,357,0.522,359,2.279,360,0.417,361,0.814,363,1.787,365,0.885,368,3.145,370,1.451,376,0.451,378,0.316,383,0.312,384,1.49,386,0.634,388,0.353,389,0.338,390,1.298,392,0.392,393,2.606,395,0.358,397,0.682,403,0.227,404,0.227,405,0.227,406,0.227,407,0.227,408,0.227,409,0.431,410,0.227,411,0.227,416,0.961,423,1.924,426,1.387,430,0.527,431,0.451,433,0.55,437,1.735,439,1.071,440,0.266,441,1.027,455,1.484,464,0.358,468,0.682,470,1.718,472,0.408,475,2.904,483,1.998,489,0.348,509,0.662,510,1.716,511,2.024,514,0.861,515,0.5,523,0.428,527,1.298,529,0.976,530,1.046,533,0.693,534,1.088,542,2.159,547,0.814,550,1.195,558,0.465,561,0.745,565,1.267,568,1.126,570,0.885,577,3.25,586,0.625,592,1.953,612,0.465,614,0.428,625,1.566,630,0.947,633,0.883,634,0.522,642,1.467,643,1.484,645,0.933,649,1.484,654,0.348,663,2.061,675,0.992,680,0.693,693,0.371,696,0.417,726,0.392,738,0.794,745,0.5,769,0.522,780,1.359,785,0.718,786,0.4,791,0.451,798,0.364,802,4.405,810,1.137,828,0.55,829,4.015,848,0.312,859,2.637,860,0.377,872,0.5,873,0.522,879,0.5,883,0.5,902,0.329,905,0.933,914,0.377,924,1.14,949,1.046,953,1.195,957,3.248,969,0.588,977,0.5,985,2.421,1012,1.596,1013,0.718,1023,1.309,1030,0.916,1060,0.295,1069,0.301,1082,2.101,1084,1.417,1088,0.885,1091,1.843,1092,0.428,1094,1.359,1096,1.838,1097,1.088,1104,0.417,1130,2.637,1143,1.735,1180,0.55,1195,0.451,1232,2.226,1254,0.465,1284,1.696,1341,0.5,1398,5.34,1417,0.451,1489,0.481,1514,2.1,1550,0.451,1561,0.465,1571,2.302,1572,3.647,1575,0.481,1577,0.55,1598,2.077,1610,0.916,1699,1.498,1710,0.588,1713,2.077,1748,1.615,1770,1.523,1840,0.588,1895,0.588,2002,0.5,2004,0.522,2054,0.835,2056,0.588,2058,0.588,2061,0.951,2075,0.522,2076,0.55,2093,0.588,2094,0.588,2096,0.588,2099,1.601,2102,3.154,2108,0.588,2110,0.588,2113,0.588,2114,0.588,2125,8.44,2126,8.917,2127,8.726,2128,8.588,2129,0.645,2130,0.645,2131,1.498,2132,0.645,2133,0.5,2134,0.588,2135,2.238,2136,1.756,2137,1.227,2138,1.119,2139,0.645,2140,0.588,2141,4.705,2142,1.227,2143,5.21,2144,1.227,2145,1.227,2146,4.705,2147,3.46,2148,5.655,2149,1.227,2150,0.645,2151,0.645,2152,4.966,2153,5.21,2154,4.966,2155,1.756,2156,3.46,2157,0.645,2158,1.756,2159,0.645,2160,1.756,2161,3.086,2162,0.645,2163,0.645,2164,1.227,2165,0.645,2166,0.588,2167,0.645,2168,0.645,2169,1.756,2170,0.645,2171,1.119,2172,0.645,2173,1.227,2174,0.645,2175,0.645,2176,0.645,2177,3.086,2178,0.588,2179,0.55,2180,0.588,2181,1.227,2182,0.481,2183,0.645,2184,0.645,2185,1.227,2186,1.227,2187,1.227,2188,0.645,2189,0.645,2190,0.645,2191,0.522,2192,0.645,2193,0.645,2194,0.645,2195,0.645,2196,0.645,2197,0.645,2198,0.645,2199,0.645,2200,1.227,2201,0.645,2202,0.645,2203,0.645,2204,0.588,2205,0.522,2206,0.645,2207,1.267,2208,0.645,2209,0.645,2210,1.566,2211,0.55,2212,0.645,2213,0.645,2214,0.645,2215,0.645,2216,1.047,2217,0.994,2218,1.047,2219,0.645,2220,4.426,2221,3.154,2222,1.756,2223,0.645,2224,0.645,2225,0.645,2226,0.645,2227,0.645,2228,0.645,2229,0.645,2230,0.645,2231,2.238,2232,0.645,2233,0.645,2234,0.645,2235,0.645,2236,0.645,2237,0.588,2238,1.227,2239,1.227,2240,1.227,2241,1.227,2242,1.227,2243,0.645,2244,0.645,2245,0.645,2246,0.645,2247,0.645,2248,0.645,2249,0.645,2250,0.645,2251,0.645]],["component/33",[178,0.572]],["title/34-1",[1267,53.953]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["title/34-2",[18,15.388,594,36.995,2252,51.985]],["name/34-2",[]],["text/34-2",[]],["component/34-2",[]],["title/34-3",[5,11.109,84,14.542,112,19.194,168,20.012,196,20.456,902,22.546]],["name/34-3",[]],["text/34-3",[]],["component/34-3",[]],["title/34-4",[5,12.224,94,19.05,168,22.02,439,23.3,902,24.809]],["name/34-4",[]],["text/34-4",[]],["component/34-4",[]],["title/34-5",[5,17.492,62,26.563]],["name/34-5",[]],["text/34-5",[]],["component/34-5",[]],["title/34-6",[22,6.4,26,14.226,62,18.563,234,25.864,296,21.337]],["name/34-6",[]],["text/34-6",[]],["component/34-6",[]],["title/34-7",[22,6.4,26,14.226,62,18.563,234,25.864,1862,30.818]],["name/34-7",[]],["text/34-7",[]],["component/34-7",[]],["title/34-8",[5,9.395,18,9.452,94,14.641,168,16.924,439,17.907,464,20.805,902,29.459]],["name/34-8",[]],["text/34-8",[]],["component/34-8",[]],["title/34-9",[302,23.94,307,25.486]],["name/34-9",[]],["text/34-9",[]],["component/34-9",[]],["title/34-10",[311,15.809,327,22.733]],["name/34-10",[]],["text/34-10",[]],["component/34-10",[]],["title/34",[5,13.588,84,17.788,112,23.477,196,25.021]],["name/34",[5,0.388,84,0.508,112,0.67,196,0.714]],["text/34",[1,1.283,5,2.735,6,0.505,10,1.438,18,2.321,20,1.835,21,1.791,22,1.358,23,1,26,2.4,28,0.973,37,1.676,42,1.65,46,0.525,53,0.437,54,0.843,58,0.642,59,0.455,60,1.57,62,3.398,64,1.33,65,0.658,70,2.273,71,1.344,72,0.369,74,0.75,76,1.768,77,0.424,84,2.652,85,3.211,87,0.901,91,1.72,94,2.639,96,1.676,103,0.712,109,0.505,112,3.027,127,1.989,137,2.781,139,0.73,146,1.122,151,0.801,154,0.606,165,1.031,168,2.81,169,0.446,175,2.775,186,0.455,189,2.327,194,0.63,196,0.871,217,0.557,225,4.256,230,0.901,234,3.448,243,1.368,245,0.548,257,2.497,261,1.822,262,2.041,263,0.565,268,0.695,274,1.897,277,0.565,279,0.712,283,0.525,284,0.47,296,2.723,307,0.372,311,0.231,328,0.75,329,1.691,330,2.543,332,0.824,335,0.511,337,2.443,341,0.817,346,0.868,350,0.75,356,0.475,368,1.548,370,1.834,376,0.712,378,2.557,389,1.718,390,1.589,391,1.717,393,2.819,397,0.565,399,1.937,403,0.358,404,0.358,405,0.358,406,0.358,407,0.358,408,0.358,409,0.358,410,0.358,411,0.358,416,1.409,436,0.712,439,2.495,440,0.42,456,2.397,457,3.167,460,0.927,461,0.927,462,0.927,464,2.423,468,0.565,470,1.306,509,1.015,510,1.824,511,1.289,514,2.557,523,0.674,527,0.912,529,1.047,530,1.122,535,1.717,568,1.323,577,1.511,586,2.657,594,2.339,616,1.064,630,1.418,633,1.323,635,1.538,642,0.557,643,1.744,652,0.734,675,2.718,681,1.607,703,0.618,717,0.465,787,0.927,802,0.824,810,3.827,824,3.499,832,2.108,859,0.606,878,0.868,902,3.952,905,0.54,926,2.244,949,1.567,950,5.917,953,1.79,959,1.219,967,0.533,1012,3.522,1023,0.595,1060,1.993,1069,1.534,1072,0.712,1091,2.863,1092,3.189,1093,3.895,1094,1.597,1096,2.596,1097,1.63,1127,0.927,1130,1.954,1143,0.788,1157,0.927,1282,1.405,1306,1.607,1307,1.249,1336,1.359,1476,0.824,1598,3.378,1610,1.405,1621,0.824,1691,0.868,1738,2.986,1748,4.265,1858,0.927,1862,2.438,1952,0.927,2018,1.897,2070,4.384,2071,0.927,2072,0.927,2075,0.824,2179,0.868,2191,4.223,2216,0.868,2217,0.824,2218,0.868,2252,1.607,2253,1.017,2254,1.883,2255,1.017,2256,1.017,2257,5.912,2258,1.017,2259,2.63,2260,1.017,2261,1.017,2262,1.017,2263,1.017,2264,1.017,2265,9.308,2266,1.017,2267,1.017,2268,1.017,2269,1.017,2270,1.017,2271,0.927,2272,1.883,2273,1.017,2274,1.017,2275,1.017,2276,1.017,2277,1.017,2278,2.63,2279,0.759,2280,1.017,2281,6.978,2282,3.852,2283,1.017,2284,1.017,2285,5.215,2286,1.017,2287,2.63,2288,1.883,2289,1.883,2290,1.017,2291,1.883,2292,1.017,2293,1.717,2294,1.717,2295,4.81,2296,1.883,2297,1.017,2298,1.883,2299,1.017,2300,1.017,2301,1.883,2302,2.63,2303,2.63,2304,3.852,2305,1.017,2306,1.017,2307,1.017,2308,2.63,2309,2.63,2310,1.883,2311,1.883,2312,1.883,2313,1.883,2314,1.017,2315,0.927,2316,1.017,2317,1.017,2318,1.017,2319,1.017,2320,1.017,2321,1.717,2322,1.017,2323,1.017,2324,1.017,2325,1.017]],["component/34",[178,0.572]],["title/35-1",[243,25.409,416,26.163,2326,55.534]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["title/35-2",[22,8.008,26,17.8,62,23.227]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["title/35-3",[114,46.202,710,47.41]],["name/35-3",[]],["text/35-3",[]],["component/35-3",[]],["title/35-4",[114,35.891,475,31.656,476,40.384,1025,39.043]],["name/35-4",[]],["text/35-4",[]],["component/35-4",[]],["title/35-5",[114,35.891,476,40.384,1025,39.043,1130,32.242]],["name/35-5",[]],["text/35-5",[]],["component/35-5",[]],["title/35-6",[114,40.399,476,45.457,2327,55.534]],["name/35-6",[]],["text/35-6",[]],["component/35-6",[]],["title/35-7",[311,15.809,327,22.733]],["name/35-7",[]],["text/35-7",[]],["component/35-7",[]],["title/35",[5,13.588,6,26.87,64,21.949,114,35.891]],["name/35",[5,0.491,6,0.971,114,1.297]],["text/35",[1,1.308,3,0.92,5,2.279,9,1.01,14,0.605,18,1.888,19,1.117,20,0.91,21,1.223,22,1.314,26,1.92,36,1.169,39,0.805,42,0.68,47,0.625,50,1.28,52,2.944,53,1.049,54,1.093,55,0.599,56,0.838,58,0.461,60,1.962,62,2.363,64,0.548,65,0.875,66,0.538,70,1.499,71,1.264,72,0.887,74,0.973,76,1.317,77,0.564,84,0.444,85,2.147,91,1.32,92,0.752,94,1.308,95,0.689,96,2.036,102,1.28,109,0.671,114,6.482,132,1.496,137,2.584,139,0.948,146,0.805,154,3.441,168,1.512,169,1.071,175,2.38,185,1.71,189,0.564,194,0.838,202,2.489,225,4.259,242,1.153,243,2.585,252,2.641,257,1.344,261,1.156,262,3.32,263,1.859,268,1.512,278,1.429,284,3.193,289,0.821,296,0.592,298,0.838,299,3.511,302,0.464,310,0.821,311,0.307,314,1.082,316,0.946,317,0.729,327,0.441,328,0.538,329,1.176,335,0.68,337,1.01,342,0.896,343,0.777,350,0.973,356,0.632,364,5.835,368,0.982,370,1.275,381,2.773,385,5.142,386,0.698,393,3.691,398,1.095,399,2.384,403,0.475,404,0.475,405,0.475,406,0.475,407,0.475,408,0.475,409,0.475,410,0.475,411,0.475,416,2.036,423,1.859,440,1.382,452,1.095,457,1.484,464,0.752,467,1.232,469,2.227,470,3.833,475,4.645,476,6.218,489,0.729,498,1.582,505,0.975,509,1.803,510,3.211,511,1.198,514,0.663,527,1.183,529,1.359,530,1.456,533,1.89,534,0.838,546,1.547,561,2.489,565,1.763,568,2.384,569,1.095,570,2.412,578,1.009,579,0.68,581,2.412,586,1.704,594,2.031,607,2.085,620,1.62,626,4.515,630,2.556,633,0.68,638,0.875,654,0.729,675,1.381,682,0.791,684,1.62,696,0.875,698,1.153,703,1.484,710,0.92,738,1.582,742,0.821,758,1.153,775,3.675,810,2.165,848,1.183,849,0.856,907,1.979,915,1.71,916,1.979,920,2.708,949,2.825,953,2.789,961,1.232,963,1.429,967,0.708,990,1.153,999,1.153,1009,1.71,1012,1.992,1023,1.429,1025,1.763,1066,2.592,1071,1.71,1072,0.946,1091,2.296,1092,1.62,1093,1.095,1094,3.215,1096,4.114,1097,2.938,1104,0.875,1117,1.62,1130,3.441,1226,0.74,1318,1.009,1350,0.896,1417,0.946,1421,1.095,1437,1.048,1550,1.71,1560,1.153,1566,4.322,1609,1.484,1700,3.42,1738,1.048,1740,1.048,1770,2.789,1801,0.975,1896,1.232,1938,1.232,2054,1.663,2210,1.71,2327,1.232,2328,1.048,2329,6.573,2330,5.295,2331,6.573,2332,2.444,2333,4.099,2334,1.232,2335,1.153,2336,2.444,2337,7.205,2338,4.741,2339,1.352,2340,1.352,2341,1.352,2342,3.344,2343,1.153,2344,1.352,2345,1.352,2346,1.352,2347,1.352,2348,1.232,2349,1.352,2350,1.352,2351,1.352,2352,1.232,2353,1.095,2354,1.352,2355,1.352,2356,3.538,2357,4.742,2358,2.227,2359,1.352,2360,1.352,2361,1.352,2362,1.352,2363,1.352,2364,1.352,2365,1.352,2366,1.352,2367,1.352,2368,1.352,2369,1.352,2370,1.352,2371,1.352,2372,3.344,2373,3.344,2374,5.295,2375,4.099,2376,1.352,2377,2.444,2378,1.352,2379,1.352,2380,1.352,2381,1.352,2382,1.352,2383,2.444]],["component/35",[178,0.572]],["title/36-1",[91,24.046,96,23.426,112,26.426]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["title/36-2",[42,22.251,64,17.944,74,17.621,112,19.194,137,19.799,514,21.694]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["title/36-3",[22,7.114,94,21.176,96,20.812,112,23.477]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["title/36-4",[22,7.114,77,22.574,96,20.812,511,26.535]],["name/36-4",[]],["text/36-4",[]],["component/36-4",[]],["title/36-5",[5,12.224,84,16.002,112,21.121,196,22.509,439,23.3]],["name/36-5",[]],["text/36-5",[]],["component/36-5",[]],["title/36-6",[302,23.94,307,25.486]],["name/36-6",[]],["text/36-6",[]],["component/36-6",[]],["title/36-7",[311,15.809,327,22.733]],["name/36-7",[]],["text/36-7",[]],["component/36-7",[]],["title/36",[5,15.295,6,30.245,112,26.426]],["name/36",[5,0.388,6,0.767,64,0.626,112,0.67]],["text/36",[0,0.714,1,0.442,2,0.714,4,1.125,5,2.144,6,0.56,16,1.198,18,2.22,19,0.948,20,1.616,21,1.743,22,1.274,24,1.145,26,1.833,37,2.284,42,4.071,43,1.375,46,1.841,50,2.699,53,2.014,55,1.273,56,0.699,57,0.914,58,1.216,60,0.992,62,0.43,64,1.446,69,0.394,70,2.598,71,1.717,72,1.043,73,0.938,74,3.668,75,0.714,77,2.477,79,0.685,80,1.135,84,2.545,85,1.166,87,2.842,90,2.279,91,3.257,92,0.628,94,2.87,96,3.869,100,0.511,102,0.591,103,0.784,105,0.591,112,4.409,120,0.438,121,0.628,128,1.192,130,0.5,132,1.287,137,2.807,139,1.383,151,1.516,154,1.235,155,1.682,159,0.618,168,0.511,169,0.495,171,1.213,175,2.767,181,1.428,185,1.451,186,2.492,188,3.718,189,1.487,196,2.383,211,0.6,213,1.36,218,0.79,219,0.79,225,4.176,230,0.54,237,1.625,240,1.029,243,0.865,245,0.609,257,2.854,261,0.981,262,3.369,263,0.628,268,0.765,277,0.628,284,0.959,298,0.699,306,0.685,311,0.256,314,0.5,317,1.922,319,1.285,327,0.368,328,0.826,329,2.206,330,1.607,335,0.568,337,2.301,341,2.415,342,0.749,350,0.45,351,0.628,356,0.969,357,0.914,358,0.79,359,1.727,361,1.375,363,1.071,368,2.643,370,2.264,376,0.79,378,0.553,383,0.547,386,1.841,388,1.135,389,2.456,390,1.004,392,0.685,393,2.806,395,0.628,396,0.914,399,0.568,402,0.814,403,1.011,404,0.397,405,0.397,406,0.397,407,0.397,408,0.397,409,0.397,410,0.397,411,0.397,416,0.485,423,1.153,439,2.244,440,0.857,457,2.165,464,2.866,470,0.56,472,1.82,489,0.609,509,3.202,510,1.153,511,2.912,514,2.042,523,0.749,527,1.727,529,1.599,530,1.713,543,0.672,546,0.714,549,0.842,561,3.607,563,0.6,568,1.043,579,1.043,586,2.626,592,0.714,594,3.381,595,0.768,596,1.451,597,0.672,610,2.454,625,0.79,630,0.609,633,2.094,635,0.66,638,0.731,642,0.618,643,1.375,663,1.235,675,0.638,680,1.172,684,0.749,689,0.638,696,0.731,703,2.848,713,1.029,717,0.516,738,1.342,739,1.496,745,3.228,775,2.229,785,2.085,786,0.699,791,1.451,812,4.389,821,0.875,848,1.393,858,1.957,859,0.672,901,0.914,902,2.626,905,0.6,930,3.796,931,3.796,932,1.029,934,5.414,935,1.029,936,2.621,937,2.621,938,1.89,942,1.029,963,0.66,967,0.591,1012,0.672,1013,1.213,1060,1.63,1069,1.667,1072,0.79,1120,0.875,1130,1.713,1254,0.814,1282,0.842,1336,0.814,1550,3.282,1555,1.029,1740,0.875,1770,3.191,1798,0.768,1862,0.714,2035,1.496,2051,0.963,2064,1.89,2075,0.914,2076,0.963,2178,1.89,2179,0.963,2182,0.842,2191,1.679,2293,1.89,2294,2.621,2384,1.129,2385,1.129,2386,1.129,2387,1.129,2388,1.129,2389,1.129,2390,4.164,2391,1.129,2392,1.129,2393,1.129,2394,1.129,2395,1.129,2396,1.129,2397,2.073,2398,2.073,2399,1.129,2400,1.129,2401,1.129,2402,1.129,2403,1.129,2404,1.129,2405,1.129,2406,1.129,2407,1.129,2408,2.073,2409,1.129,2410,1.029,2411,1.129,2412,3.565,2413,2.876,2414,4.164,2415,1.129,2416,2.073,2417,1.129,2418,1.129,2419,1.129,2420,1.129,2421,1.129,2422,1.129,2423,1.129,2424,1.129,2425,0.963,2426,1.129]],["component/36",[178,0.572]],["title/37-1",[78,32.361,112,26.426,175,17.8]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37-2",[84,20.022,132,27.259,1360,51.985]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["title/37-3",[302,23.94,307,25.486]],["name/37-3",[]],["text/37-3",[]],["component/37-3",[]],["title/37-4",[311,15.809,327,22.733]],["name/37-4",[]],["text/37-4",[]],["component/37-4",[]],["title/37",[20,13.249,21,11.244,22,6.4,78,25.864,112,21.121]],["name/37",[36,0.936,78,1.039,112,0.849]],["text/37",[1,0.733,5,2.343,7,3.686,13,1.095,18,2.033,20,0.888,21,1.786,22,1.455,26,1.721,30,5.557,34,2.579,35,1.759,37,1.255,39,1.944,50,2.72,52,1.815,58,0.639,64,0.759,66,2.346,70,2.545,71,1.817,73,1.476,74,0.746,76,1.009,77,3.75,78,5.898,83,1.686,84,1.707,87,0.896,91,1.288,96,1.668,103,0.708,109,0.93,112,3.9,116,1.115,117,4.188,120,0.726,132,3.602,136,3.928,137,2.324,154,2.585,158,1.076,162,1.16,166,1.137,168,1.476,169,0.821,175,2.569,180,1.445,186,1.46,189,2.166,196,0.866,198,0.907,213,0.886,225,3.666,245,1.759,252,1.492,257,0.752,258,5.191,262,1.9,268,1.6,282,1.242,284,1.509,285,1.598,296,0.821,298,2.022,300,1.212,311,0.425,328,1.3,329,1.525,334,1.076,335,2.182,350,0.746,354,1.025,368,2.963,370,1.654,375,1.598,388,2.375,389,0.981,390,2.515,393,1.931,398,1.516,399,0.942,403,0.658,404,0.658,405,1.148,406,0.658,407,0.658,408,0.658,409,0.658,410,0.658,411,0.658,439,3.096,440,1.348,445,1.31,446,1.274,449,1.397,464,1.041,468,1.041,470,1.62,474,5.48,487,1.397,499,2.221,509,1.009,510,1.041,514,2.888,527,3.746,529,1.041,530,1.115,534,4.008,550,1.274,552,1.397,555,1.351,563,2.305,577,1.876,594,1.137,596,2.284,597,1.115,598,3.634,599,1.212,630,1.009,633,0.942,635,1.095,642,1.786,654,1.009,669,2.53,675,1.058,678,1.185,680,2.935,684,1.242,710,1.274,780,1.137,781,1.516,798,1.844,803,1.351,813,1.397,819,3.634,820,2.643,826,1.516,848,2.101,849,1.185,855,1.786,857,1.274,859,1.115,860,1.095,863,3.363,864,1.351,869,1.516,881,2.494,902,0.954,905,1.734,911,1.212,918,1.16,924,1.663,964,2.785,966,1.242,999,1.598,1013,1.909,1015,1.516,1016,1.598,1017,1.707,1018,1.451,1019,4.868,1020,1.707,1021,1.707,1022,1.707,1023,1.095,1026,1.242,1037,1.707,1038,1.707,1039,1.707,1040,1.707,1041,1.707,1043,1.598,1046,1.707,1047,1.598,1150,1.598,1178,2.975,1454,1.351,1861,1.598,2427,1.872,2428,1.872,2429,1.872,2430,1.872,2431,1.872,2432,1.872,2433,1.516,2434,1.872,2435,1.872,2436,3.264,2437,1.872,2438,1.872,2439,1.397,2440,1.872,2441,1.872,2442,1.872,2443,1.872,2444,1.872,2445,1.872,2446,1.872]],["component/37",[178,0.572]],["title/38-1",[302,23.94,307,25.486]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[311,15.809,327,22.733]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38",[10,17.769,18,10.242,22,5.33,26,11.848,42,20.391,71,12.505,138,29.251]],["name/38",[10,0.677,14,0.691,141,1.408,316,1.081]],["text/38",[1,0.754,5,0.84,9,1.383,10,4.517,14,1.498,18,1.515,20,1.79,21,1.81,22,1.257,24,2.11,26,1.922,30,1.832,37,1.287,38,3.019,42,4.876,46,0.995,52,1.072,54,0.862,58,1.807,61,1.438,62,2.287,64,1.357,70,1.938,71,1.634,72,1.61,73,0.872,79,1.17,82,1.753,89,1.861,94,2.073,95,1.706,100,0.872,102,1.009,103,1.265,109,1.662,112,0.836,118,1.108,131,2.22,132,1.498,133,1.349,134,2.167,137,3.161,138,6.678,139,0.748,142,1.039,153,1.17,155,1.127,175,2.185,181,0.957,186,1.498,189,2.21,196,0.891,198,2.149,202,2.694,225,3.462,230,0.922,243,1.396,245,1.039,252,2.028,262,1.224,263,1.072,267,1.494,268,0.711,274,1.39,301,1.494,308,1.072,311,0.437,319,3.283,327,1.729,328,1.333,329,1.56,337,2.478,341,1.452,343,1.108,354,1.832,359,1.621,363,1.729,368,0.775,370,1.692,378,1.641,390,0.934,392,1.17,393,1.97,397,1.072,403,0.678,404,0.678,405,0.678,406,0.678,407,0.678,408,0.678,409,0.678,410,0.678,411,0.678,416,0.828,430,1.438,439,0.922,454,3.786,455,1.278,470,2.203,499,1.312,510,1.072,511,0.945,512,1.127,518,1.148,523,7.174,533,2.507,542,2.342,552,2.498,554,4.602,561,1.17,563,2.815,565,1.39,568,1.683,577,1.108,596,2.342,597,1.148,614,2.942,616,1.089,626,1.958,630,1.039,633,0.969,643,1.278,645,1.024,663,1.994,725,0.982,726,4.29,767,1.757,771,1.127,786,1.194,824,1.039,832,1.055,849,1.22,855,1.055,918,3.283,927,2.278,953,1.312,985,1.349,995,2.278,1023,1.958,1026,1.278,1044,1.438,1060,2.028,1069,0.901,1082,2.033,1084,2.119,1088,1.39,1091,1.621,1092,1.278,1126,1.561,1130,1.994,1226,1.055,1232,5.654,1262,2.872,1333,4.745,1414,3.283,1417,1.349,1514,5.333,1517,1.757,1561,1.39,1572,3.439,1585,3.051,1610,3.31,1627,1.757,1629,1.494,1634,1.561,1635,1.757,1636,1.438,1637,1.757,1785,1.494,1820,1.127,1976,1.645,1987,1.757,1988,1.757,1990,1.757,2166,1.757,2357,4.745,2447,1.757,2448,5.996,2449,1.927,2450,1.927,2451,1.927,2452,1.927,2453,1.927,2454,3.347,2455,1.927,2456,1.927,2457,1.757,2458,1.927,2459,1.927,2460,1.927,2461,1.757,2462,1.927,2463,1.927,2464,1.645,2465,1.757,2466,1.757,2467,1.927,2468,1.927,2469,1.927,2470,1.927,2471,1.927,2472,1.927,2473,1.927,2474,1.927,2475,3.051,2476,4.83,2477,3.347,2478,6.818,2479,1.927,2480,1.927,2481,1.927,2482,1.927,2483,1.927,2484,1.927,2485,3.347,2486,3.347,2487,3.347,2488,3.347,2489,3.347,2490,3.347,2491,3.347,2492,3.347,2493,3.347,2494,3.347,2495,1.927,2496,1.927,2497,1.927,2498,1.927,2499,1.757,2500,1.927,2501,1.927,2502,3.347,2503,1.927,2504,1.927,2505,1.927,2506,1.927,2507,1.927,2508,1.927,2509,1.927,2510,1.927,2511,1.927,2512,1.927,2513,1.927,2514,1.927,2515,1.927,2516,1.927]],["component/38",[178,0.572]],["title/39",[]],["name/39",[9,0.638,22,0.203,159,0.845,491,1.153]],["text/39",[]],["component/39",[178,0.572]],["title/40",[]],["name/40",[4,0.765,11,1.46,296,0.857]],["text/40",[]],["component/40",[178,0.572]],["title/41-1",[20,11.034,21,9.364,22,5.33,100,18.339,120,15.727,129,25.125,130,17.954]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[18,11.177,22,5.816,58,15.089,72,16.056,120,17.162,130,19.592]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[18,11.177,22,5.816,24,17.621,72,16.056,120,17.162,130,19.592]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[22,7.114,24,21.554,72,19.639,436,37.871]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41-5",[18,11.177,22,5.816,69,15.438,72,16.056,120,17.162,130,19.592]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["title/41-6",[302,23.94,307,25.486]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["title/41-7",[311,15.809,327,22.733]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["title/41",[20,12.041,21,10.218,22,5.816,120,17.162,129,27.417,130,19.592]],["name/41",[22,0.203,617,1.051,1267,1.024,1980,1.197]],["text/41",[4,0.511,5,0.328,7,0.846,8,0.889,9,0.979,18,2.689,19,1.084,20,2.186,21,1.855,22,1.496,24,3.891,26,0.692,28,1.679,35,1.278,37,2.481,39,0.778,47,1.847,52,1.318,53,0.561,54,0.585,55,0.579,58,3.018,62,1.974,68,0.684,69,2.803,70,3.072,71,1.597,72,4.008,73,1.072,74,1.295,89,0.727,100,4.115,103,2.44,112,1.028,120,3.257,129,5.096,130,3.79,139,1.549,151,0.556,159,2.186,169,1.039,175,0.382,180,1.769,185,1.658,186,3.758,189,0.988,193,0.827,198,1.935,213,4.838,215,0.914,225,1.765,243,1.356,245,0.704,261,1.538,262,1.894,263,2.574,268,3.033,277,1.318,279,0.914,283,0.675,296,0.573,298,0.81,311,0.297,314,0.579,315,2.93,322,3.848,328,0.52,329,2.269,350,1.295,354,0.715,358,0.914,370,2.318,378,0.641,379,0.889,382,0.975,383,0.633,386,1.224,389,1.703,393,2.911,395,0.727,403,0.459,404,0.459,405,0.459,406,0.459,407,0.459,408,0.459,409,0.459,410,0.459,411,0.459,416,1.018,417,1.572,430,0.561,436,0.914,440,0.54,458,0.81,489,1.278,511,1.959,518,0.778,533,0.738,546,0.827,577,0.751,586,1.657,599,1.534,617,6.699,618,1.534,633,2.845,645,0.694,668,2.38,689,0.738,693,1.869,697,0.867,717,0.597,771,0.764,777,4.515,781,1.058,799,1.013,810,0.846,812,0.914,825,1.013,855,0.715,877,0.889,902,0.666,905,0.694,913,0.914,918,0.81,925,2.156,949,0.778,967,1.703,1009,2.275,1013,0.764,1023,1.902,1026,0.867,1044,0.975,1060,1.826,1069,1.868,1072,0.914,1091,4.693,1096,0.778,1117,0.867,1262,1.534,1284,3.581,1303,1.058,1402,2.022,1413,5.791,1418,2.426,1419,2.426,1420,2.775,1422,1.5,1423,0.827,1570,1.191,1575,0.975,1577,1.115,1601,1.191,1608,2.16,1609,1.975,1711,0.943,1725,0.81,1763,1.115,1798,0.889,1801,1.71,1820,0.764,1903,1.058,1947,1.191,1980,2.52,2035,2.346,2133,1.013,2134,1.191,2138,1.191,2180,1.191,2182,2.426,2207,0.943,2321,1.191,2328,1.013,2334,1.191,2517,2.37,2518,3.409,2519,1.115,2520,1.307,2521,2.022,2522,1.013,2523,1.307,2524,1.307,2525,1.837,2526,2.37,2527,1.307,2528,1.115,2529,1.307,2530,0.975,2531,1.307,2532,1.191,2533,1.307,2534,3.252,2535,1.307,2536,1.307,2537,1.307,2538,1.307,2539,1.307,2540,1.307,2541,2.37,2542,3.995,2543,1.191,2544,1.058,2545,4.749,2546,2.834,2547,1.307,2548,1.307,2549,1.307,2550,1.307,2551,1.307,2552,1.307,2553,1.115,2554,1.307,2555,2.37,2556,1.307,2557,1.307,2558,1.307,2559,1.013,2560,1.307]],["component/41",[178,0.572]],["title/42-1",[1267,53.953]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[10,21.337,18,12.299,22,6.4,26,14.226,1362,37.738]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[9,22.361,10,23.718,175,15.814,304,46.184]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[302,23.94,307,25.486]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42-5",[311,15.809,327,22.733]],["name/42-5",[]],["text/42-5",[]],["component/42-5",[]],["title/42",[18,11.177,30,24.218,131,29.342,132,19.799,133,30.961,134,28.646]],["name/42",[30,0.845,131,1.024,132,0.691,134,1]],["text/42",[1,1.919,5,1.548,7,3.587,9,2.811,10,4.612,14,1.36,18,2.137,21,1.424,22,1.313,24,0.48,26,2.59,29,1.588,30,2.391,32,1.028,34,1.093,35,3.505,36,0.577,37,2.371,42,1.887,46,1.569,52,1.689,54,2.195,55,2.172,56,0.747,57,0.976,58,1.976,60,1.053,62,1.665,64,1.232,65,0.78,66,1.21,69,0.42,70,2.489,71,1.347,73,0.996,74,0.48,77,0.918,80,0.659,83,2.533,84,1.767,85,0.489,87,0.577,92,0.67,98,0.799,112,0.523,116,0.718,120,2.392,129,1.364,131,4.089,132,1.679,133,6.504,134,2.828,137,1.679,138,3.151,139,1.694,140,0.976,151,0.512,161,0.705,164,2.157,165,1.205,175,2.769,180,1.934,189,2.046,196,0.557,198,3.295,202,1.845,225,4.027,234,0.64,238,0.799,257,0.484,261,1.775,262,1.794,268,0.812,278,1.287,284,1.018,302,0.756,311,0.273,323,0.899,328,1.21,329,2.168,334,1.265,337,2.221,341,1.895,354,1.663,359,2.116,363,1.569,365,0.869,368,1.221,370,2.05,377,2.157,378,1.079,383,0.584,385,0.78,386,0.622,389,2.568,390,1.472,392,1.337,393,0.448,403,0.424,404,0.424,405,0.424,406,0.424,407,0.424,408,0.424,409,0.424,410,0.424,411,0.424,430,0.945,439,0.577,440,1.255,441,0.705,445,1.54,446,0.82,470,0.598,473,3.151,474,0.67,475,3.607,483,1.425,489,2.023,498,1.967,499,2.068,514,1.49,533,2.468,534,1.883,542,3.432,547,2.015,550,2.068,552,2.267,555,0.869,561,2.279,563,0.64,568,1.528,579,1.528,586,0.614,592,2.375,596,0.843,597,0.718,598,0.843,614,2.488,616,1.717,630,1.638,642,1.663,645,1.614,649,1.46,652,1.588,654,2.355,663,1.311,675,1.717,680,0.681,689,0.681,703,0.732,771,3.607,780,1.845,782,1.54,791,2.626,794,1.028,798,4.27,827,0.976,835,0.976,846,0.976,848,0.584,855,1.205,863,1.706,882,1.028,924,2.499,953,0.82,966,2.015,967,1.153,1026,0.799,1030,0.899,1043,1.028,1059,1.54,1060,0.551,1062,1.098,1066,0.934,1069,0.563,1082,1.337,1084,1.393,1088,1.588,1091,0.584,1092,0.799,1104,5.954,1139,1.028,1226,2.054,1301,0.934,1351,1.028,1361,0.799,1362,2.908,1407,0.843,1414,0.747,1417,0.843,1440,2.007,1469,2.553,1561,2.192,1575,1.642,1629,0.934,1713,0.934,1773,0.934,1785,0.934,1889,2.007,1897,3.727,1930,0.763,1975,2.007,1976,1.028,1977,2.77,1978,1.098,1979,3.982,1980,2.908,1981,1.098,1982,1.098,1983,1.098,1992,3.421,1995,2.007,1996,2.007,1999,3.982,2221,1.098,2464,1.028,2465,2.007,2466,1.098,2561,1.028,2562,1.098,2563,1.205,2564,1.205,2565,1.098,2566,2.007,2567,1.205,2568,3.039,2569,5.927,2570,1.205,2571,1.205,2572,1.205,2573,1.205,2574,2.201,2575,1.205,2576,1.205,2577,2.201,2578,1.205,2579,4.471,2580,2.201,2581,2.201,2582,3.039,2583,2.201,2584,2.201,2585,5.794,2586,5.794,2587,2.201,2588,2.201,2589,2.201,2590,2.201,2591,2.201,2592,2.201,2593,3.039,2594,3.039,2595,4.905,2596,3.039,2597,3.039,2598,1.205,2599,2.007,2600,2.007,2601,1.205,2602,1.098,2603,1.028,2604,1.205,2605,3.752,2606,3.039,2607,1.205,2608,2.201,2609,1.205,2610,1.205,2611,1.205]],["component/42",[178,0.572]],["title/43-1",[5,12.224,10,21.337,112,21.121,131,32.288,579,24.485]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[1,21.176,134,35.039,475,31.656,2612,49.337]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[1,19.05,10,21.337,74,19.39,134,31.521,475,28.478]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[302,23.94,307,25.486]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43-5",[311,15.809,327,22.733]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["title/43",[5,12.224,18,12.299,112,21.121,131,32.288,134,31.521]],["name/43",[5,0.388,112,0.67,131,1.024,134,1]],["text/43",[0,0.972,1,3.646,4,1.072,5,1.921,6,1.842,10,4.538,14,0.687,18,2.321,19,1.253,20,0.418,21,1.195,22,1.17,26,1.821,37,2.396,42,1.866,46,1.916,47,1.267,50,1.943,52,3.194,54,2.017,55,0.68,58,2.919,62,1.415,64,1.111,66,1.091,70,2.571,71,0.845,72,2.415,73,2.039,74,1.478,76,2.791,84,0.505,85,1.111,94,2.247,95,0.783,100,0.695,104,1.943,112,2.246,122,1.146,123,1.146,131,3.433,134,6.704,138,1.977,139,1.439,140,1.244,146,0.915,168,0.695,175,2.444,180,2.947,189,2.159,196,1.715,198,0.744,215,1.075,225,4.313,230,0.735,238,1.018,262,1.357,302,1.275,308,0.854,311,0.348,314,0.68,328,2.062,329,2.34,335,1.866,337,2.75,341,2.492,350,1.091,355,1.311,359,2.782,363,1.415,368,1.491,370,2.376,383,1.327,386,1.415,389,3.008,397,0.854,402,1.108,403,0.54,404,0.54,405,0.54,406,0.54,407,0.54,408,0.54,409,0.54,410,0.54,411,0.54,417,1.817,423,0.854,439,0.735,440,0.635,455,1.018,458,0.952,464,0.854,470,2.57,472,0.972,475,5.704,489,2,498,2.919,510,2.878,542,4.361,543,0.915,548,1.19,550,2.525,552,4.286,555,2.677,560,3.166,563,0.816,579,1.866,592,1.735,596,1.918,597,0.915,614,4.414,638,0.994,643,2.461,654,0.828,663,1.633,703,1.664,726,5.922,742,2.253,753,1.244,754,3.383,848,1.797,849,0.972,902,0.783,903,1.19,914,1.603,966,1.018,1015,1.244,1030,3.364,1044,1.146,1060,2.626,1069,2.42,1082,1.664,1226,2.468,1561,4.144,1588,1.311,1711,1.108,1731,1.018,2018,1.108,2191,1.244,2433,2.219,2457,2.498,2461,2.498,2464,2.339,2525,1.19,2565,1.4,2566,1.4,2569,8.25,2579,6.406,2600,2.498,2612,6.406,2613,1.536,2614,1.536,2615,2.74,2616,1.536,2617,1.536,2618,1.536,2619,4.509,2620,1.4,2621,1.536,2622,4.509,2623,2.74,2624,1.536,2625,1.536,2626,3.711,2627,3.711,2628,3.711,2629,1.536,2630,1.536,2631,1.536,2632,4.509,2633,2.74,2634,2.74,2635,2.74,2636,2.74,2637,1.536,2638,2.74,2639,1.536,2640,1.536,2641,2.74,2642,2.74,2643,2.74,2644,2.74,2645,1.536,2646,2.74,2647,1.536,2648,2.74,2649,1.536,2650,3.711,2651,1.536,2652,3.711,2653,2.74,2654,1.536,2655,1.536,2656,2.74,2657,2.74,2658,2.74,2659,1.536,2660,2.74,2661,2.74,2662,1.536,2663,1.536]],["component/43",[178,0.572]],["title/44",[]],["name/44",[4,1.64]],["text/44",[]],["component/44",[178,0.572]],["title/45-1",[174,42.628,176,40.399,1267,40.399]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["title/45-2",[22,7.114,174,37.871,175,15.814,176,35.891]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["title/45-3",[10,19.39,22,5.816,62,16.87,174,30.961,175,12.929,176,29.342]],["name/45-3",[]],["text/45-3",[]],["component/45-3",[]],["title/45-4",[302,23.94,307,25.486]],["name/45-4",[]],["text/45-4",[]],["component/45-4",[]],["title/45-5",[311,15.809,327,22.733]],["name/45-5",[]],["text/45-5",[]],["component/45-5",[]],["title/45",[6,21.967,20,12.041,21,10.218,22,5.816,174,30.961,175,12.929]],["name/45",[6,0.767,64,0.626,174,1.081,176,1.024]],["text/45",[1,0.438,2,0.708,5,0.889,6,1.021,7,0.4,9,3.516,10,0.901,12,0.643,16,1.189,18,1.845,19,0.511,20,1.126,21,1.575,22,1.327,26,1.497,29,0.807,37,0.43,42,0.563,47,0.517,50,1.854,52,1.968,56,0.693,58,0.973,59,0.501,61,4.883,62,0.427,64,0.834,68,1.077,70,2.283,71,1.276,74,0.819,76,1.109,77,3.217,78,0.594,82,4.457,83,1.474,87,0.535,89,1.143,91,1.397,94,2.442,96,1.792,109,0.555,112,0.485,114,0.742,116,1.225,122,0.835,123,0.835,137,2.085,139,0.434,147,0.529,154,1.225,161,0.654,162,0.693,164,0.643,165,0.612,166,0.679,174,6.491,175,2.805,176,4.985,180,0.495,194,0.693,198,3.983,207,1.364,225,3.868,245,1.538,261,0.973,262,0.752,268,1.305,281,1.02,284,0.951,310,0.679,311,0.254,324,6.582,328,0.819,329,1.802,334,1.182,335,2.785,337,0.462,338,0.906,341,0.485,342,0.742,358,0.783,359,0.542,368,1.147,370,0.784,371,0.867,381,0.654,388,2.551,389,1.077,393,0.765,397,0.622,399,0.563,400,2.477,403,0.393,404,0.393,405,0.393,406,0.393,407,0.393,408,0.393,409,0.393,410,0.393,411,0.393,416,0.48,440,0.462,455,3.091,468,1.587,470,2.544,474,1.587,509,0.603,514,0.548,518,1.225,523,4.139,525,0.761,527,3.736,529,0.622,534,1.768,537,3.771,540,0.955,541,0.955,542,1.439,550,0.761,554,4.579,555,2.059,557,0.955,562,0.835,563,1.092,565,1.483,568,1.034,571,2.129,577,0.643,586,2.375,613,0.761,616,0.632,629,0.906,630,1.109,643,1.364,668,0.666,671,0.955,678,0.708,680,0.632,684,1.892,686,0.835,687,3.774,689,2,717,0.94,723,0.835,771,1.669,779,1.755,780,0.679,796,1.439,798,0.632,804,0.724,832,0.612,839,5.966,846,2.867,848,1.382,855,1.562,858,1.942,859,1.225,860,0.654,872,0.867,911,1.331,914,1.669,924,2.822,949,1.225,957,0.955,967,1.077,968,3.227,985,3.261,995,2.409,1012,0.666,1013,1.669,1023,0.654,1044,0.835,1094,1.249,1096,1.225,1104,6.116,1115,0.708,1117,2.347,1125,0.783,1130,0.666,1232,4.721,1350,0.742,1361,0.742,1391,1.875,1421,3.774,1442,0.955,1486,0.955,1489,0.835,1514,4.453,1522,1.02,1725,4.78,1847,0.867,1856,3.227,1857,2.601,1866,1.02,1868,1.02,1897,4.373,1934,1.02,2023,1.02,2204,1.02,2265,5.048,2664,6.242,2665,2.056,2666,2.056,2667,1.119,2668,1.119,2669,4.661,2670,1.119,2671,1.119,2672,8.372,2673,1.119,2674,2.601,2675,1.119,2676,6.82,2677,1.119,2678,1.119,2679,0.807,2680,1.119,2681,1.119,2682,1.119,2683,1.119,2684,1.119,2685,1.119,2686,1.119,2687,1.119,2688,1.119,2689,1.119,2690,1.119,2691,2.854,2692,1.119,2693,2.056,2694,2.056,2695,1.119,2696,2.854,2697,1.119,2698,1.119,2699,1.119,2700,1.119,2701,1.119,2702,1.119,2703,1.119,2704,1.119,2705,1.119,2706,2.056,2707,2.056,2708,2.056,2709,2.056,2710,6.545,2711,7.517,2712,7.517,2713,7.517,2714,7.517,2715,1.119,2716,1.119,2717,1.119,2718,1.119,2719,1.119,2720,2.056,2721,2.056,2722,5.537,2723,1.119,2724,1.119,2725,1.119,2726,1.119,2727,1.119,2728,2.056,2729,1.119,2730,1.119,2731,1.119,2732,1.119,2733,1.119,2734,1.119,2735,1.119,2736,1.119,2737,1.119,2738,1.119,2739,1.119,2740,3.54,2741,2.056,2742,1.119,2743,1.119,2744,2.854,2745,1.119,2746,2.854,2747,1.119,2748,2.056,2749,1.119,2750,2.056,2751,2.056,2752,2.854,2753,0.955,2754,1.119,2755,1.119,2756,1.119,2757,1.119,2758,1.119,2759,1.119,2760,2.056,2761,2.056,2762,2.056,2763,2.056,2764,2.056,2765,2.056,2766,2.056,2767,2.056,2768,2.056,2769,2.056,2770,1.119,2771,1.119,2772,1.119,2773,1.119,2774,1.119,2775,2.056,2776,1.119,2777,1.119,2778,1.119,2779,1.119,2780,1.119,2781,1.119,2782,1.119,2783,1.119,2784,1.119,2785,1.119,2786,1.119,2787,1.119,2788,1.119]],["component/45",[178,0.572]],["title/46-1",[22,9.158,2789,63.511]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["title/46-2",[22,9.158,2790,63.511]],["name/46-2",[]],["text/46-2",[]],["component/46-2",[]],["title/46-3",[22,9.158,2791,63.511]],["name/46-3",[]],["text/46-3",[]],["component/46-3",[]],["title/46-4",[9,28.785,22,9.158]],["name/46-4",[]],["text/46-4",[]],["component/46-4",[]],["title/46-5",[20,12.041,21,10.218,22,5.816,127,22.852,257,17.781,824,23.853]],["name/46-5",[]],["text/46-5",[]],["component/46-5",[]],["title/46-6",[5,12.224,22,6.4,71,15.016,72,17.667,906,31.521]],["name/46-6",[]],["text/46-6",[]],["component/46-6",[]],["title/46-7",[5,12.224,22,6.4,71,15.016,72,17.667,170,31.521]],["name/46-7",[]],["text/46-7",[]],["component/46-7",[]],["title/46-8",[29,58.692]],["name/46-8",[]],["text/46-8",[]],["component/46-8",[]],["title/46-9",[62,26.563,175,20.357]],["name/46-9",[]],["text/46-9",[]],["component/46-9",[]],["title/46-10",[302,23.94,307,25.486]],["name/46-10",[]],["text/46-10",[]],["component/46-10",[]],["title/46-11",[311,15.809,327,22.733]],["name/46-11",[]],["text/46-11",[]],["component/46-11",[]],["title/46",[20,13.249,21,11.244,22,6.4,97,25.498,177,33.132]],["name/46",[97,1.025,175,0.572,177,1.331]],["text/46",[5,2.315,7,3.546,9,3.908,13,1.555,14,0.664,15,4.484,16,2.772,17,2.624,18,1.65,19,1.651,20,1.778,21,0.614,22,1.393,24,0.591,29,1.918,36,1.272,37,1.691,42,0.747,44,1.721,50,0.777,53,0.638,54,0.664,60,0.71,66,2.239,69,2.132,70,1.85,71,1.356,72,1.836,73,0.671,77,3.733,78,2.336,84,2.562,85,1.078,88,0.868,91,2.411,94,1.72,97,4.953,120,1.4,127,1.864,142,1.433,144,2.783,146,0.884,147,0.702,151,1.87,163,2.798,166,0.901,167,2.337,168,0.671,169,1.165,170,1.721,171,0.868,175,1.643,177,3.826,194,0.92,225,4.441,243,0.619,252,1.215,255,1.984,257,2.033,263,2.007,268,1.622,277,2.813,278,0.868,280,1.584,296,0.651,307,0.543,308,0.825,311,0.337,314,1.947,329,2.428,334,2.075,335,1.337,337,0.613,341,0.644,342,0.984,349,1.151,350,1.059,356,0.694,359,0.719,360,2.337,363,0.767,368,1.767,370,1.676,378,2.156,381,2.959,382,1.108,384,0.825,393,2.272,394,1.151,403,0.522,404,0.522,405,0.522,406,0.522,407,0.522,408,0.522,409,0.522,410,0.522,411,0.522,416,0.638,436,1.039,437,1.151,440,1.098,445,1.039,472,0.94,473,1.071,474,2.445,481,1.151,489,2.37,509,1.946,521,1.202,527,3.345,529,2.007,530,2.151,533,0.839,570,1.918,578,1.984,580,1.202,592,0.94,598,1.039,616,1.502,633,0.747,638,1.721,654,0.8,689,0.839,707,1.353,710,1.809,717,0.679,723,1.108,777,1.039,780,0.901,784,0.777,786,2.237,796,1.039,798,2.04,800,1.202,803,3.649,813,2.694,818,2.526,821,1.151,824,1.946,826,5.86,830,1.202,856,4.611,859,4.644,860,2.572,862,3.291,864,3.649,866,3.291,867,1.353,868,2.423,869,2.923,870,3.291,871,1.353,872,1.151,873,1.202,874,1.353,875,1.353,876,3.291,880,1.353,883,2.06,884,1.353,885,2.423,886,1.353,887,2.423,888,1.353,889,1.353,892,4.008,893,2.153,894,2.153,895,2.423,896,1.353,897,2.423,898,4.008,899,1.353,900,1.353,902,1.355,903,2.06,904,1.202,905,0.789,906,2.847,907,1.202,908,2.923,924,2.24,927,1.01,963,0.868,967,1.89,977,1.151,996,1.151,1012,2.151,1023,2.112,1091,1.748,1104,0.961,1115,1.683,1137,1.353,1195,1.039,1272,3.752,1301,1.151,1390,1.108,1408,1.151,1472,2.268,1519,1.353,1571,5.153,1572,4.358,1598,2.798,1636,1.108,1725,2.237,1861,1.267,1862,1.683,1901,1.267,1967,1.267,2002,2.798,2004,2.923,2098,1.353,2210,2.526,2211,3.081,2343,1.267,2352,2.423,2562,1.353,2789,3.291,2790,3.291,2791,2.423,2792,1.484,2793,1.484,2794,1.484,2795,1.484,2796,1.484,2797,2.658,2798,1.353,2799,1.484,2800,1.484,2801,1.267,2802,1.484,2803,1.484,2804,1.484,2805,1.484]],["component/46",[178,0.572]],["title/47-1",[24,24.262,84,20.022,967,31.903]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["title/47-2",[18,11.177,22,5.816,64,17.944,213,20.927,1350,29.342,2439,33.016]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["title/47-3",[24,21.554,59,24.217,64,21.949,212,46.184]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["title/47-4",[55,26.974,147,28.813,302,20.933]],["name/47-4",[]],["text/47-4",[]],["component/47-4",[]],["title/47-5",[24,27.747,151,29.627]],["name/47-5",[]],["text/47-5",[]],["component/47-5",[]],["title/47-6",[24,21.554,58,18.457,513,31.656,700,43.83]],["name/47-6",[]],["text/47-6",[]],["component/47-6",[]],["title/47-7",[58,16.604,121,27.07,268,17.956,326,32.288,2546,26.649]],["name/47-7",[]],["text/47-7",[]],["component/47-7",[]],["title/47-8",[22,4.567,24,13.835,84,11.417,257,13.96,280,20.695,326,23.037,1236,29.644,1361,23.037,2546,19.014]],["name/47-8",[]],["text/47-8",[]],["component/47-8",[]],["title/47-9",[24,27.747,320,35.037]],["name/47-9",[]],["text/47-9",[]],["component/47-9",[]],["title/47-10",[64,21.949,147,25.598,213,25.598,2439,40.384]],["name/47-10",[]],["text/47-10",[]],["component/47-10",[]],["title/47-11",[22,8.008,24,24.262,69,21.255]],["name/47-11",[]],["text/47-11",[]],["component/47-11",[]],["title/47-12",[22,8.008,62,23.227,645,32.361]],["name/47-12",[]],["text/47-12",[]],["component/47-12",[]],["title/47-13",[302,23.94,307,25.486]],["name/47-13",[]],["text/47-13",[]],["component/47-13",[]],["title/47-14",[311,15.809,327,22.733]],["name/47-14",[]],["text/47-14",[]],["component/47-14",[]],["title/47",[22,7.114,24,21.554,69,18.883,257,21.749]],["name/47",[22,0.257,24,0.779,69,0.683]],["text/47",[1,0.814,5,0.523,8,0.771,9,0.468,10,0.912,16,0.969,18,1.798,19,0.518,20,0.785,21,0.481,22,1.401,23,1.533,24,3.55,26,0.331,28,1.49,36,1.381,44,0.734,49,0.717,50,1.09,53,0.487,55,1.584,56,2.914,58,2.765,59,3.185,60,0.996,62,2.397,64,1.17,66,1.424,69,1.457,70,1.528,73,0.513,74,0.451,76,0.611,77,0.473,83,0.585,84,1.699,91,1.412,94,0.443,95,1.47,96,0.436,99,0.578,100,2.127,111,3.079,121,2.322,132,0.931,136,0.688,137,0.931,147,2.444,151,2.374,153,0.688,155,2.443,159,0.62,162,0.702,165,0.62,168,0.513,175,2.006,180,1.85,181,0.563,186,0.931,189,0.868,191,0.734,198,1.732,204,1.613,211,0.602,212,3.564,213,3.475,215,0.793,217,1.139,219,2.503,225,3.516,226,0.967,230,1.381,234,0.602,243,1.204,252,0.518,257,3.871,261,0.536,262,1.308,267,0.879,268,1.319,270,2.703,276,1.964,277,1.989,280,5.012,288,1.553,294,1.416,296,2.061,302,2.598,310,1.264,311,0.655,312,2.316,313,1.501,314,1.85,316,2.503,317,0.611,320,3.162,321,2.802,322,2.644,326,3.427,328,0.829,329,0.732,335,0.57,337,0.86,341,0.903,344,0.879,348,1.456,350,0.829,354,1.579,356,1.349,360,0.734,361,1.38,368,1.89,369,0.879,370,1.1,378,0.556,379,5.145,381,0.663,383,1.732,385,1.868,386,1.075,393,2.952,395,0.63,397,0.63,403,0.732,404,0.399,405,1.015,406,0.399,407,0.399,408,0.399,409,0.399,410,0.399,411,0.399,430,0.894,439,0.996,440,1.726,470,1.033,475,0.663,487,0.846,502,1.613,509,0.611,511,1.02,512,1.688,513,3.855,514,0.556,518,2.802,527,0.549,529,0.63,530,0.675,532,1.553,546,0.717,550,0.771,558,0.818,561,1.264,562,0.846,563,0.602,568,1.047,592,1.317,600,0.967,616,0.641,626,4.644,630,0.611,632,2.462,642,1.139,645,1.9,649,0.752,682,0.663,693,1.196,700,0.918,703,0.688,709,1.033,726,0.688,742,2.172,780,0.688,781,0.918,784,1.873,798,0.641,824,0.611,832,0.62,835,0.918,849,0.717,859,2.131,879,0.879,881,1.196,883,0.879,911,0.734,913,0.793,915,1.456,916,0.918,918,0.702,919,0.967,920,0.918,922,2.462,923,1.776,925,1.38,927,1.416,949,0.675,959,0.734,967,2.463,989,0.818,1019,0.793,1060,0.518,1069,0.53,1071,0.793,1091,1.008,1094,1.264,1096,1.24,1097,0.702,1104,0.734,1125,0.793,1248,2.856,1250,2.703,1251,2.856,1255,0.846,1279,1.897,1281,0.967,1284,3.533,1316,0.793,1334,2.58,1347,0.846,1348,0.793,1350,0.752,1354,0.702,1361,1.914,1422,0.717,1423,4.171,1424,1.914,1469,0.771,1482,0.846,1506,1.033,1581,0.734,1634,0.918,1700,0.818,1725,1.788,1731,0.752,1740,0.879,1768,0.967,1771,2.337,1875,1.897,1881,1.033,1930,0.717,1933,0.879,1966,1.033,2018,4.536,2020,0.967,2061,0.879,2171,1.033,2217,0.918,2279,3.509,2356,0.846,2357,0.818,2410,1.033,2439,5.123,2447,1.033,2528,0.967,2544,0.918,2545,2.019,2546,4.138,2559,0.879,2753,0.967,2806,1.133,2807,0.879,2808,2.897,2809,0.967,2810,2.081,2811,2.081,2812,1.897,2813,1.033,2814,1.033,2815,1.033,2816,1.033,2817,1.033,2818,6.521,2819,3.26,2820,1.033,2821,1.133,2822,1.133,2823,0.967,2824,1.897,2825,1.897,2826,1.133,2827,1.133,2828,1.133,2829,0.967,2830,1.133,2831,1.133,2832,1.133,2833,1.133,2834,1.133,2835,1.133,2836,1.133,2837,1.133,2838,1.133,2839,1.133,2840,1.133,2841,1.133,2842,1.133,2843,1.133,2844,1.033,2845,1.133,2846,3.577,2847,3.577,2848,3.577,2849,3.577,2850,1.133,2851,1.133,2852,1.133,2853,1.133,2854,1.133,2855,1.133,2856,1.133,2857,1.133,2858,1.133,2859,1.133,2860,1.133,2861,1.133,2862,1.133,2863,1.133,2864,1.133,2865,3.383,2866,1.897,2867,3.052,2868,1.897,2869,1.897,2870,1.897,2871,1.033,2872,0.793,2873,1.033,2874,1.133,2875,3.052,2876,1.133,2877,1.133,2878,2.63,2879,1.133,2880,1.133,2881,1.133,2882,1.133,2883,1.133,2884,2.081,2885,2.081,2886,1.133,2887,0.967,2888,2.081,2889,1.133,2890,1.133,2891,1.133,2892,1.133,2893,1.133,2894,1.685,2895,1.133,2896,1.133,2897,1.133,2898,1.133,2899,1.133,2900,0.967,2901,0.967,2902,0.967,2903,1.897,2904,1.897,2905,2.63,2906,1.033,2907,1.033,2908,2.081,2909,1.133,2910,1.897,2911,2.081,2912,0.918,2913,1.133,2914,1.133,2915,1.133,2916,1.133,2917,1.133,2918,1.133,2919,1.133,2920,1.133,2921,1.133,2922,1.133,2923,1.133,2924,1.133,2925,1.133,2926,1.133]],["component/47",[178,0.572]],["title/48-1",[22,8.008,84,20.022,111,36.292]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48-2",[85,28.255,2807,54.001]],["name/48-2",[]],["text/48-2",[]],["component/48-2",[]],["title/48-3",[302,23.94,307,25.486]],["name/48-3",[]],["text/48-3",[]],["component/48-3",[]],["title/48-4",[311,15.809,327,22.733]],["name/48-4",[]],["text/48-4",[]],["component/48-4",[]],["title/48",[5,15.295,22,8.008,84,20.022]],["name/48",[22,0.351,84,0.877]],["text/48",[5,1.914,9,1.75,16,1.423,18,1.926,20,1.729,21,1.467,22,1.448,24,1.687,26,1.857,52,2.355,58,1.445,64,1.718,65,2.743,69,2.217,71,2.352,84,3.341,85,4.418,94,1.658,99,2.159,111,4.543,127,2.188,139,1.643,147,3.607,151,1.801,159,2.319,175,2.228,186,1.896,189,2.65,193,2.682,225,2.423,243,3.18,257,3.972,262,1.55,270,2.435,280,4.543,282,2.809,283,3.282,292,3.284,294,2.883,296,1.857,310,2.573,311,1.442,312,2.743,313,3.056,314,1.876,317,3.426,328,2.531,329,1.49,333,3.533,337,1.75,343,2.435,351,2.355,393,3.15,403,1.49,404,1.49,405,1.49,406,1.49,407,1.49,408,1.49,409,1.49,410,1.49,411,1.49,416,2.729,417,2.809,430,1.819,457,4.631,507,2.883,513,2.478,626,4.956,635,2.478,675,3.591,726,2.573,742,2.573,785,2.478,804,2.743,824,2.284,858,2.883,963,2.478,996,3.284,1009,2.964,1120,3.284,1248,2.573,1250,2.435,1255,3.161,1310,3.056,1354,2.625,1423,4.022,1731,2.809,1736,3.615,2279,7.112,2328,3.284,2807,4.925,2927,7.723,2928,3.862,2929,4.236,2930,4.236,2931,4.236,2932,4.236,2933,4.236,2934,4.236,2935,4.236]],["component/48",[178,0.572]],["title/49-1",[160,51.985,296,26.697,824,32.841]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49-2",[22,8.008,69,21.255,180,26.974]],["name/49-2",[]],["text/49-2",[]],["component/49-2",[]],["title/49-3",[22,8.008,62,23.227,645,32.361]],["name/49-3",[]],["text/49-3",[]],["component/49-3",[]],["title/49-4",[22,9.158,191,45.105]],["name/49-4",[]],["text/49-4",[]],["component/49-4",[]],["title/49-5",[22,8.008,302,20.933,306,36.995]],["name/49-5",[]],["text/49-5",[]],["component/49-5",[]],["title/49-6",[18,12.299,22,6.4,64,19.745,213,23.028,1350,32.288]],["name/49-6",[]],["text/49-6",[]],["component/49-6",[]],["title/49-7",[11,51.987,22,9.158]],["name/49-7",[]],["text/49-7",[]],["component/49-7",[]],["title/49-8",[11,51.987,316,48.751]],["name/49-8",[]],["text/49-8",[]],["component/49-8",[]],["title/49-9",[194,37.749,381,35.632,995,41.455]],["name/49-9",[]],["text/49-9",[]],["component/49-9",[]],["title/49-10",[53,29.921,181,34.59]],["name/49-10",[]],["text/49-10",[]],["component/49-10",[]],["title/49-11",[22,8.008,84,20.022,975,45.457]],["name/49-11",[]],["text/49-11",[]],["component/49-11",[]],["title/49-12",[22,8.008,91,24.046,975,45.457]],["name/49-12",[]],["text/49-12",[]],["component/49-12",[]],["title/49-13",[302,23.94,307,25.486]],["name/49-13",[]],["text/49-13",[]],["component/49-13",[]],["title/49-14",[311,15.809,327,22.733]],["name/49-14",[]],["text/49-14",[]],["component/49-14",[]],["title/49",[22,8.008,257,24.481,296,26.697]],["name/49",[22,0.351,296,1.169]],["text/49",[1,1.827,3,0.9,5,1.311,8,0.9,9,1.93,10,1.05,11,0.987,16,0.805,18,2.244,19,0.605,20,1.421,21,1.5,22,1.47,23,0.703,24,1.86,26,0.387,28,1.697,33,2.449,36,0.633,37,1.263,39,1.957,42,0.665,44,1.552,48,1.026,49,0.837,50,0.693,55,0.586,58,1.944,59,2.74,60,0.633,62,2.604,64,0.537,66,0.527,69,2.818,70,2.085,71,0.408,73,0.598,74,0.527,75,0.837,76,0.713,77,1,79,0.803,82,1.72,84,1.535,85,1.635,87,0.633,89,0.736,91,2.921,92,1.827,95,2.055,96,0.509,99,2.055,100,0.598,102,0.693,111,2.782,127,2.412,128,3.001,132,0.592,137,1.072,147,2.896,151,2.424,153,0.803,155,1.922,166,0.803,175,1.996,176,0.877,180,2.312,181,2.319,188,3.369,189,0.552,191,1.552,211,0.703,213,3.231,215,1.677,216,1.129,217,2.556,219,1.677,225,3.437,226,1.129,230,0.633,234,0.703,243,1.682,245,0.713,252,1.502,257,3.837,261,1.134,262,2.24,268,0.488,270,0.76,275,1.206,277,0.736,280,4.248,283,1.238,284,0.612,288,1.788,292,1.026,294,1.631,296,3.351,297,1.788,300,3.691,302,1.794,304,1.129,306,1.455,307,0.877,308,3.169,310,1.455,311,1.185,312,1.552,313,1.729,314,1.786,315,2.079,320,0.665,321,1.428,328,0.954,329,1.418,337,1.357,341,1.04,343,0.76,351,0.736,356,1.121,360,0.857,361,1.589,368,1.877,369,1.026,370,2.477,379,4.166,381,1.922,382,0.987,383,1.161,385,1.552,386,0.683,388,0.724,390,0.641,393,2.843,397,2.597,403,0.843,404,0.465,405,1.418,406,0.465,407,0.465,408,0.465,409,0.843,410,0.465,411,0.465,427,0.954,439,1.572,440,1.357,446,1.631,455,0.877,458,0.82,473,0.954,487,0.987,509,0.713,511,0.649,513,1.402,518,2.782,527,0.641,529,0.736,530,0.788,532,2.451,543,0.788,546,0.837,563,0.703,565,0.954,568,0.665,571,0.987,577,2.318,583,1.026,600,1.129,616,0.748,618,0.857,620,2.179,626,4.724,630,1.292,642,0.724,644,1.129,645,2.481,667,1.206,668,1.957,671,1.129,680,1.354,682,0.774,689,2.279,693,0.76,717,1.844,718,1.206,742,2.449,772,0.9,780,1.455,784,2.446,786,0.82,798,0.748,824,2.814,832,1.798,848,0.641,857,0.9,859,2.402,879,1.026,881,3.734,883,1.026,902,1.221,905,0.703,913,0.926,915,0.926,916,1.071,918,1.485,919,1.129,920,1.071,922,2.803,923,2.045,924,0.674,925,0.877,965,1.071,975,1.788,989,0.954,995,0.9,1023,0.774,1069,0.619,1071,2.299,1091,2.262,1094,0.803,1104,1.552,1115,1.517,1125,0.926,1141,1.129,1225,0.954,1248,0.803,1250,0.76,1251,1.455,1268,1.071,1282,0.987,1318,0.987,1350,0.877,1354,1.485,1359,1.206,1361,0.877,1367,2.045,1368,1.206,1407,0.926,1423,4.685,1424,3.097,1460,1.129,1469,1.631,1486,1.129,1494,1.071,1561,0.954,1588,2.803,1720,1.129,1731,2.179,1747,1.129,1768,1.129,1862,0.837,1888,1.129,1931,1.071,1964,1.206,2030,1.206,2133,1.858,2237,1.206,2279,3.485,2448,2.185,2476,1.206,2528,1.129,2544,1.071,2602,1.206,2807,1.026,2808,2.661,2812,1.206,2814,1.206,2815,1.206,2816,1.206,2817,1.206,2818,3.62,2819,2.995,2820,1.206,2823,1.129,2844,1.206,2865,1.071,2872,0.926,2873,1.206,2894,1.071,2900,1.129,2901,1.129,2902,2.803,2903,2.185,2904,2.185,2905,2.995,2906,1.206,2907,1.206,2910,1.206,2927,2.185,2928,1.206,2936,1.323,2937,1.323,2938,2.185,2939,2.397,2940,2.185,2941,1.323,2942,1.323,2943,2.397,2944,1.323,2945,1.323,2946,1.323,2947,3.285,2948,1.323,2949,1.129,2950,1.026,2951,1.071,2952,1.323,2953,0.857,2954,2.397,2955,1.323,2956,1.323,2957,1.323,2958,1.323,2959,1.323,2960,1.323,2961,1.206,2962,1.206,2963,2.397,2964,1.323,2965,1.026,2966,1.323,2967,1.323,2968,1.206,2969,2.185,2970,1.206,2971,1.323,2972,1.206,2973,1.323,2974,1.323]],["component/49",[178,0.572]],["title/50-1",[66,24.262,321,36.292,1275,45.457]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[20,13.249,21,11.244,22,6.4,100,22.02,257,19.566]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[257,27.998,2975,63.511]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50-4",[302,23.94,307,25.486]],["name/50-4",[]],["text/50-4",[]],["component/50-4",[]],["title/50-5",[311,15.809,327,22.733]],["name/50-5",[]],["text/50-5",[]],["component/50-5",[]],["title/50",[100,27.552,257,24.481,280,36.292]],["name/50",[21,0.452,100,0.885,257,0.786]],["text/50",[0,1.518,1,2.396,2,1.518,4,0.938,10,1.051,18,1.989,20,2.418,21,2.245,22,1.278,23,1.274,24,1.607,28,2.084,33,1.456,36,1.147,37,0.922,47,1.109,58,2.33,59,2.337,60,1.931,62,3.151,66,3.135,68,4.504,69,1.822,70,2.499,73,2.362,83,1.238,84,0.788,89,2.243,91,0.946,94,0.938,100,4.231,147,1.134,151,2.604,156,1.428,162,4.234,169,1.051,175,1.179,180,1.062,213,1.908,219,3.654,225,1.538,230,3.767,243,1,257,4.448,277,2.904,280,5.443,282,1.59,294,1.632,296,1.768,302,2.348,308,1.333,310,2.45,311,0.915,312,1.552,321,5.294,328,0.955,329,0.843,363,1.238,378,1.176,379,3.554,383,1.161,393,1.5,395,1.333,397,2.243,403,0.843,404,0.843,405,0.843,406,0.843,407,0.843,408,0.843,409,0.843,410,0.843,411,0.843,439,1.147,440,0.991,475,1.402,478,2.186,502,1.859,513,3.996,516,1.632,518,3.111,554,3.654,616,1.355,619,1.789,645,2.143,649,1.59,689,1.355,693,1.378,725,2.056,742,2.45,772,1.632,784,1.256,804,1.552,848,1.954,902,1.222,927,1.632,962,1.942,967,2.735,985,2.823,1068,2.186,1069,1.886,1071,1.678,1091,3.309,1115,1.518,1250,1.378,1284,2.554,1307,1.59,1334,4.418,1354,1.486,1407,3.654,1422,1.518,1423,5.625,1424,3.463,1543,1.942,1731,1.59,1907,2.186,1931,7.197,2478,4.761,2518,5.226,2546,2.858,2582,1.942,2808,3.267,2818,1.859,2824,3.678,2867,5.226,2875,2.046,2887,2.046,2894,1.942,2940,4.761,2965,1.859,2968,5.583,2975,4.761,2976,2.398,2977,2.398,2978,2.398,2979,2.398,2980,2.398,2981,2.186,2982,2.398,2983,2.398,2984,4.034,2985,2.398,2986,2.398,2987,2.398,2988,2.398,2989,6.125,2990,2.398,2991,5.223,2992,5.223,2993,2.398,2994,2.398,2995,2.398,2996,2.398,2997,2.398,2998,2.398,2999,2.398,3000,6.718,3001,6.125,3002,2.398,3003,2.398,3004,5.223,3005,5.223,3006,2.398,3007,2.398,3008,2.398,3009,2.398,3010,2.398,3011,1.859,3012,2.398,3013,2.398,3014,2.398,3015,2.398,3016,2.398,3017,2.398,3018,2.398]],["component/50",[178,0.572]],["title/51-1",[294,55.362]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["title/51-2",[74,21.554,75,34.257,228,49.337,3019,54.123]],["name/51-2",[]],["text/51-2",[]],["component/51-2",[]],["title/51-3",[22,8.008,824,32.841,1862,38.56]],["name/51-3",[]],["text/51-3",[]],["component/51-3",[]],["title/51-4",[14,31.175,120,27.023]],["name/51-4",[]],["text/51-4",[]],["component/51-4",[]],["title/51",[257,17.781,280,26.359,294,30.109,310,26.87,311,10.04,312,28.646]],["name/51",[310,1.62,311,0.605]],["text/51",[7,3.061,14,2.894,22,1.264,24,2.575,28,4.427,46,3.34,52,3.596,53,2.777,56,4.007,59,2.894,68,3.387,69,2.256,70,2.366,76,3.486,83,3.34,92,3.596,96,3.296,120,3.325,127,3.34,139,2.508,151,2.75,169,2.834,213,3.059,230,3.095,234,3.435,243,2.697,257,3.445,280,3.853,284,2.99,296,2.834,311,1.467,320,3.252,321,3.853,365,4.665,430,2.777,440,2.672,583,5.012,620,4.289,725,4.368,824,4.621,832,3.54,845,4.825,995,5.833,1071,4.525,1691,5.518,1862,4.093,2439,4.825,2546,3.54,2599,5.895,2949,5.518,2972,5.895,3000,5.518,3020,6.467,3021,6.467,3022,5.895,3023,5.895,3024,6.467,3025,6.467,3026,7.814,3027,6.467,3028,6.467]],["component/51",[178,0.572]],["title/52-1",[230,33.341,3029,63.511]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["title/52",[23,37.01,145,40.751]],["name/52",[23,1.417,145,1.56]],["text/52",[24,3.43,66,2.085,137,3.319,145,3.063,147,4.856,175,2.516,230,2.506,270,5.9,276,7.183,280,6.116,302,2.548,312,4.801,326,4.918,393,3.817,616,4.867,1060,2.394,1248,6.235,1250,5.9,1251,6.235,1281,6.329,1316,3.664,1334,6.757,1361,4.918,2018,3.777,2546,4.059,2818,8.182,2823,4.468,2865,8.314,2866,6.761,2867,7.993,2868,6.761,2869,6.761,2870,6.761,2878,6.761,2949,4.468,3026,4.773,3029,4.773,3030,5.236,3031,5.236,3032,5.236,3033,5.236,3034,5.236,3035,5.236,3036,5.236,3037,7.417]],["component/52",[178,0.572]],["title/53-1",[22,6.4,58,16.604,262,17.81,307,17.81,2279,36.33]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53-2",[5,13.588,58,18.457,614,35.891,2546,29.622]],["name/53-2",[]],["text/53-2",[]],["component/53-2",[]],["title/53-3",[302,23.94,307,25.486]],["name/53-3",[]],["text/53-3",[]],["component/53-3",[]],["title/53-4",[311,15.809,327,22.733]],["name/53-4",[]],["text/53-4",[]],["component/53-4",[]],["title/53",[22,7.114,262,19.798,306,32.867,307,19.798]],["name/53",[262,0.716,302,0.672,306,1.188]],["text/53",[1,1.556,5,2.616,6,1.17,16,2.465,18,1.303,22,1.343,26,0.689,28,2.054,39,2.369,42,2.594,43,1.563,44,2.574,47,1.09,55,1.761,58,2.798,59,1.779,60,2.468,65,3.339,66,1.583,69,1.387,70,0.862,74,2.412,77,1.658,84,0.775,87,2.899,88,2.326,89,1.31,90,2.823,91,3.082,94,0.922,96,1.529,111,1.404,112,2.627,113,3.997,115,3.082,127,2.054,132,1.055,135,1.827,139,0.914,159,1.29,162,1.46,168,1.066,171,1.378,175,2.144,180,1.044,189,0.983,191,2.574,211,1.252,225,1.516,257,3.432,262,3.845,263,2.211,268,1.466,270,2.964,277,1.31,278,3.017,280,5.659,288,1.759,294,1.604,296,1.742,302,2.081,306,3.132,307,1.454,310,1.431,311,0.902,312,1.526,314,2.682,328,1.583,329,0.829,337,2.503,341,2.627,343,1.354,356,1.859,359,1.926,368,2.434,378,1.155,379,1.604,386,2.664,388,1.29,393,3.377,403,1.813,404,0.829,405,0.829,406,0.829,407,0.829,408,0.829,409,0.829,410,0.829,411,0.829,440,0.974,489,1.27,511,2.529,512,1.378,513,3.543,527,1.926,529,2.211,530,2.369,558,1.7,568,1.185,579,1.185,598,2.782,612,1.7,614,1.563,616,2.914,633,2,635,1.378,642,2.176,644,2.011,689,1.332,703,2.415,710,1.604,715,1.604,717,2.769,738,1.526,769,3.22,780,3.678,784,1.234,786,1.46,796,1.649,801,1.759,810,1.526,881,2.964,918,2.464,925,2.637,959,1.526,967,1.234,1016,2.011,1060,1.078,1061,2.148,1067,2.011,1069,1.102,1248,3.132,1250,2.964,1251,3.678,1255,1.759,1318,1.759,1354,1.46,1423,1.492,1442,2.011,1469,2.706,1476,3.22,1489,1.759,1550,1.649,1660,1.604,1731,1.563,1738,1.827,1785,1.827,1931,3.22,2020,4.401,2140,4.701,2279,8.016,2522,1.827,2544,1.909,2546,1.29,2753,2.011,2825,2.148,2865,3.22,2871,3.625,2900,3.393,2901,3.393,2902,3.393,2938,3.625,2961,2.148,3000,6.663,3038,3.976,3039,6.057,3040,6.057,3041,3.976,3042,3.976,3043,2.011,3044,2.357,3045,2.357,3046,2.357,3047,3.976,3048,2.357,3049,3.976,3050,2.357,3051,2.357,3052,2.357,3053,2.357]],["component/53",[178,0.572]],["title/54-1",[186,31.175,308,38.736]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[217,33.343,296,26.697,824,32.841]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54-3",[217,33.343,824,32.841,1862,38.56]],["name/54-3",[]],["text/54-3",[]],["component/54-3",[]],["title/54-4",[302,23.94,307,25.486]],["name/54-4",[]],["text/54-4",[]],["component/54-4",[]],["title/54-5",[311,15.809,327,22.733]],["name/54-5",[]],["text/54-5",[]],["component/54-5",[]],["title/54",[5,12.224,22,6.4,166,29.567,217,26.649,308,27.07]],["name/54",[22,0.257,217,1.071,308,1.088]],["text/54",[1,0.977,5,0.627,11,3.115,14,1.118,18,1.055,19,1.142,22,1.496,24,3.69,26,0.73,28,3.246,33,2.535,37,2.907,54,1.118,56,1.548,58,0.852,62,4.086,66,0.995,68,1.308,69,3.484,70,1.968,73,1.13,76,2.251,77,2.244,85,1.693,120,0.969,136,1.517,151,1.062,166,1.517,169,1.095,180,1.106,186,1.868,189,1.042,194,1.548,196,1.155,198,1.21,213,2.973,216,4.59,217,5.668,219,5.885,237,3.552,252,3.456,257,3.723,267,3.236,268,0.921,277,1.389,280,3.744,282,1.657,283,2.156,294,1.7,296,3.064,302,0.858,308,5.016,310,1.517,311,0.947,312,1.617,315,1.581,317,5.11,328,1.663,329,0.878,333,3.888,337,1.032,341,1.084,351,5.27,356,2.515,359,1.21,378,2.047,379,1.7,381,2.442,383,2.022,400,1.748,403,0.878,404,0.878,405,0.878,406,0.878,407,0.878,408,0.878,409,0.878,410,0.878,411,0.878,455,2.769,474,3.495,489,2.251,511,1.225,518,4.503,523,5.013,543,1.488,585,3.115,595,1.7,620,2.769,645,4.262,700,2.023,717,3.456,726,1.517,742,3.267,782,1.748,824,3.388,848,1.21,849,3.405,855,1.367,857,1.7,859,2.487,860,1.461,881,1.436,954,5.364,962,3.381,965,3.381,975,1.864,990,3.563,995,1.7,996,5.859,1026,1.657,1066,3.236,1091,1.21,1104,1.617,1141,2.132,1361,2.769,1423,1.581,1476,2.023,1609,2.535,1738,1.936,1798,4.758,1862,2.643,1888,3.563,2133,3.236,2343,2.132,2798,2.277,2807,3.236,2818,1.936,2875,2.132,2962,3.806,2965,1.936,3054,6.285,3055,2.498,3056,2.498,3057,2.498,3058,2.498,3059,2.498,3060,2.498,3061,4.175,3062,4.175,3063,4.175,3064,2.498,3065,2.498,3066,2.498,3067,2.498,3068,2.498,3069,2.498,3070,2.277,3071,2.498,3072,2.498]],["component/54",[178,0.572]],["title/55-1",[18,15.388,26,17.8,175,17.8]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[22,8.008,24,24.262,26,17.8]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55-3",[18,11.177,22,5.816,24,17.621,25,28.646,26,12.929,213,20.927]],["name/55-3",[]],["text/55-3",[]],["component/55-3",[]],["title/55-4",[10,26.697,22,8.008,213,28.813]],["name/55-4",[]],["text/55-4",[]],["component/55-4",[]],["title/55-5",[302,23.94,307,25.486]],["name/55-5",[]],["text/55-5",[]],["component/55-5",[]],["title/55-6",[311,15.809,327,22.733]],["name/55-6",[]],["text/55-6",[]],["component/55-6",[]],["title/55",[18,11.177,22,5.816,24,17.621,71,13.646,130,19.592,213,20.927]],["name/55",[22,0.168,24,0.508,71,0.394,130,0.565,213,0.604]],["text/55",[0,1.01,1,2.302,4,1.815,5,0.712,9,1.581,10,0.7,18,2.237,19,1.297,20,1.849,21,1.857,22,1.4,24,3.959,25,5.733,26,2.678,37,2.45,47,1.311,54,0.714,55,1.695,58,2.444,62,1.768,64,0.647,69,1.335,70,2.486,71,3.362,72,2.312,73,1.283,74,0.636,84,0.525,85,2.584,94,1.498,95,0.813,100,3.839,103,2.833,116,0.951,118,2.665,130,3.665,137,0.714,139,1.799,151,1.206,154,0.951,169,1.243,175,2.536,189,1.596,202,0.969,213,4.779,225,3.594,230,1.357,243,1.596,261,1.342,262,0.584,263,0.888,268,3.201,277,0.888,311,0.362,313,1.152,320,1.925,321,1.69,328,0.636,329,2.52,345,1.237,350,2.116,351,0.888,354,0.874,356,2.168,370,2.429,385,1.836,390,1.374,392,0.969,393,1.724,395,0.888,397,1.577,402,1.152,403,0.561,404,0.561,405,0.561,406,0.561,407,0.561,408,0.561,409,0.561,410,0.561,411,0.561,416,1.644,417,1.059,440,1.172,470,0.793,486,1.293,513,0.934,523,1.881,533,3.002,543,0.951,547,1.059,548,1.237,565,1.152,568,0.803,577,1.63,579,2.332,586,1.95,618,1.836,626,4.965,630,0.861,635,0.934,693,0.917,738,2.478,771,1.659,777,1.117,824,3.172,832,2.095,848,0.773,915,1.985,918,0.989,927,1.086,949,0.951,959,1.034,967,2.004,1012,1.69,1023,0.934,1060,2.429,1069,2.168,1091,3.291,1094,0.969,1096,1.69,1097,0.989,1126,2.297,1133,1.293,1226,0.874,1236,1.362,1284,4.743,1333,2.761,1354,1.758,1361,1.059,1413,6.115,1414,2.372,1422,1.01,1571,2.856,1572,2.199,1598,1.237,1600,1.293,1629,3.595,1634,1.293,1647,1.455,1660,1.93,1700,1.152,1711,1.152,1725,0.989,1746,1.455,1763,1.362,1798,1.93,2002,1.237,2004,1.293,2210,2.678,2211,1.362,2356,1.191,2357,2.046,2358,1.455,2439,1.191,2499,2.586,2545,2.678,2546,2.908,2553,3.266,2887,1.362,2912,2.297,3073,3.828,3074,1.596,3075,1.596,3076,1.596,3077,1.191,3078,4.302,3079,1.596,3080,8.219,3081,4.638,3082,1.596,3083,1.596,3084,1.596,3085,1.596,3086,1.596,3087,1.596,3088,3.266,3089,3.828,3090,3.1,3091,3.489,3092,1.596,3093,1.596,3094,1.362,3095,4.638,3096,3.756,3097,1.596,3098,1.596,3099,1.596,3100,2.837,3101,3.489,3102,3.489,3103,1.455,3104,2.837,3105,2.837,3106,1.596,3107,1.596,3108,1.293,3109,1.596,3110,1.596,3111,1.596,3112,1.596,3113,1.596]],["component/55",[178,0.572]],["title/56",[]],["name/56",[22,0.203,24,0.615,213,0.731,3114,1.545]],["text/56",[]],["component/56",[178,0.572]],["title/57-1",[120,20.992,151,23.015,717,24.745,771,31.656]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["title/57-2",[22,7.114,26,15.814,69,18.883,151,23.015]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["title/57-3",[18,11.177,22,5.816,26,12.929,69,15.438,120,17.162,130,19.592]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["title/57-4",[18,11.177,22,5.816,26,12.929,69,15.438,130,19.592,151,18.815]],["name/57-4",[]],["text/57-4",[]],["component/57-4",[]],["title/57-5",[18,11.177,22,5.816,26,12.929,69,15.438,71,13.646,130,19.592]],["name/57-5",[]],["text/57-5",[]],["component/57-5",[]],["title/57-6",[311,15.809,327,22.733]],["name/57-6",[]],["text/57-6",[]],["component/57-6",[]],["title/57",[21,11.244,22,6.4,26,14.226,69,16.987,151,20.704]],["name/57",[69,0.931,151,1.134]],["text/57",[4,1.283,5,1.693,7,0.939,9,0.778,18,2.275,20,1.898,21,1.365,22,1.443,23,0.54,24,2.221,25,1.218,26,2.753,28,1.357,33,4.094,36,0.901,37,2.592,47,1.215,54,0.842,55,0.833,58,1.902,62,0.387,69,2.911,70,2.373,71,3.044,72,0.683,74,0.405,84,0.619,85,2.396,87,0.486,89,2.898,94,0.736,95,1.339,100,3.506,103,1.817,110,0.658,113,3.726,120,3.889,121,0.565,129,0.63,130,4.235,132,0.842,136,0.617,137,1.949,139,2.163,151,3.701,153,0.617,161,0.594,162,1.166,168,1.189,169,0.445,175,2.038,181,0.505,186,2.151,189,1.096,193,1.664,198,0.911,213,2.795,217,1.439,224,0.674,225,2.368,238,1.248,243,1.367,261,0.89,262,1.593,263,0.565,268,1.606,270,1.082,276,0.692,277,2.422,282,0.674,283,1.357,289,0.617,297,0.758,298,0.63,311,0.231,314,0.45,317,0.548,318,0.867,326,0.674,328,0.749,329,2.37,337,1.354,341,0.816,350,2.353,356,1.229,359,2.862,363,0.972,368,1.056,370,2.253,379,0.692,383,0.911,385,1.702,390,0.492,393,2.412,395,0.565,403,0.924,404,0.357,405,1.153,406,0.357,407,0.357,408,0.357,409,0.357,410,0.357,411,0.357,412,1.743,439,2.669,440,0.42,470,1.305,474,1.046,483,1.218,489,1.015,498,2.122,507,1.281,511,0.498,512,1.918,513,3.262,514,1.289,533,0.574,543,1.953,554,1.839,568,1.322,579,0.511,616,0.574,617,2.62,618,2.492,619,2.446,620,1.743,623,2.541,625,1.839,626,3.943,630,1.417,633,0.946,645,1.396,663,1.121,668,0.605,675,1.063,715,0.692,717,2.198,725,1.67,771,2.812,772,0.692,784,0.532,804,0.658,824,0.548,831,0.758,832,1.439,848,1.588,857,0.692,860,1.101,877,0.692,881,1.082,910,0.711,911,1.218,914,0.594,915,1.839,918,5.087,924,0.518,949,1.566,959,1.218,967,1.376,989,0.733,1012,0.605,1019,0.711,1030,0.758,1060,2.198,1069,1.8,1082,1.143,1084,1.191,1091,3.58,1094,1.596,1096,2.595,1097,1.629,1225,1.358,1226,1.03,1227,0.584,1232,0.733,1243,0.788,1248,0.617,1250,0.584,1251,1.143,1304,1.459,1307,0.674,1310,1.358,1312,4.751,1316,0.711,1317,0.788,1319,0.788,1320,0.788,1336,0.733,1341,1.459,1354,0.63,1390,1.404,1407,1.839,1414,0.63,1415,1.524,1416,1.524,1418,0.758,1419,0.758,1422,3.299,1423,4.415,1424,0.674,1435,0.823,1469,0.692,1489,1.404,1514,0.692,1609,0.617,1660,0.692,1700,1.896,1718,1.317,1725,1.166,1770,1.281,1798,2.62,1805,1.743,1930,0.643,1933,0.788,2000,0.758,2017,1.524,2018,1.358,2051,0.867,2061,0.788,2182,0.758,2207,0.733,2328,0.788,2356,1.961,2357,1.896,2525,0.788,2545,1.839,2546,3.053,2553,0.867,2950,0.788,2965,0.788,3011,0.788,3022,1.716,3077,0.758,3078,2.655,3090,0.823,3091,0.926,3094,0.867,3096,1.524,3108,0.823,3115,0.926,3116,1.882,3117,1.016,3118,1.016,3119,1.016,3120,4.356,3121,1.882,3122,1.016,3123,1.016,3124,1.016,3125,1.016,3126,1.016,3127,1.016,3128,1.016,3129,1.016,3130,1.016,3131,1.016,3132,1.016,3133,1.882,3134,1.016,3135,1.016,3136,1.882,3137,0.926,3138,1.016,3139,1.016,3140,1.016,3141,1.459,3142,0.926,3143,0.926,3144,0.926,3145,0.926,3146,1.016,3147,1.016,3148,1.016,3149,1.016,3150,0.867,3151,0.867,3152,0.867,3153,0.867,3154,1.606,3155,0.867,3156,0.867,3157,0.867,3158,0.867,3159,0.733,3160,0.867,3161,0.867,3162,4.102,3163,4.102,3164,2.798,3165,0.867,3166,0.867,3167,2.243,3168,2.243,3169,2.243,3170,2.243,3171,2.243,3172,2.243,3173,2.243,3174,2.243,3175,0.867,3176,2.243,3177,0.867,3178,0.926,3179,0.867,3180,1.524,3181,0.867,3182,1.606,3183,0.867,3184,0.867,3185,0.867,3186,0.867,3187,0.867,3188,0.867,3189,0.867,3190,0.867,3191,0.867,3192,1.016,3193,0.867,3194,1.606,3195,1.606,3196,0.867,3197,1.606,3198,1.606,3199,1.606,3200,1.606,3201,0.867,3202,0.867,3203,0.867,3204,0.867,3205,0.867,3206,1.016,3207,0.867,3208,0.867,3209,0.867]],["component/57",[178,0.572]],["title/58-1",[100,27.552,120,23.629,321,36.292]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["title/58-2",[22,7.114,26,15.814,69,18.883,321,32.242]],["name/58-2",[]],["text/58-2",[]],["component/58-2",[]],["title/58-3",[18,11.177,22,5.816,26,12.929,69,15.438,120,17.162,130,19.592]],["name/58-3",[]],["text/58-3",[]],["component/58-3",[]],["title/58-4",[18,11.177,22,5.816,26,12.929,69,15.438,130,19.592,151,18.815]],["name/58-4",[]],["text/58-4",[]],["component/58-4",[]],["title/58-5",[18,11.177,22,5.816,26,12.929,69,15.438,71,13.646,130,19.592]],["name/58-5",[]],["text/58-5",[]],["component/58-5",[]],["title/58-6",[311,15.809,327,22.733]],["name/58-6",[]],["text/58-6",[]],["component/58-6",[]],["title/58",[20,12.041,21,10.218,22,5.816,26,12.929,69,15.438,321,26.359]],["name/58",[69,0.931,321,1.589]],["text/58",[0,0.519,1,1.274,4,1.075,5,1.444,7,0.778,9,1.135,18,2.414,19,0.375,20,1.566,21,1.043,22,1.425,23,0.435,24,2.392,25,1.41,26,2.667,28,1.125,33,3.494,36,0.737,37,2.309,47,1.007,50,0.429,54,0.689,55,1.442,58,1.768,62,0.83,68,0.429,69,2.763,70,2.694,71,2.876,72,0.559,73,0.371,74,0.326,82,1.438,83,0.795,84,1.704,85,2.436,89,3.047,92,0.456,94,0.602,95,1.4,100,3.955,103,1.564,105,0.806,107,0.456,110,0.531,113,3.206,120,3.9,129,1.702,130,4.207,132,0.689,137,2.021,139,1.887,151,3.132,153,0.935,168,0.985,169,0.675,171,0.479,175,2.056,181,0.407,186,1.851,189,0.908,193,1.378,198,1.33,207,1.821,213,3.484,217,1.503,218,1.077,224,0.543,225,2.463,230,1.779,238,1.021,243,0.342,261,1.03,262,1.36,263,0.456,268,1.912,270,0.885,276,0.558,277,2.067,283,2.333,289,0.935,298,0.508,308,0.456,311,0.186,314,0.682,317,0.442,321,5.868,322,0.975,328,0.326,329,2.271,337,1.135,341,0.668,348,0.573,350,2.183,351,0.456,356,1.284,359,2.786,363,0.795,368,0.619,370,2.463,383,0.746,385,1.778,390,0.397,393,2.139,395,0.456,399,0.412,403,0.766,404,0.288,405,0.288,406,0.288,407,0.288,408,0.288,409,0.288,410,0.288,411,0.288,412,0.543,416,0.352,430,0.352,439,2.753,440,1.135,458,2.018,465,0.747,470,1.364,474,0.856,483,0.997,489,0.83,498,1.778,507,1.048,510,0.456,512,1.606,513,2.846,514,1.347,533,0.463,543,1.636,554,1.524,568,1.381,579,0.412,586,1.11,617,3.074,618,2.407,619,2.049,620,1.821,623,2.525,625,1.922,626,3.779,630,1.481,633,0.774,645,0.435,663,0.917,668,1.297,675,0.87,715,0.558,717,1.7,725,1.4,738,0.997,771,3.033,772,0.558,784,0.429,804,0.997,810,0.531,824,3.483,831,0.611,832,0.843,848,1.578,860,0.901,902,0.418,910,1.077,911,0.997,914,0.479,915,1.922,918,4.983,949,1.636,959,0.531,963,0.479,967,1.947,989,0.591,1012,1.94,1013,0.479,1060,2.065,1069,1.738,1082,0.935,1084,0.975,1091,4.149,1094,1.668,1096,2.691,1097,1.702,1117,0.543,1226,0.843,1227,0.471,1232,0.591,1243,0.635,1248,0.498,1250,0.471,1251,0.935,1275,0.611,1284,3.469,1304,1.193,1307,0.543,1310,1.111,1316,0.573,1317,1.193,1319,0.635,1320,0.635,1321,0.699,1336,0.591,1341,0.635,1348,0.573,1354,0.508,1390,1.149,1407,2.279,1414,0.508,1415,1.247,1416,1.247,1418,0.611,1419,0.611,1422,2.859,1423,4.561,1424,0.543,1435,0.664,1454,0.591,1469,0.558,1489,0.611,1514,0.558,1609,1.978,1660,0.558,1700,1.981,1718,1.077,1725,0.508,1748,1.111,1770,1.048,1786,0.699,1798,2.815,1805,0.543,1930,0.519,1933,0.635,2000,0.611,2017,1.247,2018,1.111,2182,1.625,2207,0.591,2252,0.699,2356,2.049,2357,1.981,2521,0.699,2525,0.635,2543,0.747,2545,1.524,2546,2.472,2872,0.573,2912,0.664,2950,0.635,2951,0.664,2965,0.635,2981,0.747,3011,0.635,3077,0.611,3078,2.224,3080,0.747,3088,0.699,3090,0.664,3096,1.247,3101,0.747,3102,3.389,3103,0.747,3108,0.664,3137,0.747,3141,1.193,3142,0.747,3143,0.747,3144,0.747,3145,0.747,3150,0.699,3151,0.699,3152,0.699,3153,0.699,3154,1.314,3155,0.699,3156,0.699,3157,0.699,3158,0.699,3159,0.591,3160,0.699,3161,0.699,3162,4.152,3163,4.152,3164,2.78,3165,0.699,3166,0.699,3167,2.344,3168,2.344,3169,2.344,3170,2.344,3171,2.344,3172,2.344,3173,2.344,3174,2.344,3175,0.699,3176,1.858,3177,0.699,3178,0.747,3179,0.699,3180,1.247,3181,0.699,3182,1.314,3183,0.699,3184,0.699,3185,0.699,3186,0.699,3187,0.699,3188,0.699,3189,0.699,3190,0.699,3191,0.699,3193,0.699,3194,1.314,3195,1.314,3196,0.699,3197,1.314,3198,1.314,3199,1.314,3200,1.314,3201,0.699,3202,0.699,3203,0.699,3204,0.699,3205,0.699,3207,0.699,3208,0.699,3209,0.699,3210,0.819,3211,0.819,3212,2.747,3213,0.819,3214,0.819,3215,0.819,3216,0.819,3217,0.819,3218,0.819,3219,3.257,3220,0.819,3221,0.819,3222,0.819,3223,0.819,3224,0.819,3225,0.819,3226,0.819,3227,0.819,3228,1.54,3229,0.819,3230,0.819,3231,0.819,3232,0.819]],["component/58",[178,0.572]],["title/59-1",[100,27.552,320,30.636,322,38.56]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[22,7.114,26,15.814,69,18.883,320,27.217]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[1275,45.457,2546,33.343,3233,55.534]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59-4",[18,11.177,22,5.816,26,12.929,69,15.438,120,17.162,130,19.592]],["name/59-4",[]],["text/59-4",[]],["component/59-4",[]],["title/59-5",[18,11.177,22,5.816,26,12.929,69,15.438,130,19.592,320,22.251]],["name/59-5",[]],["text/59-5",[]],["component/59-5",[]],["title/59-6",[18,11.177,22,5.816,26,12.929,69,15.438,71,13.646,130,19.592]],["name/59-6",[]],["text/59-6",[]],["component/59-6",[]],["title/59-7",[311,15.809,327,22.733]],["name/59-7",[]],["text/59-7",[]],["component/59-7",[]],["title/59",[20,12.041,21,10.218,22,5.816,26,12.929,69,15.438,320,22.251]],["name/59",[69,0.931,320,1.342]],["text/59",[4,0.98,5,1.436,7,1.317,9,0.738,18,2.323,20,2.104,21,1.786,22,1.428,23,1.33,24,1.666,25,1.157,26,2.731,28,0.923,33,4.12,36,1.198,37,1.779,47,1.158,53,0.413,54,0.799,55,1.387,56,0.595,58,1.578,62,0.955,64,0.39,69,2.978,70,2.303,71,2.883,72,1.679,73,0.808,74,0.383,82,0.936,84,0.316,85,2.319,87,0.46,89,2.795,94,0.699,95,1.276,100,3.567,103,1.749,113,3.586,120,3.653,121,0.534,130,4.071,132,0.799,137,1.872,139,2.09,151,1.779,153,2.541,155,2.447,165,0.526,168,0.808,175,1.982,180,0.425,181,0.477,186,2.07,189,0.401,191,0.622,193,1.131,198,0.865,211,0.51,213,4.037,217,1.37,224,1.66,225,2.497,230,0.46,236,0.745,238,1.185,243,1.044,252,0.817,257,1.259,261,0.454,262,1.53,263,0.534,268,1.706,270,1.027,277,2.573,283,1.293,288,0.717,289,0.583,298,0.595,311,0.218,314,0.425,315,0.608,317,0.518,320,4.771,322,2.335,327,0.314,328,0.712,329,1.895,335,0.483,337,1.294,341,0.775,343,0.552,350,2.002,356,1.171,359,2.769,363,0.923,368,0.718,370,1.595,379,1.216,383,1.213,385,1.621,390,0.465,393,2.126,395,0.534,403,0.88,404,0.338,405,0.628,406,0.338,407,0.338,408,0.338,409,0.88,410,0.338,411,0.338,412,2.446,416,0.413,426,0.595,439,2.579,440,0.397,464,0.534,470,1.243,474,0.993,483,1.157,489,0.963,498,2.028,507,1.216,510,0.534,511,0.471,512,0.562,513,1.465,514,1.228,518,1.492,533,0.543,543,1.492,554,1.752,568,1.259,579,0.483,586,0.49,617,2.51,618,2.388,619,1.868,620,1.66,623,2.428,625,1.752,626,3.831,630,1.35,633,0.898,635,0.562,645,1.664,663,1.064,668,0.572,675,1.01,692,0.876,715,0.654,717,1.432,725,1.596,726,0.583,771,1.465,772,0.654,784,0.503,824,0.518,831,0.717,832,0.978,845,1.333,848,1.787,860,2.447,881,0.552,902,0.49,910,1.25,911,1.157,915,1.752,918,4.977,927,0.654,949,1.492,959,0.622,963,0.562,967,1.311,989,0.693,1012,0.572,1013,0.562,1060,1.687,1069,1.956,1082,1.085,1084,1.131,1091,3.049,1094,1.521,1096,2.492,1097,1.552,1133,0.778,1143,0.745,1225,0.693,1226,0.978,1227,0.552,1232,0.693,1243,0.745,1248,0.583,1250,0.552,1251,1.085,1275,0.717,1284,0.608,1304,1.385,1307,0.637,1310,1.289,1316,1.752,1317,0.745,1319,0.745,1320,0.745,1336,0.693,1341,1.385,1354,1.941,1361,0.637,1390,1.333,1407,1.752,1414,0.595,1415,1.447,1416,1.447,1418,0.717,1419,0.717,1422,2.648,1424,0.637,1435,0.778,1454,0.693,1460,0.82,1469,0.654,1514,0.654,1548,1.629,1581,0.622,1582,0.637,1609,0.583,1660,0.654,1700,1.806,1711,0.693,1718,1.25,1725,3.115,1770,1.216,1771,4.874,1786,0.82,1798,3.149,1805,0.637,1930,0.608,1933,0.745,1967,0.82,1980,0.745,2000,0.717,2017,1.447,2041,0.876,2054,0.654,2182,2.338,2207,0.693,2356,1.868,2357,1.806,2475,0.876,2518,3.148,2521,0.82,2532,0.876,2545,3.517,2546,4.142,2559,1.385,2894,0.778,2912,0.778,2950,0.745,3011,0.745,3077,0.717,3078,2.537,3088,0.82,3090,0.778,3094,0.82,3096,2.987,3108,0.778,3115,0.876,3141,1.385,3150,0.82,3151,0.82,3152,0.82,3153,0.82,3154,1.525,3155,0.82,3156,0.82,3157,0.82,3158,0.82,3159,0.693,3160,0.82,3161,0.82,3162,3.948,3163,3.948,3164,2.673,3165,0.82,3166,0.82,3167,2.137,3168,2.137,3169,2.137,3170,2.137,3171,2.137,3172,2.137,3173,2.137,3174,2.137,3175,0.82,3176,2.137,3177,0.82,3179,0.82,3180,1.447,3181,0.82,3182,1.525,3183,0.82,3184,0.82,3185,0.82,3186,0.82,3187,0.82,3188,0.82,3189,0.82,3190,0.82,3191,0.82,3193,0.82,3194,1.525,3195,1.525,3196,0.82,3197,1.525,3198,1.525,3199,1.525,3200,1.525,3201,0.82,3202,0.82,3203,0.82,3204,0.82,3205,0.82,3207,0.82,3208,0.82,3209,0.82,3233,4.218,3234,0.961,3235,0.961,3236,0.961,3237,0.961,3238,0.961,3239,1.787,3240,1.787,3241,0.961,3242,0.961,3243,0.961,3244,0.961,3245,0.961,3246,0.961,3247,1.787,3248,3.689,3249,0.961,3250,0.961,3251,3.689,3252,1.787,3253,2.504,3254,0.961,3255,0.961,3256,0.961]],["component/59",[178,0.572]],["title/60-1",[55,26.974,151,25.905,686,45.457]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60-2",[5,13.588,84,17.788,151,23.015,319,33.536]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["title/60-3",[5,13.588,151,23.015,319,33.536,3257,54.123]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["title/60-4",[5,10.18,20,11.034,21,9.364,22,5.33,151,17.242,175,11.848,319,25.125]],["name/60-4",[]],["text/60-4",[]],["component/60-4",[]],["title/60-5",[5,13.588,151,23.015,319,33.536,430,23.243]],["name/60-5",[]],["text/60-5",[]],["component/60-5",[]],["title/60-6",[5,13.588,76,29.176,319,33.536,717,24.745]],["name/60-6",[]],["text/60-6",[]],["component/60-6",[]],["title/60-7",[302,23.94,307,25.486]],["name/60-7",[]],["text/60-7",[]],["component/60-7",[]],["title/60-8",[311,15.809,327,22.733]],["name/60-8",[]],["text/60-8",[]],["component/60-8",[]],["title/60",[5,11.109,20,12.041,21,10.218,22,5.816,151,18.815,319,27.417]],["name/60",[5,0.491,151,0.832,319,1.212]],["text/60",[1,0.682,5,2.716,8,1.187,18,2.379,19,2.26,20,0.835,22,0.74,26,2.437,28,1.584,34,0.866,36,1.468,37,1.9,39,1.039,44,1.129,46,2.552,47,0.806,49,1.104,53,1.763,55,2.748,58,1.046,59,2.777,60,0.835,62,2.147,64,0.707,69,1.07,70,3.051,71,2.195,73,1.387,74,1.635,80,0.955,84,2.201,85,2.004,91,0.688,94,1.2,96,0.671,112,0.757,120,2.184,130,0.772,132,0.78,135,1.352,137,1.373,139,0.677,146,1.039,151,4.318,153,1.059,155,2.401,165,0.955,168,1.387,169,0.764,175,1.645,176,4.719,181,1.523,193,1.104,196,1.418,202,1.059,218,1.22,219,2.873,225,3.729,230,1.468,243,1.712,245,1.654,268,1.514,270,1.763,277,1.705,278,1.02,283,3.205,297,1.301,298,1.081,302,3.135,307,1.122,310,1.863,311,0.396,314,1.818,315,1.104,317,1.654,319,5.836,320,2.065,327,1.34,328,0.695,329,0.613,350,0.695,370,0.665,371,1.352,376,3.458,378,1.504,384,1.705,386,0.901,388,1.679,389,0.913,393,2.782,395,1.705,397,0.97,399,0.877,403,0.613,404,0.613,405,0.613,406,0.613,407,0.613,408,0.613,409,0.613,410,0.613,411,0.613,416,3.056,417,1.157,423,0.97,426,4.149,430,2.122,431,1.22,439,1.965,440,0.721,452,1.412,491,1.301,498,4.607,507,5.675,512,1.02,513,3.63,518,2.446,525,2.087,527,0.845,532,1.301,561,2.493,563,1.629,586,0.889,594,5.634,608,1.488,614,1.157,616,2.793,620,1.157,626,1.02,633,0.877,656,1.412,686,5.583,689,1.733,717,0.797,725,2.092,786,1.081,801,2.289,812,2.146,848,0.845,858,4.223,881,1.002,924,0.889,959,1.129,966,2.034,977,1.352,1071,1.22,1115,3.564,1120,1.352,1122,3.182,1130,1.039,1227,1.763,1248,1.863,1250,3.567,1278,2.873,1311,1.412,1482,1.301,1560,1.488,1610,1.301,1616,5.657,1617,3.743,1618,2.796,1619,1.59,1620,1.59,1621,5.026,1660,2.794,1711,1.258,1718,1.22,1747,4.804,1770,2.087,1911,1.59,1930,1.942,2216,1.488,2217,1.412,2218,1.488,2271,1.59,2315,1.59,2348,1.59,2522,3.182,2561,1.488,2809,1.488,2950,1.352,3011,1.352,3258,1.744,3259,3.067,3260,1.744,3261,1.744,3262,1.744,3263,1.744,3264,1.744,3265,1.744,3266,1.744,3267,1.744,3268,3.067,3269,1.744,3270,3.067,3271,1.744,3272,1.744,3273,1.744,3274,1.744,3275,3.067,3276,1.744,3277,1.744,3278,1.744,3279,1.744,3280,1.744,3281,1.744,3282,1.744,3283,1.744,3284,1.744,3285,1.744,3286,3.067,3287,3.067,3288,6.696,3289,6.206,3290,1.744,3291,1.744,3292,1.744,3293,1.744,3294,1.744,3295,1.744,3296,5.63,3297,1.744,3298,1.744,3299,1.744,3300,1.744,3301,1.744,3302,4.106,3303,4.106,3304,1.744,3305,1.744,3306,1.744,3307,1.744,3308,3.067,3309,3.067]],["component/60",[178,0.572]],["title/61",[]],["name/61",[22,0.257,120,0.759,230,0.936]],["text/61",[]],["component/61",[178,0.572]],["title/62-1",[58,20.775,59,27.259,107,33.871]],["name/62-1",[]],["text/62-1",[]],["component/62-1",[]],["title/62-2",[58,18.457,59,24.217,107,30.091,262,19.798]],["name/62-2",[]],["text/62-2",[]],["component/62-2",[]],["title/62-3",[59,24.217,107,30.091,150,41.949,633,27.217]],["name/62-3",[]],["text/62-3",[]],["component/62-3",[]],["title/62-4",[107,38.736,384,38.736]],["name/62-4",[]],["text/62-4",[]],["component/62-4",[]],["title/62-5",[107,33.871,161,35.632,511,29.869]],["name/62-5",[]],["text/62-5",[]],["component/62-5",[]],["title/62-6",[311,15.809,327,22.733]],["name/62-6",[]],["text/62-6",[]],["component/62-6",[]],["title/62",[4,17.312,20,12.041,21,10.218,22,5.816,103,16.728,107,24.601]],["name/62",[59,0.486,71,0.335,107,0.604,127,0.561,128,0.625,1820,0.636]],["text/62",[4,2.049,18,1.873,20,1.425,21,1.209,22,0.688,23,2.782,58,1.786,59,3.853,62,1.996,64,2.123,70,1.915,85,2.123,87,2.506,107,6.487,139,2.031,150,6.675,158,4.949,159,2.866,161,5.037,175,2.167,211,2.782,243,3.093,262,2.713,268,1.931,283,3.83,300,4.801,311,1.188,329,1.841,333,4.124,337,2.163,341,2.271,350,2.085,359,2.536,363,2.704,370,1.996,378,2.567,384,5.497,393,3.817,403,1.841,404,1.841,405,1.841,406,1.841,407,1.841,408,1.841,409,1.841,410,1.841,411,1.841,430,2.249,468,2.911,567,4.059,585,5.534,633,4.331,682,3.063,717,3.391,784,3.884,924,4.773,1579,3.777,1609,3.18,1715,4.468,1760,4.059,1805,3.472,1820,6.005,1825,4.468,2210,3.664,2953,3.39,3310,5.236,3311,5.236,3312,5.236,3313,3.472,3314,4.773]],["component/62",[178,0.572]],["title/63-1",[4,17.312,20,12.041,21,10.218,22,5.816,100,20.012,103,16.728]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["title/63-2",[311,15.809,327,22.733]],["name/63-2",[]],["text/63-2",[]],["component/63-2",[]],["title/63",[4,14.641,20,10.183,21,8.641,22,4.919,71,11.54,103,14.147,127,19.326,128,21.506]],["name/63",[71,0.476,127,0.798,128,0.888,1267,1.024]],["text/63",[1,2.872,4,3.998,9,2.504,14,1.78,20,2.883,21,2.407,22,1.429,26,2.581,37,1.53,54,3.672,62,1.517,66,2.414,68,2.084,70,3.404,71,3.493,72,2.199,91,1.571,100,4.209,102,2.084,103,3.771,107,2.212,110,2.576,127,4.239,128,4.219,129,2.466,130,2.684,139,3.753,169,3.217,171,2.327,186,1.78,207,4.019,230,1.904,261,2.866,262,3.738,268,1.467,296,1.744,311,0.903,315,2.519,329,2.131,337,1.644,370,1.517,403,1.399,404,1.399,405,1.399,406,1.399,407,1.399,408,1.399,409,1.399,410,1.399,411,1.399,472,2.519,511,1.951,543,2.37,586,3.088,654,5.017,725,3.74,924,2.028,1012,2.37,1060,1.819,1069,1.86,1091,4.686,1133,3.222,1195,2.784,1226,4.492,1227,3.483,1339,3.627,1422,2.519,1609,3.68,1630,3.627,1718,4.241,1820,2.327,3180,4.908,3315,5.172]],["component/63",[178,0.572]],["title/64-1",[22,6.4,91,19.218,333,27.07,384,27.07,784,25.498]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["title/64-2",[1,21.176,22,7.114,66,21.554,180,23.964]],["name/64-2",[]],["text/64-2",[]],["component/64-2",[]],["title/64-3",[1,17.312,18,11.177,22,5.816,42,22.251,66,17.621,180,19.592]],["name/64-3",[]],["text/64-3",[]],["component/64-3",[]],["title/64-4",[16,18.183,22,7.114,693,31.105,2353,43.83]],["name/64-4",[]],["text/64-4",[]],["component/64-4",[]],["title/64-5",[350,21.554,457,32.867,693,31.105,1847,41.949]],["name/64-5",[]],["text/64-5",[]],["component/64-5",[]],["title/64-6",[1,21.176,22,7.114,66,21.554,180,23.964]],["name/64-6",[]],["text/64-6",[]],["component/64-6",[]],["title/64-7",[1,19.05,7,17.389,13,28.478,18,12.299,22,6.4]],["name/64-7",[]],["text/64-7",[]],["component/64-7",[]],["title/64-8",[311,15.809,327,22.733]],["name/64-8",[]],["text/64-8",[]],["component/64-8",[]],["title/64",[22,9.158,91,27.501]],["name/64",[22,0.143,71,0.335,91,0.429,127,0.561,128,0.625,1820,0.636]],["text/64",[1,3.999,4,1.398,7,3.576,13,5.212,16,2.825,18,1.855,20,1.71,21,1.288,22,1.541,37,0.799,42,3.16,44,2.313,47,1.652,52,1.156,54,0.93,59,2.496,66,3.632,70,0.76,72,0.754,74,1.423,82,1.871,84,1.174,88,3.675,90,3.439,91,3.674,92,1.156,94,2.458,95,1.821,99,1.821,102,1.871,103,1.351,110,4.068,116,4.828,132,1.599,158,3.611,161,3.675,165,1.956,168,0.94,169,2.444,171,3.263,175,1.63,180,3.433,186,0.93,196,2.905,243,1.96,252,1.634,268,2.057,269,2.666,282,2.37,283,3.544,289,1.262,297,1.551,311,1.066,315,2.262,329,1.652,333,3.101,334,1.195,337,0.859,341,0.902,350,1.872,359,1.007,363,1.074,368,1.436,377,2.054,383,1.007,384,4.506,386,1.074,393,2.074,401,3.642,403,1.256,404,0.731,405,1.256,406,0.731,407,0.731,408,0.731,409,0.731,410,0.731,411,0.731,416,0.893,430,2.396,439,0.995,457,4.708,527,1.007,579,2.805,597,3.743,598,1.455,630,1.121,633,1.045,649,1.379,654,1.926,663,1.238,678,2.262,682,3.263,697,2.37,717,0.951,784,3.846,785,2.09,848,1.007,857,1.415,860,2.09,877,1.415,924,4.129,985,3.903,995,3.796,1026,2.37,1082,1.262,1084,1.316,1088,1.5,1122,3.642,1272,1.774,1373,1.551,1609,1.262,1805,2.37,1820,5.212,1847,6.009,2205,2.894,2210,2.5,2335,1.774,2353,4.517,2425,1.774,2603,3.049,2679,4.95,2872,2.5,2953,5.247,3043,3.049,3077,2.666,3313,5.753,3315,1.774,3316,2.079,3317,2.079,3318,3.573,3319,2.079,3320,1.895,3321,2.079,3322,5.728,3323,4.162,3324,4.324,3325,4.01,3326,2.079,3327,1.895,3328,1.895,3329,2.079]],["component/64",[178,0.572]],["title/65-1",[22,7.114,66,21.554,161,31.656,458,33.536]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["title/65-2",[7,15.802,13,25.88,22,5.816,66,17.621,514,21.694,832,24.218]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["title/65-3",[311,15.809,327,22.733]],["name/65-3",[]],["text/65-3",[]],["component/65-3",[]],["title/65",[4,15.865,20,11.034,21,9.364,22,8.082,66,16.148,103,15.33]],["name/65",[22,0.143,66,0.433,71,0.335,127,0.561,128,0.625,1820,0.636]],["text/65",[1,1.175,4,1.175,7,3.543,9,1.241,13,5.086,16,1.354,18,1.546,19,0.779,20,1.665,21,1.28,22,1.483,26,0.498,28,1.551,34,0.846,37,0.655,39,1.015,47,0.787,52,0.947,54,1.803,58,1.657,64,2.481,66,4.426,68,2.11,70,1.474,71,1.499,72,1.09,77,3.085,82,2.545,84,0.987,85,0.691,87,2.653,91,1.186,94,0.666,95,1.531,102,0.892,103,0.644,110,2.609,116,3.937,132,1.344,139,2.15,155,0.996,158,4.997,161,4.965,165,0.932,169,0.746,171,1.757,173,1.453,175,1.42,196,0.787,198,1.455,211,2.581,234,0.905,243,2.312,252,0.779,261,0.806,262,2.572,268,2.257,269,2.241,278,1.757,283,3.413,284,0.787,300,1.103,308,2.24,311,0.682,316,1.192,329,1.949,333,2.24,335,0.856,337,0.704,341,0.739,350,1.605,356,0.796,359,0.825,363,0.88,368,1.207,370,1.145,378,2.718,384,4.292,390,3.739,393,1.807,395,0.947,396,1.379,401,2.328,403,0.599,404,0.599,405,0.599,406,0.599,407,0.599,408,0.599,409,0.599,410,0.599,411,0.599,416,0.731,430,2.087,457,4.013,464,3.082,468,3.402,474,0.947,483,1.103,496,1.159,514,2.718,527,2.353,569,3.263,579,1.511,585,3.626,597,2.4,613,1.159,633,2.026,642,0.932,649,1.129,654,3.79,663,1.015,669,2.328,682,1.757,684,1.992,717,2.535,725,2.476,784,3.204,785,0.996,798,0.962,820,1.379,832,3.034,848,0.825,855,2.659,857,1.159,860,0.996,881,0.979,902,0.868,914,1.757,924,4.325,941,1.129,966,1.129,970,2.563,985,1.192,995,1.159,1013,2.357,1026,1.992,1064,2.738,1082,1.034,1084,1.078,1088,1.229,1170,1.453,1195,6.215,1225,1.229,1226,2.205,1227,1.726,1301,2.328,1354,1.055,1474,2.563,1575,1.271,1609,1.034,1762,1.379,1805,1.992,1820,5.295,1825,3.438,1847,5.122,1901,1.453,1930,1.078,1962,2.563,2205,1.379,2210,2.82,2353,2.433,2582,1.379,2603,2.563,2679,2.907,2813,1.553,2872,1.192,2953,4.278,3023,1.553,3043,1.453,3077,1.271,3313,4.382,3314,1.553,3315,1.453,3322,2.738,3323,2.241,3324,2.328,3325,2.563,3327,2.738,3328,1.553,3330,1.703,3331,1.703,3332,9.718,3333,5.544,3334,4.859,3335,4.029,3336,1.703,3337,1.703,3338,1.703,3339,4.029,3340,1.703,3341,1.553,3342,1.703]],["component/65",[178,0.572]],["title/66-1",[20,12.041,21,10.218,22,5.816,69,15.438,72,16.056,73,20.012]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["title/66-2",[69,16.987,72,17.667,73,22.02,308,27.07,771,28.478]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["title/66-3",[311,15.809,327,22.733]],["name/66-3",[]],["text/66-3",[]],["component/66-3",[]],["title/66",[4,12.683,18,8.188,20,8.821,21,11.929,22,4.261,69,11.31,72,11.763,104,16.976,105,16.976]],["name/66",[4,0.425,21,0.251,69,0.379,72,0.394,104,0.569,105,0.569]],["text/66",[1,1.032,4,2.543,5,2.309,10,1.914,14,3.679,16,2.184,18,2.383,19,1.206,20,2.237,21,2.268,22,1.331,24,1.05,26,2.105,28,1.362,33,1.601,37,1.679,46,1.362,47,4.251,54,2.502,58,0.899,62,1.005,66,1.739,69,3.948,70,0.965,71,1.724,72,3.872,73,1.193,74,2.589,76,1.421,77,1.822,84,2.368,89,1.466,96,1.014,99,1.344,104,2.928,105,2.928,109,1.309,110,1.707,112,2.82,128,1.515,136,1.601,137,1.18,156,1.571,158,2.51,165,1.443,167,1.707,169,1.156,175,1.899,188,1.902,189,1.1,197,3.727,198,1.277,213,2.066,225,1.005,252,1.206,257,1.755,262,2.635,268,2.864,269,3.259,283,2.256,284,2.019,296,1.156,308,2.428,311,0.598,313,1.902,314,1.168,320,4.94,328,1.05,329,2.286,334,1.515,342,2.896,350,1.05,370,2.131,393,0.98,396,2.135,399,1.326,403,0.927,404,0.927,405,1.536,406,0.927,407,0.927,408,0.927,409,0.927,410,0.927,411,0.927,430,1.132,431,1.845,440,1.804,458,2.706,468,1.466,489,1.421,511,1.293,512,1.542,514,1.293,527,1.277,548,2.044,562,1.967,577,2.51,579,1.326,595,1.794,626,4.542,645,2.97,668,2.602,693,1.515,717,2.972,742,1.601,771,1.542,776,2.135,782,1.845,831,1.967,832,1.443,843,2.404,855,2.39,877,1.794,902,2.225,985,3.056,1026,2.896,1060,1.997,1069,2.042,1072,1.845,1226,1.443,1251,1.601,1278,3.056,1316,1.845,1407,3.056,1581,1.707,1582,1.749,1633,3.981,1760,2.044,1798,2.972,1820,4.542,1862,1.669,2035,1.902,2207,1.902,2530,1.967,2546,3.558,2674,2.404,2679,3.151,2801,2.25,2872,1.845,2951,2.135,2953,5.027,2970,3.981,3313,1.749,3343,2.637,3344,2.637,3345,2.25,3346,2.404,3347,1.902,3348,4.367,3349,4.367,3350,2.637,3351,2.637,3352,2.637]],["component/66",[178,0.572]],["title/67-1",[4,15.865,21,9.364,104,21.234,105,21.234,109,20.131,350,16.148,2054,27.592]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[109,30.245,3347,43.948,3353,51.985]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67-3",[109,30.245,726,36.995,3347,43.948]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["title/67-4",[311,15.809,327,22.733]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["title/67",[4,11.889,14,13.597,18,7.675,20,8.269,21,11.326,22,3.994,72,11.026,104,15.913,105,15.913,109,15.086]],["name/67",[4,0.425,14,0.486,21,0.251,104,0.569,105,0.569,109,0.54]],["text/67",[4,3.966,14,1.406,18,1.273,21,2.341,22,0.662,26,2.109,28,1.623,36,2.412,37,1.938,40,5.751,47,3.336,55,1.392,58,2.875,64,1.275,71,1.554,72,2.619,76,1.694,84,2.073,104,5.309,105,5.592,109,5.183,111,1.872,139,2.447,146,1.872,147,2.383,158,1.806,171,3.69,180,2.231,186,2.255,189,1.311,198,1.522,211,3.834,225,3.215,230,1.504,243,1.311,262,2.89,268,1.858,311,0.713,322,1.989,328,1.252,329,2.218,330,2.436,337,1.298,350,3.146,370,1.921,389,1.646,393,1.169,399,1.58,403,1.772,404,1.105,405,1.105,406,1.105,407,1.105,408,1.105,409,1.105,410,1.105,411,1.105,430,2.164,437,2.436,439,3.019,440,2.082,458,1.947,489,1.694,496,2.139,505,2.267,511,1.541,546,3.19,550,2.139,568,1.58,570,2.267,668,3.002,682,2.948,726,4.797,738,4.672,864,2.267,914,3.69,924,1.601,941,2.084,1023,6.106,1030,2.345,1060,2.884,1069,2.949,1072,2.199,1130,1.872,1278,3.526,1318,2.345,1350,2.084,1571,3.76,1748,2.267,1820,1.838,2002,2.436,2035,2.267,2054,6.774,2522,2.436,2530,4.707,2545,5.05,2620,2.865,2953,5.96,3141,4.889,3159,2.267,3313,2.084,3323,2.345,3324,2.436,3347,6.641,3353,5.383,3354,2.865,3355,2.682,3356,2.545,3357,3.143,3358,5.039,3359,5.039,3360,2.865,3361,3.143,3362,3.143,3363,3.143]],["component/67",[178,0.572]],["title/68-1",[5,15.295,255,45.457,350,24.262]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68-2",[4,14.641,18,9.452,21,8.641,66,14.902,104,19.596,105,19.596,320,18.818,441,21.887]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["title/68-3",[311,15.809,327,22.733]],["name/68-3",[]],["text/68-3",[]],["component/68-3",[]],["title/68",[4,11.889,14,13.597,18,7.675,20,8.269,21,11.326,22,3.994,72,11.026,104,15.913,105,15.913,320,15.281]],["name/68",[4,0.425,14,0.486,21,0.251,104,0.569,105,0.569,320,0.547]],["text/68",[4,3.273,5,2.6,8,1.866,9,2.374,10,1.202,14,1.227,18,1.682,19,1.254,20,2.154,21,2.206,22,1.04,26,1.945,28,1.416,33,2.739,37,1.734,46,3.801,54,1.227,55,1.214,58,0.935,62,2.191,66,3.331,69,2.761,72,3.604,82,1.436,100,1.24,104,3.854,105,4.381,130,1.997,137,1.227,139,1.063,151,1.166,158,2.592,171,3.894,180,1.997,207,3.811,211,2.396,215,1.919,225,1.72,230,1.312,252,3.044,255,7.812,257,1.813,262,1.003,268,2.119,276,1.866,296,1.977,298,1.699,310,1.665,311,0.622,320,5.317,329,2.02,337,1.133,341,1.189,350,2.288,370,2.538,375,2.34,389,1.436,393,2.736,399,1.379,403,0.964,404,0.964,405,0.964,406,0.964,407,1.586,408,0.964,409,0.964,410,0.964,411,0.964,416,3.16,430,2.468,440,1.864,441,5.111,458,2.795,475,4.304,511,2.817,513,2.638,518,1.633,543,2.687,546,3.637,568,1.379,618,1.775,682,3.361,697,1.818,758,2.34,772,1.866,777,1.919,832,1.501,857,1.866,864,3.254,914,1.604,924,2.298,939,2.499,941,2.991,967,2.362,976,2.499,1060,2.062,1069,1.282,1091,3.225,1097,1.699,1134,2.499,1347,2.046,1581,1.775,1582,1.818,1609,4.043,1652,2.499,1715,2.34,1748,3.254,1762,2.22,1771,3.653,1801,3.254,1805,2.991,1820,1.604,1909,2.34,2000,2.046,2054,5.385,2131,2.34,2522,2.125,2525,2.125,2530,4.968,2559,3.496,2679,1.978,2808,2.22,2953,5.415,3070,2.499,3313,1.818,3323,4.288,3355,3.849,3356,4.653,3360,2.499,3364,2.742,3365,4.511,3366,2.742,3367,2.742,3368,2.742,3369,2.742,3370,2.742,3371,2.742,3372,2.742,3373,2.742,3374,5.746,3375,2.742,3376,2.742,3377,2.742,3378,2.742]],["component/68",[178,0.572]],["title/69-1",[4,15.865,21,9.364,22,5.33,58,13.828,104,21.234,105,21.234,299,26.889]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[302,23.94,307,25.486]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69-3",[311,15.809,327,22.733]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["title/69",[4,21.176,21,12.498,104,28.343,105,28.343]],["name/69",[4,0.499,21,0.295,104,0.668,105,0.668,1267,0.846]],["text/69",[1,1.557,4,4.078,5,0.999,10,1.744,12,2.287,14,4.164,16,1.337,18,2.231,20,2.532,21,2.599,22,1.311,26,2.398,37,1.53,58,3.012,69,2.115,72,2.978,95,2.028,99,4.501,104,5.458,105,5.627,106,4.908,109,3.644,111,2.37,147,1.882,168,1.8,169,3.217,171,2.327,180,2.684,211,2.114,234,2.114,261,1.882,262,3.93,268,1.467,284,1.84,296,1.744,299,4.868,300,2.576,311,0.903,314,1.762,320,3.048,329,2.131,335,2.001,337,1.644,341,1.726,342,4.019,368,2.95,370,1.517,383,1.927,386,2.055,393,2.253,403,1.399,404,1.399,405,1.399,406,1.399,407,1.399,408,1.399,409,1.399,410,1.399,411,1.399,430,1.709,440,1.644,543,2.37,578,2.969,905,2.114,914,3.545,924,3.088,925,2.639,941,2.639,1025,2.871,1060,1.819,1066,3.084,1581,2.576,1582,2.639,1760,4.698,1780,3.627,1820,3.545,2809,3.396,2829,3.396,2951,3.222,2953,3.924,3313,2.639,3347,2.871,3353,5.172,3379,6.061,3380,3.979,3381,3.979,3382,3.979,3383,3.979,3384,3.979,3385,3.979,3386,3.979,3387,3.979]],["component/69",[178,0.572]],["title/70-1",[5,13.699,16,11.671,26,10.15,58,11.847,320,17.47,1278,24.308,1581,22.49,1582,23.037]],["name/70-1",[]],["text/70-1",[]],["component/70-1",[]],["title/70-2",[5,13.699,16,11.671,26,10.15,58,11.847,320,17.47,1581,22.49,1582,23.037,2546,19.014]],["name/70-2",[]],["text/70-2",[]],["component/70-2",[]],["title/70-3",[311,15.809,327,22.733]],["name/70-3",[]],["text/70-3",[]],["component/70-3",[]],["title/70",[5,10.18,14,18.144,16,13.623,26,11.848,320,20.391,1581,26.251,1582,26.889]],["name/70",[4,0.328,5,0.211,14,0.375,21,0.194,26,0.245,104,0.439,105,0.439,3388,0.839]],["text/70",[2,3.392,4,2.727,5,2.943,14,2.398,16,3.179,18,1.353,21,1.61,26,2.82,46,2.767,55,2.373,58,3.447,60,1.189,66,3.683,68,1.301,70,1.52,74,0.989,84,0.817,96,0.955,104,3.651,105,3.948,112,1.078,121,1.381,139,2.43,158,3.079,171,4.077,175,0.726,181,1.233,189,1.036,197,2.12,207,4.623,211,2.846,225,2.388,237,1.404,252,1.9,268,0.916,283,2.147,311,0.564,318,2.12,320,4.759,326,4.623,328,0.989,329,2.451,350,2.495,370,0.947,389,2.177,390,3.376,393,2.329,403,2.202,404,0.874,405,0.874,406,0.874,407,0.874,408,0.874,409,0.874,410,0.874,411,0.874,416,2.301,441,2.431,458,1.539,511,3.071,525,1.691,546,3.392,563,2.208,568,2.09,586,1.266,645,1.32,682,2.431,686,3.101,720,2.12,784,2.177,855,1.36,914,3.134,925,2.756,927,2.828,941,3.553,973,2.265,1009,1.738,1060,2.45,1069,1.943,1130,5.195,1278,7.238,1354,3.881,1474,2.12,1581,6.126,1582,6.275,1609,4.578,1725,3.881,1748,4.519,1930,1.573,1962,2.12,2131,2.12,2530,5.202,2546,5.86,2679,1.792,2801,2.12,2872,1.738,2953,6.544,3313,3.553,3323,3.998,3324,1.926,3345,2.12,3346,2.265,3355,3.547,3356,4.339,3389,2.484,3390,2.484]],["component/70",[178,0.572]],["title/71-1",[21,9.364,22,5.33,99,20.661,100,18.339,103,15.33,108,28.372,109,20.131]],["name/71-1",[]],["text/71-1",[]],["component/71-1",[]],["title/71-2",[18,10.242,21,9.364,22,5.33,99,20.661,103,15.33,108,28.372,109,20.131]],["name/71-2",[]],["text/71-2",[]],["component/71-2",[]],["title/71-3",[311,15.809,327,22.733]],["name/71-3",[]],["text/71-3",[]],["component/71-3",[]],["title/71",[21,10.218,22,5.816,99,22.546,103,16.728,108,30.961,109,21.967]],["name/71",[99,0.787,103,0.584,108,1.081,204,1.197]],["text/71",[4,1.48,18,2.019,21,2.452,22,1.467,37,1.454,49,2.394,52,2.103,58,2.426,59,1.692,70,1.384,74,2.322,75,2.394,99,5.411,100,4.438,102,3.053,103,3.956,105,3.053,108,7.61,109,5.105,110,5.174,111,4.761,137,1.692,139,2.261,147,3.364,162,2.344,171,4.675,180,1.675,189,1.578,225,2.712,234,4.246,252,1.729,262,3.683,269,2.822,279,2.647,311,0.858,314,1.675,328,1.506,329,2.05,337,1.563,341,1.641,345,4.518,350,1.506,358,2.647,360,2.449,370,2.223,403,1.33,404,1.33,405,1.33,406,1.33,407,1.33,408,1.33,409,1.33,410,1.33,411,1.33,430,1.624,458,4.407,654,3.834,739,4.205,881,2.174,924,2.97,941,3.866,963,3.41,1026,2.508,1060,2.665,1069,2.726,1801,4.205,1820,4.675,1930,3.69,2034,3.448,2035,2.728,2519,3.227,2545,2.647,2829,3.227,2953,4.605,3141,2.932,3159,2.728,3313,2.508,3323,2.822,3324,4.518,3354,5.314,3356,4.721,3391,5.83,3392,3.782,3393,3.782,3394,3.782,3395,3.782,3396,3.782,3397,3.782,3398,3.782]],["component/71",[178,0.572]],["title/72-1",[21,12.498,22,7.114,99,27.578,181,26.87]],["name/72-1",[]],["text/72-1",[]],["component/72-1",[]],["title/72-2",[302,23.94,307,25.486]],["name/72-2",[]],["text/72-2",[]],["component/72-2",[]],["title/72-3",[311,15.809,327,22.733]],["name/72-3",[]],["text/72-3",[]],["component/72-3",[]],["title/72",[21,14.068,22,8.008,99,31.042]],["name/72",[99,0.997,204,1.516,1267,1.297]],["text/72",[4,1.924,18,2.101,21,2.533,22,1.52,36,2.353,64,2.876,70,2.594,74,3.312,75,4.489,82,2.575,90,2.692,92,4.624,95,3.613,99,5.66,101,3.441,102,4.767,103,3.144,104,2.575,105,2.575,108,3.441,109,2.442,110,3.184,111,2.93,147,3.934,169,3.108,180,2.178,181,2.442,186,2.201,201,4.197,211,3.767,262,3.678,266,6.052,268,2.615,295,3.983,300,3.184,311,1.116,329,1.729,337,2.032,370,1.875,403,1.729,404,1.729,405,1.729,406,1.729,407,2.493,408,1.729,409,1.729,410,1.729,411,1.729,416,2.112,512,4.148,516,3.347,563,3.767,595,3.347,742,2.987,796,3.441,855,4.552,881,4.076,905,2.612,924,2.506,925,3.261,1195,7.035,1333,3.548,1373,6.206,1579,3.548,2433,3.983,3347,3.548]],["component/72",[178,0.572]],["title/73-1",[21,9.364,22,5.33,99,20.661,100,18.339,101,28.372,102,21.234,103,15.33]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["title/73-2",[21,12.498,22,7.114,99,27.578,181,26.87]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["title/73-3",[21,9.364,22,5.33,53,17.414,101,28.372,102,21.234,103,15.33,1091,19.638]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["title/73-4",[21,12.498,22,7.114,99,27.578,350,21.554]],["name/73-4",[]],["text/73-4",[]],["component/73-4",[]],["title/73-5",[5,8.139,101,22.683,102,16.976,103,12.256,112,14.062,262,11.858,430,13.922,738,20.987,2546,17.743,3159,23.386]],["name/73-5",[]],["text/73-5",[]],["component/73-5",[]],["title/73-6",[5,12.224,18,12.299,855,26.649,1373,36.33,2546,26.649]],["name/73-6",[]],["text/73-6",[]],["component/73-6",[]],["title/73-7",[311,15.809,327,22.733]],["name/73-7",[]],["text/73-7",[]],["component/73-7",[]],["title/73",[21,10.218,22,5.816,99,22.546,101,30.961,102,23.171,103,16.728]],["name/73",[99,0.787,103,0.584,204,1.197,1720,1.318]],["text/73",[4,0.425,5,2.489,9,0.826,13,0.635,18,1.923,20,0.295,21,2.232,22,1.39,36,0.519,37,0.769,42,0.546,46,0.56,47,3.104,52,0.603,53,1.194,55,0.885,58,0.682,62,0.414,64,0.811,70,2.456,72,0.726,74,2.674,75,0.687,82,1.456,84,2.116,85,1.64,87,1.935,90,1.891,91,3.005,92,2.249,94,0.425,95,1.761,96,3.499,99,4.636,100,3.037,101,6.367,102,4.904,103,3.322,109,0.539,110,2.954,111,2.409,112,2.793,116,1.191,121,1.921,132,0.486,136,0.659,139,0.776,146,0.646,147,0.946,150,1.55,158,0.624,165,0.594,169,2,171,2.021,175,1.695,176,0.72,180,0.885,181,1.38,186,2.042,187,1.706,189,0.453,201,0.926,207,0.72,211,0.576,225,3.57,237,1.13,243,1.903,257,0.804,261,0.946,262,3.647,266,4.952,268,1.492,278,0.635,283,2.357,284,0.924,295,0.879,300,0.703,311,0.246,314,0.48,317,1.863,320,1.006,322,2.888,328,0.432,329,0.978,333,1.112,335,0.546,337,1.428,341,1.499,350,3.352,354,0.594,358,0.759,359,1.347,363,0.56,368,2.018,370,1.06,377,0.624,378,0.532,383,2.433,388,0.594,389,1.456,390,0.526,393,1.868,403,0.382,404,0.382,405,0.382,406,0.382,407,0.703,408,0.382,409,0.382,410,0.382,411,0.382,416,1.737,423,1.546,430,2.157,439,2.6,440,0.448,441,0.635,457,0.659,458,4.717,483,0.703,511,1.363,512,1.17,516,0.738,518,3.237,524,1.619,527,0.526,563,1.062,579,1.398,581,2.006,594,0.659,595,1.361,599,0.703,618,0.703,633,2.526,649,0.72,663,0.646,680,0.613,687,1.619,697,2.682,717,1.271,738,2.618,785,1.17,842,0.926,845,0.81,848,1.674,855,4.267,860,1.17,881,0.624,905,2.668,910,1.399,914,2.021,924,3.778,925,1.844,941,0.72,963,2.021,1025,1.442,1060,1.271,1069,1.616,1082,0.659,1084,0.687,1088,0.783,1091,3.118,1122,0.841,1195,4.875,1251,2.456,1278,3.193,1316,1.399,1333,0.783,1373,5.532,1472,2.949,1575,0.81,1579,2.493,1580,2.949,1581,4.347,1582,4.453,1600,0.879,1609,0.659,1709,1.823,1801,3.292,1820,2.669,2000,0.81,2035,2.006,2061,0.841,2063,0.989,2133,2.155,2205,2.798,2207,0.783,2210,1.946,2326,0.989,2328,0.841,2335,1.706,2425,1.706,2433,0.879,2519,2.373,2530,2.075,2546,5.642,2559,2.155,2561,0.926,2582,0.879,2679,0.783,2872,0.759,2953,3.518,2969,0.989,3159,1.442,3313,1.844,3320,4.159,3325,0.926,3341,0.989,3345,0.926,3347,1.442,3399,1.085,3400,2.781,3401,3.455,3402,1.085,3403,4.563,3404,2.781,3405,2.781,3406,1.085,3407,1.085,3408,1.085,3409,1.085,3410,2.781,3411,2,3412,2,3413,2,3414,1.085,3415,1.085,3416,4.563,3417,2,3418,2,3419,2,3420,1.085,3421,2,3422,1.085,3423,1.085,3424,1.085,3425,1.085,3426,1.085]],["component/73",[178,0.572]]],"invertedIndex":[["",{"_index":225,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"67":{},"68":{},"70":{},"71":{},"73":{}},"component":{}}],["0",{"_index":554,"title":{},"name":{},"text":{"6":{},"14":{},"38":{},"45":{},"50":{},"57":{},"58":{},"59":{}},"component":{}}],["0.0.0.0",{"_index":2933,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.0.1",{"_index":2902,"title":{},"name":{},"text":{"47":{},"49":{},"53":{}},"component":{}}],["0.028",{"_index":2506,"title":{},"name":{},"text":{"38":{}},"component":{}}],["0.039",{"_index":3107,"title":{},"name":{},"text":{"55":{}},"component":{}}],["0.066",{"_index":3151,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["0.099",{"_index":3152,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["0.21.3",{"_index":1578,"title":{},"name":{},"text":{"21":{}},"component":{}}],["0.3",{"_index":1508,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0.322",{"_index":3153,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["0.5556",{"_index":2409,"title":{},"name":{},"text":{"36":{}},"component":{}}],["0.8",{"_index":332,"title":{},"name":{},"text":{"4":{},"13":{},"21":{},"34":{}},"component":{}}],["0.9",{"_index":783,"title":{},"name":{},"text":{"7":{}},"component":{}}],["0/2",{"_index":2993,"title":{},"name":{},"text":{"50":{}},"component":{}}],["00",{"_index":3125,"title":{},"name":{},"text":{"57":{}},"component":{}}],["0000",{"_index":3190,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["00001",{"_index":623,"title":{},"name":{},"text":{"6":{},"24":{},"57":{},"58":{},"59":{}},"component":{}}],["0044ffa0",{"_index":2246,"title":{},"name":{},"text":{"33":{}},"component":{}}],["00:00:00.180",{"_index":1670,"title":{},"name":{},"text":{"21":{}},"component":{}}],["00ce5c1d",{"_index":2449,"title":{},"name":{},"text":{"38":{}},"component":{}}],["01",{"_index":3126,"title":{},"name":{},"text":{"57":{}},"component":{}}],["01t16:08:12.038z",{"_index":1844,"title":{},"name":{},"text":{"26":{}},"component":{}}],["01t16:08:12.061z",{"_index":1845,"title":{},"name":{},"text":{"26":{}},"component":{}}],["0229",{"_index":2736,"title":{},"name":{},"text":{"45":{}},"component":{}}],["03",{"_index":2478,"title":{},"name":{},"text":{"38":{},"50":{}},"component":{}}],["037c",{"_index":2224,"title":{},"name":{},"text":{"33":{}},"component":{}}],["03:00",{"_index":1517,"title":{},"name":{},"text":{"19":{},"38":{}},"component":{}}],["03e6cf79",{"_index":2710,"title":{},"name":{},"text":{"45":{}},"component":{}}],["03t16:36:19",{"_index":2516,"title":{},"name":{},"text":{"38":{}},"component":{}}],["04",{"_index":659,"title":{},"name":{},"text":{"6":{}},"component":{}}],["05",{"_index":1624,"title":{},"name":{},"text":{"21":{}},"component":{}}],["05t17:31:00z",{"_index":660,"title":{},"name":{},"text":{"6":{}},"component":{}}],["06",{"_index":1232,"title":{},"name":{},"text":{"14":{},"33":{},"38":{},"45":{},"57":{},"58":{},"59":{}},"component":{}}],["06c3fe8e2dfc42e2211cbcc41224f5a3d6bd1f26",{"_index":3185,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["07",{"_index":1515,"title":{},"name":{},"text":{"19":{},"26":{}},"component":{}}],["08t18:31:15z",{"_index":3005,"title":{},"name":{},"text":{"50":{}},"component":{}}],["09ccd1e972bb",{"_index":2236,"title":{},"name":{},"text":{"33":{}},"component":{}}],["1",{"_index":337,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"11":{},"13":{},"15":{},"16":{},"17":{},"19":{},"21":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"53":{},"54":{},"57":{},"58":{},"59":{},"62":{},"63":{},"64":{},"65":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["1.0",{"_index":392,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"13":{},"17":{},"19":{},"21":{},"30":{},"32":{},"33":{},"36":{},"38":{},"42":{},"55":{}},"component":{}}],["1.0.0",{"_index":1553,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["1.0.1",{"_index":2180,"title":{},"name":{},"text":{"33":{},"41":{}},"component":{}}],["1.0.jar",{"_index":2510,"title":{},"name":{},"text":{"38":{}},"component":{}}],["1.0578",{"_index":2228,"title":{},"name":{},"text":{"33":{}},"component":{}}],["1.1.5",{"_index":253,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1.22",{"_index":2977,"title":{},"name":{},"text":{"50":{}},"component":{}}],["1.22.0.final",{"_index":1685,"title":{},"name":{},"text":{"21":{}},"component":{}}],["1.22.1.final",{"_index":3105,"title":{},"name":{},"text":{"55":{}},"component":{}}],["1.27.2",{"_index":2209,"title":{},"name":{},"text":{"33":{}},"component":{}}],["1.302",{"_index":3106,"title":{},"name":{},"text":{"55":{}},"component":{}}],["1.41",{"_index":3015,"title":{},"name":{},"text":{"50":{}},"component":{}}],["1.41.0",{"_index":3014,"title":{},"name":{},"text":{"50":{}},"component":{}}],["1.42",{"_index":182,"title":{"2":{}},"name":{},"text":{},"component":{}}],["1.43.0",{"_index":3029,"title":{"52-1":{}},"name":{},"text":{"52":{}},"component":{}}],["1.66.0",{"_index":3399,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1/2",{"_index":2996,"title":{},"name":{},"text":{"50":{}},"component":{}}],["10",{"_index":483,"title":{},"name":{},"text":{"5":{},"6":{},"14":{},"17":{},"33":{},"42":{},"57":{},"58":{},"59":{},"65":{},"73":{}},"component":{}}],["10.0.0.0/24",{"_index":2985,"title":{},"name":{},"text":{"50":{}},"component":{}}],["10.100.120.208",{"_index":3138,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10.102.87.208",{"_index":3135,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10.106.202.150",{"_index":3131,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10.108.153.180",{"_index":3140,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10.111.19.134",{"_index":3127,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10.96.0.0/12",{"_index":3223,"title":{},"name":{},"text":{"58":{}},"component":{}}],["10.97.110.167",{"_index":3118,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10.98.150.141",{"_index":3129,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10.98.64.78",{"_index":3122,"title":{},"name":{},"text":{"57":{}},"component":{}}],["100",{"_index":1477,"title":{},"name":{},"text":{"18":{}},"component":{}}],["1000",{"_index":1889,"title":{},"name":{},"text":{"27":{},"42":{}},"component":{}}],["10000",{"_index":428,"title":{},"name":{},"text":{"5":{},"16":{},"30":{}},"component":{}}],["1017afb1",{"_index":1190,"title":{},"name":{},"text":{"14":{}},"component":{}}],["11",{"_index":1575,"title":{},"name":{},"text":{"21":{},"33":{},"41":{},"42":{},"65":{},"73":{}},"component":{}}],["11:latest\\n\\nenv",{"_index":2840,"title":{},"name":{},"text":{"47":{}},"component":{}}],["12",{"_index":2582,"title":{},"name":{},"text":{"42":{},"50":{},"65":{},"73":{}},"component":{}}],["12.2",{"_index":1399,"title":{},"name":{},"text":{"17":{}},"component":{}}],["123",{"_index":657,"title":{},"name":{},"text":{"6":{}},"component":{}}],["12345",{"_index":1507,"title":{},"name":{},"text":{"19":{}},"component":{}}],["124859",{"_index":3222,"title":{},"name":{},"text":{"58":{}},"component":{}}],["128mi",{"_index":2869,"title":{},"name":{},"text":{"47":{},"52":{}},"component":{}}],["13",{"_index":3341,"title":{},"name":{},"text":{"65":{},"73":{}},"component":{}}],["13:43:45,077",{"_index":2773,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:43:45,215",{"_index":2774,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:43:45,219",{"_index":2775,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:43:45,230",{"_index":2777,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:43:45,239",{"_index":2783,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:43:45,244",{"_index":2788,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:44:36,666",{"_index":2743,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:44:36,669",{"_index":2745,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:44:36,673",{"_index":2747,"title":{},"name":{},"text":{"45":{}},"component":{}}],["13:44:36,676",{"_index":2749,"title":{},"name":{},"text":{"45":{}},"component":{}}],["14",{"_index":3425,"title":{},"name":{},"text":{"73":{}},"component":{}}],["14:38:09,741",{"_index":1626,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:09,840",{"_index":1628,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:09,843",{"_index":1632,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:12,877",{"_index":1638,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:12,878",{"_index":1642,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:12,879",{"_index":1643,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:12,880",{"_index":1649,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:12,889",{"_index":1653,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:12,890",{"_index":1662,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:13,375",{"_index":1675,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:13,377",{"_index":1680,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:13,378",{"_index":1683,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:13,379",{"_index":1689,"title":{},"name":{},"text":{"21":{}},"component":{}}],["14:38:13,380",{"_index":1692,"title":{},"name":{},"text":{"21":{}},"component":{}}],["15",{"_index":842,"title":{},"name":{},"text":{"9":{},"17":{},"73":{}},"component":{}}],["15.558",{"_index":2515,"title":{},"name":{},"text":{"38":{}},"component":{}}],["154.0",{"_index":1793,"title":{},"name":{},"text":{"25":{}},"component":{}}],["154ae8f2df21",{"_index":1223,"title":{},"name":{},"text":{"14":{}},"component":{}}],["156498b7096d",{"_index":1186,"title":{},"name":{},"text":{"14":{}},"component":{}}],["1564baf907a1",{"_index":2227,"title":{},"name":{},"text":{"33":{}},"component":{}}],["162.0",{"_index":1797,"title":{},"name":{},"text":{"25":{}},"component":{}}],["16384",{"_index":2988,"title":{},"name":{},"text":{"50":{}},"component":{}}],["16:36:11,461",{"_index":2479,"title":{},"name":{},"text":{"38":{}},"component":{}}],["16:36:11,708",{"_index":2483,"title":{},"name":{},"text":{"38":{}},"component":{}}],["16:36:12,004",{"_index":2495,"title":{},"name":{},"text":{"38":{}},"component":{}}],["16:36:14,486",{"_index":2497,"title":{},"name":{},"text":{"38":{}},"component":{}}],["16:36:14,612",{"_index":2498,"title":{},"name":{},"text":{"38":{}},"component":{}}],["16:36:14,613",{"_index":2502,"title":{},"name":{},"text":{"38":{}},"component":{}}],["16:36:16,559",{"_index":2505,"title":{},"name":{},"text":{"38":{}},"component":{}}],["17:38:09,692",{"_index":1644,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:09,705",{"_index":1650,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:12,332",{"_index":1654,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:12,405",{"_index":1663,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:12,636",{"_index":1673,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:12.332",{"_index":1656,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:13,105",{"_index":1676,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:13,132",{"_index":1681,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:13,181",{"_index":1684,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17:38:13,182",{"_index":1690,"title":{},"name":{},"text":{"21":{}},"component":{}}],["17ebabdb3585",{"_index":2739,"title":{},"name":{},"text":{"45":{}},"component":{}}],["18000/tcp",{"_index":3139,"title":{},"name":{},"text":{"57":{}},"component":{}}],["185\\nenv",{"_index":2858,"title":{},"name":{},"text":{"47":{}},"component":{}}],["1912",{"_index":2766,"title":{},"name":{},"text":{"45":{}},"component":{}}],["192.168.58.2",{"_index":3224,"title":{},"name":{},"text":{"58":{}},"component":{}}],["1c12",{"_index":2730,"title":{},"name":{},"text":{"45":{}},"component":{}}],["1d174d25",{"_index":1509,"title":{},"name":{},"text":{"19":{}},"component":{}}],["1e37",{"_index":2716,"title":{},"name":{},"text":{"45":{}},"component":{}}],["2",{"_index":341,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"21":{},"23":{},"24":{},"26":{},"27":{},"29":{},"32":{},"33":{},"34":{},"36":{},"38":{},"42":{},"43":{},"45":{},"46":{},"47":{},"49":{},"53":{},"54":{},"57":{},"58":{},"59":{},"62":{},"64":{},"65":{},"68":{},"69":{},"71":{},"73":{}},"component":{}}],["2.0",{"_index":125,"title":{"33":{},"32-5":{},"33-1":{}},"name":{},"text":{"1":{},"32":{},"33":{}},"component":{}}],["2.0.0",{"_index":1306,"title":{},"name":{},"text":{"16":{},"27":{},"34":{}},"component":{}}],["2.10.2.final",{"_index":3208,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["2.1156",{"_index":2229,"title":{},"name":{},"text":{"33":{}},"component":{}}],["2.16.8.final",{"_index":1630,"title":{},"name":{},"text":{"21":{},"63":{}},"component":{}}],["2.9.0.final",{"_index":1686,"title":{},"name":{},"text":{"21":{}},"component":{}}],["2.9.2.final",{"_index":2499,"title":{},"name":{},"text":{"38":{},"55":{}},"component":{}}],["2/2",{"_index":2998,"title":{},"name":{},"text":{"50":{}},"component":{}}],["20",{"_index":478,"title":{},"name":{},"text":{"5":{},"50":{}},"component":{}}],["20.10.7",{"_index":2208,"title":{},"name":{},"text":{"33":{}},"component":{}}],["200",{"_index":2076,"title":{},"name":{},"text":{"32":{},"33":{},"36":{}},"component":{}}],["2000",{"_index":1832,"title":{},"name":{},"text":{"26":{}},"component":{}}],["201",{"_index":2473,"title":{},"name":{},"text":{"38":{}},"component":{}}],["2018",{"_index":658,"title":{},"name":{},"text":{"6":{}},"component":{}}],["2022",{"_index":1514,"title":{},"name":{},"text":{"19":{},"21":{},"26":{},"33":{},"38":{},"45":{},"57":{},"58":{},"59":{}},"component":{}}],["2023",{"_index":3004,"title":{},"name":{},"text":{"50":{}},"component":{}}],["2033",{"_index":1231,"title":{},"name":{},"text":{"14":{}},"component":{}}],["218.0",{"_index":1795,"title":{},"name":{},"text":{"25":{}},"component":{}}],["21bb14db61f0",{"_index":1404,"title":{},"name":{},"text":{"17":{}},"component":{}}],["21bb14db61f0\",\"source\":\"/local/curl\",\"type\":\"kogito.serverless.loanbroker.aggregated.quotes.response\",\"data",{"_index":1388,"title":{},"name":{},"text":{"17":{}},"component":{}}],["22.3.0",{"_index":3074,"title":{},"name":{},"text":{"55":{}},"component":{}}],["23",{"_index":3188,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["23:53:38",{"_index":3189,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["24",{"_index":839,"title":{},"name":{},"text":{"9":{},"45":{}},"component":{}}],["25",{"_index":1625,"title":{},"name":{},"text":{"21":{}},"component":{}}],["250m",{"_index":2868,"title":{},"name":{},"text":{"47":{},"52":{}},"component":{}}],["25t16:22:53.735128049",{"_index":1526,"title":{},"name":{},"text":{"19":{}},"component":{}}],["25t16:29:27.320408379",{"_index":1541,"title":{},"name":{},"text":{"19":{}},"component":{}}],["25t16:30:35.461988261",{"_index":1516,"title":{},"name":{},"text":{"19":{}},"component":{}}],["2669m",{"_index":2514,"title":{},"name":{},"text":{"38":{}},"component":{}}],["27t04:35:54.631z\\\",\\\"retri",{"_index":1233,"title":{},"name":{},"text":{"14":{}},"component":{}}],["2acf710d",{"_index":3109,"title":{},"name":{},"text":{"55":{}},"component":{}}],["2d9184dd4b3d\",\"workflowdata\":{\"greeting\":\"hello",{"_index":1706,"title":{},"name":{},"text":{"21":{}},"component":{}}],["2fcda936e00",{"_index":2758,"title":{},"name":{},"text":{"45":{}},"component":{}}],["2s",{"_index":1776,"title":{},"name":{},"text":{"25":{}},"component":{}}],["3",{"_index":359,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"11":{},"13":{},"16":{},"17":{},"21":{},"23":{},"24":{},"26":{},"29":{},"32":{},"33":{},"36":{},"38":{},"42":{},"43":{},"45":{},"46":{},"53":{},"54":{},"57":{},"58":{},"59":{},"62":{},"64":{},"65":{},"73":{}},"component":{}}],["3.0.3",{"_index":2179,"title":{},"name":{},"text":{"33":{},"34":{},"36":{}},"component":{}}],["3.1.0",{"_index":2074,"title":{},"name":{},"text":{"32":{}},"component":{}}],["3.4.2.final",{"_index":2482,"title":{},"name":{},"text":{"38":{}},"component":{}}],["3.635",{"_index":2500,"title":{},"name":{},"text":{"38":{}},"component":{}}],["3.8.6",{"_index":1577,"title":{},"name":{},"text":{"21":{},"33":{},"41":{}},"component":{}}],["30",{"_index":1390,"title":{},"name":{},"text":{"17":{},"25":{},"46":{},"57":{},"58":{},"59":{}},"component":{}}],["300000",{"_index":1389,"title":{},"name":{},"text":{"17":{}},"component":{}}],["32.0",{"_index":2407,"title":{},"name":{},"text":{"36":{}},"component":{}}],["3301",{"_index":2711,"title":{},"name":{},"text":{"45":{}},"component":{}}],["3349741271d5",{"_index":2764,"title":{},"name":{},"text":{"45":{}},"component":{}}],["36ee",{"_index":2367,"title":{},"name":{},"text":{"35":{}},"component":{}}],["36ef",{"_index":2956,"title":{},"name":{},"text":{"49":{}},"component":{}}],["399ce304",{"_index":2223,"title":{},"name":{},"text":{"33":{}},"component":{}}],["3aa1ace60e79",{"_index":1524,"title":{},"name":{},"text":{"19":{}},"component":{}}],["3h16m",{"_index":624,"title":{},"name":{},"text":{"6":{},"24":{}},"component":{}}],["4",{"_index":363,"title":{},"name":{},"text":{"4":{},"9":{},"13":{},"16":{},"17":{},"21":{},"23":{},"26":{},"29":{},"32":{},"33":{},"36":{},"38":{},"42":{},"43":{},"46":{},"50":{},"57":{},"58":{},"59":{},"62":{},"64":{},"65":{},"73":{}},"component":{}}],["4.0.4",{"_index":247,"title":{},"name":{},"text":{"2":{}},"component":{}}],["4.691",{"_index":1687,"title":{},"name":{},"text":{"21":{}},"component":{}}],["4.885",{"_index":3155,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["4.x",{"_index":3234,"title":{},"name":{},"text":{"59":{}},"component":{}}],["400",{"_index":991,"title":{},"name":{},"text":{"11":{}},"component":{}}],["4061",{"_index":2725,"title":{},"name":{},"text":{"45":{}},"component":{}}],["4062",{"_index":1704,"title":{},"name":{},"text":{"21":{}},"component":{}}],["4066",{"_index":1156,"title":{},"name":{},"text":{"14":{}},"component":{}}],["4091",{"_index":1666,"title":{},"name":{},"text":{"21":{}},"component":{}}],["4096",{"_index":2983,"title":{},"name":{},"text":{"50":{}},"component":{}}],["40b7",{"_index":2368,"title":{},"name":{},"text":{"35":{}},"component":{}}],["40ea",{"_index":2731,"title":{},"name":{},"text":{"45":{}},"component":{}}],["41495513",{"_index":1403,"title":{},"name":{},"text":{"17":{}},"component":{}}],["4291",{"_index":1213,"title":{},"name":{},"text":{"14":{}},"component":{}}],["42d4",{"_index":2360,"title":{},"name":{},"text":{"35":{}},"component":{}}],["432d",{"_index":2780,"title":{},"name":{},"text":{"45":{}},"component":{}}],["434b",{"_index":2712,"title":{},"name":{},"text":{"45":{}},"component":{}}],["43a2",{"_index":1199,"title":{},"name":{},"text":{"14":{}},"component":{}}],["43m",{"_index":3133,"title":{},"name":{},"text":{"57":{}},"component":{}}],["440e",{"_index":1192,"title":{},"name":{},"text":{"14":{}},"component":{}}],["44729",{"_index":1672,"title":{},"name":{},"text":{"21":{}},"component":{}}],["44m",{"_index":3120,"title":{},"name":{},"text":{"57":{}},"component":{}}],["4517",{"_index":2762,"title":{},"name":{},"text":{"45":{}},"component":{}}],["457c2d37d2fe",{"_index":1513,"title":{},"name":{},"text":{"19":{}},"component":{}}],["45ef",{"_index":2361,"title":{},"name":{},"text":{"35":{}},"component":{}}],["45fd",{"_index":1743,"title":{},"name":{},"text":{"23":{}},"component":{}}],["46ac",{"_index":1510,"title":{},"name":{},"text":{"19":{}},"component":{}}],["4730",{"_index":2312,"title":{},"name":{},"text":{"34":{}},"component":{}}],["4785",{"_index":1511,"title":{},"name":{},"text":{"19":{}},"component":{}}],["47af",{"_index":1184,"title":{},"name":{},"text":{"14":{}},"component":{}}],["47d7",{"_index":2234,"title":{},"name":{},"text":{"33":{}},"component":{}}],["481d",{"_index":3111,"title":{},"name":{},"text":{"55":{}},"component":{}}],["486d",{"_index":2225,"title":{},"name":{},"text":{"33":{}},"component":{}}],["48ba",{"_index":2957,"title":{},"name":{},"text":{"49":{}},"component":{}}],["48c9",{"_index":1110,"title":{},"name":{},"text":{"13":{}},"component":{}}],["4936",{"_index":2450,"title":{},"name":{},"text":{"38":{}},"component":{}}],["4956",{"_index":1538,"title":{},"name":{},"text":{"19":{}},"component":{}}],["4[0",{"_index":993,"title":{},"name":{},"text":{"11":{}},"component":{}}],["4a81",{"_index":1386,"title":{},"name":{},"text":{"17":{}},"component":{}}],["4b34",{"_index":2767,"title":{},"name":{},"text":{"45":{}},"component":{}}],["4b35e85c2406\",\"workflowdata\":{\"result\":\"abc",{"_index":1102,"title":{},"name":{},"text":{"13":{}},"component":{}}],["4b8e",{"_index":2737,"title":{},"name":{},"text":{"45":{}},"component":{}}],["4b94408d",{"_index":2778,"title":{},"name":{},"text":{"45":{}},"component":{}}],["4bd2",{"_index":3172,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["4c0e",{"_index":2756,"title":{},"name":{},"text":{"45":{}},"component":{}}],["4c3f",{"_index":1208,"title":{},"name":{},"text":{"14":{}},"component":{}}],["4ca9",{"_index":2319,"title":{},"name":{},"text":{"34":{}},"component":{}}],["4cf1",{"_index":1221,"title":{},"name":{},"text":{"14":{}},"component":{}}],["4d7a",{"_index":2717,"title":{},"name":{},"text":{"45":{}},"component":{}}],["4d94",{"_index":1522,"title":{},"name":{},"text":{"19":{},"45":{}},"component":{}}],["4e0b",{"_index":1755,"title":{},"name":{},"text":{"24":{}},"component":{}}],["4e18",{"_index":2451,"title":{},"name":{},"text":{"38":{}},"component":{}}],["4e6c",{"_index":2924,"title":{},"name":{},"text":{"47":{}},"component":{}}],["4f25",{"_index":1100,"title":{},"name":{},"text":{"13":{}},"component":{}}],["4fb4",{"_index":1529,"title":{},"name":{},"text":{"19":{}},"component":{}}],["4fdc",{"_index":2248,"title":{},"name":{},"text":{"33":{}},"component":{}}],["5",{"_index":663,"title":{},"name":{},"text":{"6":{},"13":{},"16":{},"21":{},"33":{},"36":{},"38":{},"42":{},"43":{},"57":{},"58":{},"59":{},"64":{},"65":{},"73":{}},"component":{}}],["5.061",{"_index":3156,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["5.322",{"_index":3158,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["5.460",{"_index":3161,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["50051",{"_index":2351,"title":{},"name":{},"text":{"35":{}},"component":{}}],["500m",{"_index":2870,"title":{},"name":{},"text":{"47":{},"52":{}},"component":{}}],["51fd",{"_index":2318,"title":{},"name":{},"text":{"34":{}},"component":{}}],["5749",{"_index":1191,"title":{},"name":{},"text":{"14":{}},"component":{}}],["5952",{"_index":2311,"title":{},"name":{},"text":{"34":{}},"component":{}}],["5df1ed6",{"_index":1664,"title":{},"name":{},"text":{"21":{}},"component":{}}],["6",{"_index":1082,"title":{},"name":{},"text":{"13":{},"16":{},"21":{},"26":{},"33":{},"38":{},"42":{},"43":{},"57":{},"58":{},"59":{},"64":{},"65":{},"73":{}},"component":{}}],["6.470",{"_index":1631,"title":{},"name":{},"text":{"21":{}},"component":{}}],["60",{"_index":2611,"title":{},"name":{},"text":{"42":{}},"component":{}}],["60000",{"_index":1891,"title":{},"name":{},"text":{"27":{}},"component":{}}],["610809090d9c",{"_index":2719,"title":{},"name":{},"text":{"45":{}},"component":{}}],["63dd79c4071e",{"_index":2782,"title":{},"name":{},"text":{"45":{}},"component":{}}],["64mi",{"_index":2866,"title":{},"name":{},"text":{"47":{},"52":{}},"component":{}}],["6676",{"_index":2755,"title":{},"name":{},"text":{"45":{}},"component":{}}],["679e2cd89394",{"_index":2733,"title":{},"name":{},"text":{"45":{}},"component":{}}],["69019826",{"_index":1527,"title":{},"name":{},"text":{"19":{}},"component":{}}],["6b876bb5894d",{"_index":1194,"title":{},"name":{},"text":{"14":{}},"component":{}}],["6e403a654a30\",\"workflowdata\":{\"name\":\"john\",\"language\":\"english\",\"message\":\"hello",{"_index":2363,"title":{},"name":{},"text":{"35":{}},"component":{}}],["6s",{"_index":2995,"title":{},"name":{},"text":{"50":{}},"component":{}}],["7",{"_index":1084,"title":{},"name":{},"text":{"13":{},"16":{},"21":{},"33":{},"38":{},"42":{},"57":{},"58":{},"59":{},"64":{},"65":{},"73":{}},"component":{}}],["7.819",{"_index":2504,"title":{},"name":{},"text":{"38":{}},"component":{}}],["700",{"_index":1393,"title":{},"name":{},"text":{"17":{}},"component":{}}],["734907f0fef2",{"_index":2769,"title":{},"name":{},"text":{"45":{}},"component":{}}],["7465d9ca7ca7",{"_index":1210,"title":{},"name":{},"text":{"14":{}},"component":{}}],["7640a0af",{"_index":1520,"title":{},"name":{},"text":{"19":{}},"component":{}}],["777adb97",{"_index":1741,"title":{},"name":{},"text":{"23":{}},"component":{}}],["782d",{"_index":1754,"title":{},"name":{},"text":{"24":{}},"component":{}}],["7a15",{"_index":1665,"title":{},"name":{},"text":{"21":{}},"component":{}}],["7a36b26094bd",{"_index":1201,"title":{},"name":{},"text":{"14":{}},"component":{}}],["7b2b",{"_index":2247,"title":{},"name":{},"text":{"33":{}},"component":{}}],["7e4a",{"_index":3110,"title":{},"name":{},"text":{"55":{}},"component":{}}],["7f63872c92f4\",\"workflowdata\":{\"result\":\"bc",{"_index":1112,"title":{},"name":{},"text":{"13":{}},"component":{}}],["7m6",{"_index":3168,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["7s",{"_index":2997,"title":{},"name":{},"text":{"50":{}},"component":{}}],["8",{"_index":649,"title":{},"name":{},"text":{"6":{},"13":{},"21":{},"33":{},"42":{},"47":{},"50":{},"64":{},"65":{},"73":{}},"component":{}}],["80",{"_index":1308,"title":{},"name":{},"text":{"16":{}},"component":{}}],["80/tcp",{"_index":3132,"title":{},"name":{},"text":{"57":{}},"component":{}}],["8080",{"_index":1310,"title":{},"name":{},"text":{"16":{},"25":{},"27":{},"48":{},"57":{},"58":{},"59":{}},"component":{}}],["8080/tcp",{"_index":3128,"title":{},"name":{},"text":{"57":{}},"component":{}}],["8080:8080",{"_index":3104,"title":{},"name":{},"text":{"55":{}},"component":{}}],["8080\\nuser",{"_index":2857,"title":{},"name":{},"text":{"47":{}},"component":{}}],["8082",{"_index":750,"title":{},"name":{},"text":{"6":{}},"component":{}}],["8180",{"_index":500,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["8180:8080",{"_index":1287,"title":{},"name":{},"text":{"16":{}},"component":{}}],["81ad",{"_index":1212,"title":{},"name":{},"text":{"14":{}},"component":{}}],["82cd",{"_index":2718,"title":{},"name":{},"text":{"45":{}},"component":{}}],["837e",{"_index":3171,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["8468",{"_index":264,"title":{},"name":{},"text":{"2":{}},"component":{}}],["8479",{"_index":1387,"title":{},"name":{},"text":{"17":{}},"component":{}}],["84967277eef6",{"_index":1215,"title":{},"name":{},"text":{"14":{}},"component":{}}],["8555",{"_index":2757,"title":{},"name":{},"text":{"45":{}},"component":{}}],["85ab59366fe6",{"_index":1540,"title":{},"name":{},"text":{"19":{}},"component":{}}],["85bb",{"_index":2781,"title":{},"name":{},"text":{"45":{}},"component":{}}],["8601",{"_index":834,"title":{},"name":{},"text":{"9":{}},"component":{}}],["86cc",{"_index":1101,"title":{},"name":{},"text":{"13":{}},"component":{}}],["870e",{"_index":1209,"title":{},"name":{},"text":{"14":{}},"component":{}}],["8775",{"_index":1539,"title":{},"name":{},"text":{"19":{}},"component":{}}],["880b",{"_index":1530,"title":{},"name":{},"text":{"19":{}},"component":{}}],["89fa54d25e98",{"_index":2959,"title":{},"name":{},"text":{"49":{}},"component":{}}],["8a5e",{"_index":2362,"title":{},"name":{},"text":{"35":{}},"component":{}}],["8a8b",{"_index":2785,"title":{},"name":{},"text":{"45":{}},"component":{}}],["8b9b",{"_index":1193,"title":{},"name":{},"text":{"14":{}},"component":{}}],["8c13",{"_index":1207,"title":{},"name":{},"text":{"14":{}},"component":{}}],["8cad",{"_index":2779,"title":{},"name":{},"text":{"45":{}},"component":{}}],["8e96",{"_index":2726,"title":{},"name":{},"text":{"45":{}},"component":{}}],["8gb",{"_index":2982,"title":{},"name":{},"text":{"50":{}},"component":{}}],["9",{"_index":1088,"title":{},"name":{},"text":{"13":{},"33":{},"38":{},"42":{},"64":{},"65":{},"73":{}},"component":{}}],["9+&@#/%=~_",{"_index":3415,"title":{},"name":{},"text":{"73":{}},"component":{}}],["9+&@#/%?=_",{"_index":3414,"title":{},"name":{},"text":{"73":{}},"component":{}}],["9090/tcp,8008/tcp",{"_index":3130,"title":{},"name":{},"text":{"57":{}},"component":{}}],["9090/tcp,8008/tcp,443/tcp",{"_index":3136,"title":{},"name":{},"text":{"57":{}},"component":{}}],["9090/tcp,8008/tcp,80/tcp,81/tcp,443/tcp",{"_index":3119,"title":{},"name":{},"text":{"57":{}},"component":{}}],["9090/tcp,8008/tcp,8080/tcp",{"_index":3123,"title":{},"name":{},"text":{"57":{}},"component":{}}],["910d8e06728d",{"_index":2727,"title":{},"name":{},"text":{"45":{}},"component":{}}],["9122",{"_index":272,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9166",{"_index":205,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9244",{"_index":209,"title":{},"name":{},"text":{"2":{}},"component":{}}],["925c",{"_index":3112,"title":{},"name":{},"text":{"55":{}},"component":{}}],["9311",{"_index":2925,"title":{},"name":{},"text":{"47":{}},"component":{}}],["9317",{"_index":256,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9354",{"_index":2235,"title":{},"name":{},"text":{"33":{}},"component":{}}],["938264210",{"_index":1640,"title":{},"name":{},"text":{"21":{}},"component":{}}],["9393",{"_index":203,"title":{},"name":{},"text":{"2":{}},"component":{}}],["93dd",{"_index":2369,"title":{},"name":{},"text":{"35":{}},"component":{}}],["9415",{"_index":199,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9427",{"_index":221,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9434",{"_index":239,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9480",{"_index":250,"title":{},"name":{},"text":{"2":{}},"component":{}}],["948547ffd",{"_index":2991,"title":{},"name":{},"text":{"50":{}},"component":{}}],["9490",{"_index":271,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9501",{"_index":248,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9520",{"_index":244,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9525",{"_index":235,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9526",{"_index":254,"title":{},"name":{},"text":{"2":{}},"component":{}}],["953f07a7",{"_index":1536,"title":{},"name":{},"text":{"19":{}},"component":{}}],["9555",{"_index":195,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9564",{"_index":231,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9567",{"_index":227,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9568",{"_index":190,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9584",{"_index":184,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9633",{"_index":259,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9653",{"_index":214,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9674e3e",{"_index":1206,"title":{},"name":{},"text":{"14":{}},"component":{}}],["9706",{"_index":2724,"title":{},"name":{},"text":{"45":{}},"component":{}}],["984b5c6c",{"_index":2955,"title":{},"name":{},"text":{"49":{}},"component":{}}],["99",{"_index":1658,"title":{},"name":{},"text":{"21":{}},"component":{}}],["9969",{"_index":1744,"title":{},"name":{},"text":{"23":{}},"component":{}}],["998c",{"_index":2452,"title":{},"name":{},"text":{"38":{}},"component":{}}],["9]{2",{"_index":994,"title":{},"name":{},"text":{"11":{}},"component":{}}],["9c1b",{"_index":1214,"title":{},"name":{},"text":{"14":{}},"component":{}}],["9d543764",{"_index":2784,"title":{},"name":{},"text":{"45":{}},"component":{}}],["9d74",{"_index":1222,"title":{},"name":{},"text":{"14":{}},"component":{}}],["9d9d",{"_index":1523,"title":{},"name":{},"text":{"19":{}},"component":{}}],["_",{"_index":1621,"title":{},"name":{},"text":{"21":{},"32":{},"34":{},"60":{}},"component":{}}],["_/_/|_/_/|_|\\____/___",{"_index":1623,"title":{},"name":{},"text":{"21":{}},"component":{}}],["__",{"_index":1616,"title":{},"name":{},"text":{"21":{},"60":{}},"component":{}}],["___",{"_index":1619,"title":{},"name":{},"text":{"21":{},"60":{}},"component":{}}],["___\\_\\____/_",{"_index":1622,"title":{},"name":{},"text":{"21":{}},"component":{}}],["____",{"_index":1617,"title":{},"name":{},"text":{"21":{},"60":{}},"component":{}}],["_____",{"_index":1618,"title":{},"name":{},"text":{"21":{},"60":{}},"component":{}}],["______",{"_index":1620,"title":{},"name":{},"text":{"21":{},"60":{}},"component":{}}],["_______",{"_index":3261,"title":{},"name":{},"text":{"60":{}},"component":{}}],["________",{"_index":3260,"title":{},"name":{},"text":{"60":{}},"component":{}}],["_________",{"_index":3262,"title":{},"name":{},"text":{"60":{}},"component":{}}],["____________",{"_index":3263,"title":{},"name":{},"text":{"60":{}},"component":{}}],["____________________",{"_index":3266,"title":{},"name":{},"text":{"60":{}},"component":{}}],["__________________________",{"_index":3267,"title":{},"name":{},"text":{"60":{}},"component":{}}],["______________________________",{"_index":3264,"title":{},"name":{},"text":{"60":{}},"component":{}}],["_dev_quarkus_rest_client_stock_svc_yaml_url=http://localhost:8383",{"_index":2323,"title":{},"name":{},"text":{"34":{}},"component":{}}],["_swf_eval_temp",{"_index":466,"title":{},"name":{},"text":{"5":{}},"component":{}}],["a0e5e0265fcb\",\"workflowdata\":{\"name\":\"john\",\"language\":\"english\",\"greeting\":\"hello",{"_index":3174,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["a2328f969c73\",\"workflowdata\":{\"name\":\"john\",\"response\":[{\"message\":\"hello",{"_index":2370,"title":{},"name":{},"text":{"35":{}},"component":{}}],["a363",{"_index":2738,"title":{},"name":{},"text":{"45":{}},"component":{}}],["a3e4",{"_index":1111,"title":{},"name":{},"text":{"13":{}},"component":{}}],["a577",{"_index":1200,"title":{},"name":{},"text":{"14":{}},"component":{}}],["a6c4",{"_index":2761,"title":{},"name":{},"text":{"45":{}},"component":{}}],["a6d2",{"_index":1705,"title":{},"name":{},"text":{"21":{}},"component":{}}],["a83",{"_index":1185,"title":{},"name":{},"text":{"14":{}},"component":{}}],["a95f95c9c190\",\"workflowdata\":{\"name\":\"kogito\",\"greeting\":\"greet",{"_index":1757,"title":{},"name":{},"text":{"24":{}},"component":{}}],["a9b",{"_index":1756,"title":{},"name":{},"text":{"24":{}},"component":{}}],["a9ef",{"_index":1385,"title":{},"name":{},"text":{"17":{}},"component":{}}],["a_unique_id_42",{"_index":670,"title":{},"name":{},"text":{"6":{}},"component":{}}],["aa11",{"_index":2958,"title":{},"name":{},"text":{"49":{}},"component":{}}],["aaee",{"_index":2786,"title":{},"name":{},"text":{"45":{}},"component":{}}],["ab_jolokia_off=\\\"\\\"\\nenv",{"_index":2859,"title":{},"name":{},"text":{"47":{}},"component":{}}],["abil",{"_index":3317,"title":{},"name":{},"text":{"64":{}},"component":{}}],["abort",{"_index":970,"title":{},"name":{},"text":{"11":{},"14":{},"65":{}},"component":{}}],["abov",{"_index":532,"title":{},"name":{},"text":{"6":{},"27":{},"31":{},"47":{},"49":{},"60":{}},"component":{}}],["absolut",{"_index":2347,"title":{},"name":{},"text":{"35":{}},"component":{}}],["abstract",{"_index":1349,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{}}],["ac16",{"_index":1220,"title":{},"name":{},"text":{"14":{}},"component":{}}],["acceler",{"_index":3361,"title":{},"name":{},"text":{"67":{}},"component":{}}],["accept",{"_index":953,"title":{},"name":{},"text":{"10":{},"11":{},"13":{},"24":{},"33":{},"34":{},"35":{},"38":{},"42":{}},"component":{}}],["accept(contenttype.json",{"_index":1988,"title":{},"name":{},"text":{"29":{},"38":{}},"component":{}}],["accept:application/json",{"_index":2356,"title":{},"name":{},"text":{"35":{},"47":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["access",{"_index":511,"title":{"6-6":{},"36-4":{},"62-5":{}},"name":{},"text":{"6":{},"9":{},"14":{},"18":{},"21":{},"26":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"41":{},"47":{},"49":{},"53":{},"54":{},"57":{},"59":{},"63":{},"66":{},"67":{},"68":{},"70":{},"73":{}},"component":{}}],["accord",{"_index":821,"title":{},"name":{},"text":{"8":{},"12":{},"32":{},"36":{},"46":{}},"component":{}}],["accordingli",{"_index":1967,"title":{},"name":{},"text":{"28":{},"46":{},"59":{}},"component":{}}],["account",{"_index":1278,"title":{"70-1":{}},"name":{},"text":{"16":{},"19":{},"60":{},"66":{},"67":{},"70":{},"73":{}},"component":{}}],["accur",{"_index":2130,"title":{},"name":{},"text":{"33":{}},"component":{}}],["achiev",{"_index":375,"title":{},"name":{},"text":{"4":{},"37":{},"68":{}},"component":{}}],["acknowledgment(strategy.post_process",{"_index":1050,"title":{},"name":{},"text":{"12":{}},"component":{}}],["acm",{"_index":2127,"title":{},"name":{},"text":{"33":{}},"component":{}}],["acme_financial_oauth",{"_index":2188,"title":{},"name":{},"text":{"33":{}},"component":{}}],["acme_financial_service_oauth",{"_index":2206,"title":{},"name":{},"text":{"33":{}},"component":{}}],["acquir",{"_index":1799,"title":{},"name":{},"text":{"26":{}},"component":{}}],["act",{"_index":1351,"title":{},"name":{},"text":{"17":{},"19":{},"42":{}},"component":{}}],["action",{"_index":527,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"19":{},"20":{},"23":{},"24":{},"27":{},"28":{},"33":{},"34":{},"35":{},"36":{},"37":{},"45":{},"46":{},"47":{},"49":{},"53":{},"60":{},"64":{},"65":{},"66":{},"73":{}},"component":{}}],["actiondatafilt",{"_index":957,"title":{},"name":{},"text":{"10":{},"33":{},"45":{}},"component":{}}],["actionmod",{"_index":2293,"title":{},"name":{},"text":{"34":{},"36":{}},"component":{}}],["activ",{"_index":832,"title":{"65-2":{}},"name":{},"text":{"9":{},"13":{},"14":{},"19":{},"21":{},"27":{},"34":{},"38":{},"45":{},"47":{},"49":{},"51":{},"55":{},"57":{},"58":{},"59":{},"65":{},"66":{},"68":{}},"component":{}}],["activateaccount",{"_index":1503,"title":{},"name":{},"text":{"19":{}},"component":{}}],["activateaccountev",{"_index":1502,"title":{},"name":{},"text":{"19":{}},"component":{}}],["activatedaccount",{"_index":1505,"title":{},"name":{},"text":{"19":{}},"component":{}}],["activatedaccountev",{"_index":1504,"title":{},"name":{},"text":{"19":{}},"component":{}}],["activity/servic",{"_index":2429,"title":{},"name":{},"text":{"37":{}},"component":{}}],["actual",{"_index":347,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ad",{"_index":579,"title":{"15-2":{},"43-1":{}},"name":{},"text":{"6":{},"10":{},"12":{},"14":{},"15":{},"16":{},"23":{},"25":{},"27":{},"29":{},"32":{},"35":{},"36":{},"42":{},"43":{},"53":{},"55":{},"57":{},"58":{},"59":{},"64":{},"65":{},"66":{},"73":{}},"component":{}}],["ad9c",{"_index":1703,"title":{},"name":{},"text":{"21":{}},"component":{}}],["adapt",{"_index":3300,"title":{},"name":{},"text":{"60":{}},"component":{}}],["add",{"_index":139,"title":{"17-1":{},"17-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"41":{},"42":{},"43":{},"45":{},"48":{},"51":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"67":{},"68":{},"70":{},"71":{},"73":{}},"component":{}}],["addit",{"_index":307,"title":{"53":{},"4-12":{},"6-21":{},"7-5":{},"8-2":{},"9-10":{},"10-4":{},"11-3":{},"12-2":{},"13-4":{},"14-15":{},"15-3":{},"16-8":{},"17-6":{},"18-4":{},"19-2":{},"21-6":{},"23-5":{},"24-2":{},"26-4":{},"29-3":{},"30-2":{},"32-7":{},"33-4":{},"34-9":{},"36-6":{},"37-3":{},"38-1":{},"41-6":{},"42-4":{},"43-4":{},"45-4":{},"46-10":{},"47-13":{},"48-3":{},"49-13":{},"50-4":{},"53-1":{},"53-3":{},"54-4":{},"55-5":{},"60-7":{},"69-2":{},"72-2":{}},"name":{},"text":{"3":{},"4":{},"9":{},"17":{},"20":{},"27":{},"28":{},"29":{},"32":{},"34":{},"46":{},"49":{},"53":{},"60":{}},"component":{}}],["addition",{"_index":1901,"title":{},"name":{},"text":{"27":{},"46":{},"65":{}},"component":{}}],["addon",{"_index":725,"title":{"14-14":{}},"name":{},"text":{"6":{},"9":{},"14":{},"15":{},"17":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"38":{},"50":{},"51":{},"57":{},"58":{},"59":{},"60":{},"63":{},"65":{}},"component":{}}],["addonsconfig",{"_index":2485,"title":{},"name":{},"text":{"38":{}},"component":{}}],["addonsconfig{usepersistence=fals",{"_index":2486,"title":{},"name":{},"text":{"38":{}},"component":{}}],["address",{"_index":1361,"title":{"47-8":{}},"name":{},"text":{"17":{},"42":{},"45":{},"47":{},"49":{},"52":{},"54":{},"55":{},"59":{}},"component":{}}],["adjust",{"_index":1340,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["admin",{"_index":2978,"title":{},"name":{},"text":{"50":{}},"component":{}}],["administr",{"_index":318,"title":{},"name":{},"text":{"3":{},"57":{},"70":{}},"component":{}}],["admiss",{"_index":3021,"title":{},"name":{},"text":{"51":{}},"component":{}}],["adopt",{"_index":778,"title":{},"name":{},"text":{"7":{}},"component":{}}],["advanc",{"_index":2813,"title":{},"name":{},"text":{"47":{},"65":{}},"component":{}}],["advantag",{"_index":1547,"title":{},"name":{},"text":{"20":{}},"component":{}}],["aea8",{"_index":1537,"title":{},"name":{},"text":{"19":{}},"component":{}}],["af5d",{"_index":2732,"title":{},"name":{},"text":{"45":{}},"component":{}}],["af60",{"_index":2249,"title":{},"name":{},"text":{"33":{}},"component":{}}],["affect",{"_index":1886,"title":{},"name":{},"text":{"27":{}},"component":{}}],["afteral",{"_index":2574,"title":{},"name":{},"text":{"42":{}},"component":{}}],["ag",{"_index":619,"title":{},"name":{},"text":{"6":{},"24":{},"50":{},"57":{},"58":{},"59":{}},"component":{}}],["again",{"_index":3214,"title":{},"name":{},"text":{"58":{}},"component":{}}],["against",{"_index":93,"title":{},"name":{},"text":{"1":{},"7":{},"10":{},"11":{},"19":{},"33":{}},"component":{}}],["aggreg",{"_index":1438,"title":{},"name":{},"text":{"17":{}},"component":{}}],["aggregatedquotesrespons",{"_index":1429,"title":{},"name":{},"text":{"17":{}},"component":{}}],["agroal",{"_index":1693,"title":{},"name":{},"text":{"21":{},"29":{},"30":{}},"component":{}}],["aim",{"_index":2430,"title":{},"name":{},"text":{"37":{}},"component":{}}],["alert",{"_index":3322,"title":{},"name":{},"text":{"64":{},"65":{}},"component":{}}],["alia",{"_index":2252,"title":{"34-2":{}},"name":{},"text":{"34":{},"58":{}},"component":{}}],["align",{"_index":228,"title":{"51-2":{}},"name":{},"text":{"2":{}},"component":{}}],["allinon",{"_index":1869,"title":{},"name":{},"text":{"27":{}},"component":{}}],["allinone:latest",{"_index":1874,"title":{},"name":{},"text":{"27":{}},"component":{}}],["alloc",{"_index":2204,"title":{},"name":{},"text":{"33":{},"45":{}},"component":{}}],["allof",{"_index":1087,"title":{},"name":{},"text":{"13":{}},"component":{}}],["allow",{"_index":165,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"14":{},"15":{},"16":{},"18":{},"19":{},"29":{},"30":{},"34":{},"42":{},"45":{},"47":{},"59":{},"60":{},"64":{},"65":{},"66":{},"73":{}},"component":{}}],["along",{"_index":2000,"title":{},"name":{},"text":{"30":{},"57":{},"58":{},"59":{},"68":{},"73":{}},"component":{}}],["alongsid",{"_index":3404,"title":{},"name":{},"text":{"73":{}},"component":{}}],["alpha",{"_index":3020,"title":{},"name":{},"text":{"51":{}},"component":{}}],["alphabet",{"_index":2071,"title":{},"name":{},"text":{"32":{},"34":{}},"component":{}}],["alreadi",{"_index":1354,"title":{},"name":{},"text":{"17":{},"31":{},"47":{},"48":{},"49":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"65":{},"70":{}},"component":{}}],["altern",{"_index":397,"title":{},"name":{},"text":{"4":{},"9":{},"11":{},"17":{},"19":{},"27":{},"28":{},"30":{},"32":{},"33":{},"34":{},"38":{},"43":{},"45":{},"47":{},"49":{},"50":{},"55":{},"60":{}},"component":{}}],["although",{"_index":1356,"title":{},"name":{},"text":{"17":{}},"component":{}}],["alway",{"_index":1318,"title":{},"name":{},"text":{"16":{},"27":{},"35":{},"49":{},"53":{},"67":{}},"component":{}}],["amaz",{"_index":1708,"title":{},"name":{},"text":{"21":{}},"component":{}}],["amount",{"_index":829,"title":{},"name":{},"text":{"9":{},"17":{},"33":{}},"component":{}}],["analyz",{"_index":2964,"title":{},"name":{},"text":{"49":{}},"component":{}}],["and/or",{"_index":789,"title":{},"name":{},"text":{"7":{}},"component":{}}],["annot",{"_index":1469,"title":{},"name":{},"text":{"18":{},"29":{},"42":{},"47":{},"49":{},"53":{},"57":{},"58":{},"59":{}},"component":{}}],["anoth",{"_index":1350,"title":{"47-2":{},"49-6":{}},"name":{},"text":{"17":{},"18":{},"30":{},"35":{},"45":{},"47":{},"49":{},"67":{}},"component":{}}],["anymor",{"_index":850,"title":{},"name":{},"text":{"9":{}},"component":{}}],["anyth",{"_index":2893,"title":{},"name":{},"text":{"47":{}},"component":{}}],["apach",{"_index":118,"title":{"18":{}},"name":{},"text":{"1":{},"6":{},"8":{},"12":{},"14":{},"16":{},"17":{},"18":{},"21":{},"23":{},"27":{},"28":{},"29":{},"33":{},"38":{},"55":{}},"component":{}}],["api",{"_index":46,"title":{"14-9":{},"27-12":{},"32-4":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"14":{},"17":{},"26":{},"27":{},"32":{},"33":{},"34":{},"36":{},"38":{},"42":{},"43":{},"51":{},"60":{},"66":{},"68":{},"70":{},"73":{}},"component":{}}],["api_key_exampl",{"_index":2068,"title":{},"name":{},"text":{"32":{}},"component":{}}],["apicatalog_apis_123_docu",{"_index":2261,"title":{},"name":{},"text":{"34":{}},"component":{}}],["apicurio",{"_index":3417,"title":{},"name":{},"text":{"73":{}},"component":{}}],["apigroup",{"_index":3288,"title":{},"name":{},"text":{"60":{}},"component":{}}],["apikey",{"_index":2057,"title":{},"name":{},"text":{"32":{}},"component":{}}],["apivers",{"_index":1248,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"25":{},"27":{},"47":{},"48":{},"49":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["app",{"_index":193,"title":{},"name":{},"text":{"2":{},"21":{},"24":{},"25":{},"32":{},"33":{},"41":{},"48":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["app.kubernetes.io/nam",{"_index":1304,"title":{},"name":{},"text":{"16":{},"27":{},"57":{},"58":{},"59":{}},"component":{}}],["app.kubernetes.io/vers",{"_index":1305,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["app.quarkus.io/build",{"_index":3186,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["app.quarkus.io/commit",{"_index":3184,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["app.sh",{"_index":2835,"title":{},"name":{},"text":{"47":{}},"component":{}}],["app/*.jar",{"_index":2852,"title":{},"name":{},"text":{"47":{}},"component":{}}],["app/app",{"_index":2854,"title":{},"name":{},"text":{"47":{}},"component":{}}],["app/lib",{"_index":2850,"title":{},"name":{},"text":{"47":{}},"component":{}}],["app/quarku",{"_index":2217,"title":{},"name":{},"text":{"33":{},"34":{},"47":{},"60":{}},"component":{}}],["appear",{"_index":2679,"title":{},"name":{},"text":{"45":{},"64":{},"65":{},"66":{},"68":{},"70":{},"73":{}},"component":{}}],["appl",{"_index":2526,"title":{},"name":{},"text":{"41":{}},"component":{}}],["appli",{"_index":784,"title":{"64-1":{}},"name":{},"text":{"7":{},"10":{},"11":{},"14":{},"17":{},"25":{},"27":{},"28":{},"31":{},"32":{},"46":{},"47":{},"49":{},"50":{},"53":{},"57":{},"58":{},"59":{},"62":{},"64":{},"65":{},"70":{}},"component":{}}],["applic",{"_index":26,"title":{"3":{},"30":{},"38":{},"57":{},"58":{},"59":{},"70":{},"15-2":{},"21-3":{},"21-4":{},"21-5":{},"29-2":{},"33-2":{},"33-3":{},"34-6":{},"34-7":{},"35-2":{},"42-2":{},"55-1":{},"55-2":{},"55-3":{},"57-2":{},"57-3":{},"57-4":{},"57-5":{},"58-2":{},"58-3":{},"58-4":{},"58-5":{},"59-2":{},"59-4":{},"59-5":{},"59-6":{},"70-1":{},"70-2":{}},"name":{"70":{}},"text":{"1":{},"3":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{}},"component":{}}],["applicantworkflow",{"_index":2015,"title":{},"name":{},"text":{"30":{}},"component":{}}],["application.properti",{"_index":675,"title":{},"name":{},"text":{"6":{},"12":{},"14":{},"15":{},"16":{},"17":{},"28":{},"30":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"48":{},"57":{},"58":{},"59":{}},"component":{}}],["application/cloudevents+json",{"_index":647,"title":{},"name":{},"text":{"6":{},"17":{}},"component":{}}],["application/json",{"_index":643,"title":{},"name":{},"text":{"6":{},"13":{},"17":{},"24":{},"33":{},"34":{},"36":{},"38":{},"43":{},"45":{}},"component":{}}],["applications/ki",{"_index":3373,"title":{},"name":{},"text":{"68":{}},"component":{}}],["applicationscop",{"_index":2168,"title":{},"name":{},"text":{"33":{}},"component":{}}],["appreci",{"_index":411,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["approach",{"_index":298,"title":{},"name":{},"text":{"3":{},"6":{},"27":{},"30":{},"35":{},"36":{},"37":{},"41":{},"57":{},"58":{},"59":{},"60":{},"68":{}},"component":{}}],["appropri",{"_index":1437,"title":{},"name":{},"text":{"17":{},"21":{},"27":{},"31":{},"35":{}},"component":{}}],["approv",{"_index":2531,"title":{},"name":{},"text":{"41":{}},"component":{}}],["approvedvisa",{"_index":886,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["apps.openshift.io",{"_index":3294,"title":{},"name":{},"text":{"60":{}},"component":{}}],["apps/v1",{"_index":1313,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["architectur",{"_index":29,"title":{"46-8":{}},"name":{},"text":{"1":{},"27":{},"33":{},"42":{},"45":{},"46":{}},"component":{}}],["arg",{"_index":1835,"title":{},"name":{},"text":{"26":{}},"component":{}}],["arg1",{"_index":1728,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg2",{"_index":1729,"title":{},"name":{},"text":{"23":{}},"component":{}}],["argument",{"_index":509,"title":{"6-4":{},"6-9":{},"6-14":{},"10-2":{}},"name":{},"text":{"6":{},"9":{},"10":{},"11":{},"14":{},"20":{},"23":{},"24":{},"33":{},"34":{},"35":{},"36":{},"37":{},"45":{},"46":{},"47":{},"49":{}},"component":{}}],["arithmet",{"_index":711,"title":{},"name":{},"text":{"6":{}},"component":{}}],["around",{"_index":2937,"title":{},"name":{},"text":{"49":{}},"component":{}}],["array",{"_index":581,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"14":{},"23":{},"35":{},"73":{}},"component":{}}],["arriv",{"_index":826,"title":{},"name":{},"text":{"9":{},"16":{},"37":{},"46":{}},"component":{}}],["articl",{"_index":2532,"title":{},"name":{},"text":{"41":{},"59":{}},"component":{}}],["artifact",{"_index":1600,"title":{},"name":{},"text":{"21":{},"29":{},"55":{},"73":{}},"component":{}}],["asc",{"_index":1173,"title":{},"name":{},"text":{"14":{}},"component":{}}],["ascend",{"_index":1172,"title":{},"name":{},"text":{"14":{}},"component":{}}],["ascloudev",{"_index":651,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ask",{"_index":2969,"title":{},"name":{},"text":{"49":{},"73":{}},"component":{}}],["asp.net",{"_index":2394,"title":{},"name":{},"text":{"36":{}},"component":{}}],["aspect",{"_index":1895,"title":{},"name":{},"text":{"27":{},"33":{}},"component":{}}],["asset",{"_index":1714,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["assign",{"_index":2271,"title":{},"name":{},"text":{"34":{},"60":{}},"component":{}}],["associ",{"_index":400,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{},"14":{},"19":{},"45":{},"54":{}},"component":{}}],["assum",{"_index":548,"title":{},"name":{},"text":{"6":{},"20":{},"43":{},"55":{},"66":{}},"component":{}}],["assur",{"_index":138,"title":{"38":{}},"name":{},"text":{"1":{},"21":{},"29":{},"38":{},"42":{},"43":{}},"component":{}}],["assured/target/serverless",{"_index":2509,"title":{},"name":{},"text":{"38":{}},"component":{}}],["async",{"_index":41,"title":{},"name":{},"text":{"1":{},"4":{}},"component":{}}],["asyncapi",{"_index":115,"title":{"20":{}},"name":{"20":{}},"text":{"1":{},"20":{},"53":{}},"component":{}}],["asyncapi.yaml",{"_index":1549,"title":{},"name":{},"text":{"20":{}},"component":{}}],["asyncapi.yaml#consumewait",{"_index":1559,"title":{},"name":{},"text":{"20":{}},"component":{}}],["asyncapi.yaml#sendresum",{"_index":1564,"title":{},"name":{},"text":{"20":{}},"component":{}}],["asynchron",{"_index":863,"title":{},"name":{},"text":{"9":{},"12":{},"29":{},"37":{},"42":{}},"component":{}}],["atleast",{"_index":1106,"title":{},"name":{},"text":{"13":{}},"component":{}}],["atleast(1",{"_index":1993,"title":{},"name":{},"text":{"29":{}},"component":{}}],["atmost(30",{"_index":1994,"title":{},"name":{},"text":{"29":{}},"component":{}}],["atmost(60",{"_index":2592,"title":{},"name":{},"text":{"42":{}},"component":{}}],["attach",{"_index":508,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["attempt",{"_index":1888,"title":{},"name":{},"text":{"27":{},"49":{},"54":{}},"component":{}}],["attempttoredeployfail",{"_index":3063,"title":{},"name":{},"text":{"54":{}},"component":{}}],["attent",{"_index":3166,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["attribut",{"_index":388,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"10":{},"12":{},"14":{},"16":{},"17":{},"19":{},"23":{},"27":{},"33":{},"36":{},"37":{},"45":{},"49":{},"53":{},"60":{},"73":{}},"component":{}}],["aud",{"_index":2242,"title":{},"name":{},"text":{"33":{}},"component":{}}],["augment",{"_index":2513,"title":{},"name":{},"text":{"38":{}},"component":{}}],["auth",{"_index":1925,"title":{},"name":{},"text":{"27":{}},"component":{}}],["auth_property_nam",{"_index":2069,"title":{},"name":{},"text":{"32":{}},"component":{}}],["authent",{"_index":121,"title":{"32":{},"33":{},"32-1":{},"32-2":{},"32-3":{},"32-4":{},"32-5":{},"47-7":{}},"name":{"32":{}},"text":{"1":{},"27":{},"32":{},"33":{},"36":{},"47":{},"57":{},"59":{},"70":{},"73":{}},"component":{}}],["author",{"_index":1713,"title":{"32-6":{}},"name":{},"text":{"22":{},"32":{},"33":{},"42":{}},"component":{}}],["authorizationurl",{"_index":2094,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["authprovid",{"_index":3416,"title":{},"name":{},"text":{"73":{}},"component":{}}],["auto",{"_index":1373,"title":{"73-6":{}},"name":{},"text":{"17":{},"27":{},"64":{},"72":{},"73":{}},"component":{}}],["autocomplet",{"_index":2535,"title":{},"name":{},"text":{"41":{}},"component":{}}],["automat",{"_index":905,"title":{},"name":{},"text":{"9":{},"12":{},"14":{},"15":{},"16":{},"20":{},"25":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"36":{},"37":{},"41":{},"46":{},"49":{},"69":{},"72":{},"73":{}},"component":{}}],["autoscal",{"_index":3121,"title":{},"name":{},"text":{"57":{}},"component":{}}],["avail",{"_index":717,"title":{"57-1":{},"60-6":{}},"name":{},"text":{"6":{},"9":{},"11":{},"14":{},"15":{},"16":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"32":{},"34":{},"36":{},"41":{},"45":{},"46":{},"49":{},"53":{},"54":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"73":{}},"component":{}}],["avoid",{"_index":218,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"15":{},"27":{},"36":{},"58":{},"60":{}},"component":{}}],["await",{"_index":1992,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["awaitil",{"_index":1977,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["awar",{"_index":2826,"title":{},"name":{},"text":{"47":{}},"component":{}}],["awesom",{"_index":1605,"title":{},"name":{},"text":{"21":{}},"component":{}}],["b",{"_index":1089,"title":{},"name":{},"text":{"13":{}},"component":{}}],["b125",{"_index":2923,"title":{},"name":{},"text":{"47":{}},"component":{}}],["b232",{"_index":2763,"title":{},"name":{},"text":{"45":{}},"component":{}}],["b4bf",{"_index":2226,"title":{},"name":{},"text":{"33":{}},"component":{}}],["b4f1",{"_index":3173,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["b526",{"_index":2313,"title":{},"name":{},"text":{"34":{}},"component":{}}],["b5e1",{"_index":2713,"title":{},"name":{},"text":{"45":{}},"component":{}}],["b689",{"_index":1157,"title":{},"name":{},"text":{"14":{},"34":{}},"component":{}}],["b7fb",{"_index":1521,"title":{},"name":{},"text":{"19":{}},"component":{}}],["b869",{"_index":2768,"title":{},"name":{},"text":{"45":{}},"component":{}}],["back",{"_index":1740,"title":{},"name":{},"text":{"23":{},"27":{},"35":{},"36":{},"47":{}},"component":{}}],["backend",{"_index":1963,"title":{},"name":{},"text":{"27":{}},"component":{}}],["background",{"_index":1335,"title":{},"name":{},"text":{"16":{}},"component":{}}],["balanc",{"_index":3160,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["band",{"_index":2427,"title":{},"name":{},"text":{"37":{}},"component":{}}],["bank1",{"_index":1397,"title":{},"name":{},"text":{"17":{}},"component":{}}],["bank2",{"_index":1400,"title":{},"name":{},"text":{"17":{}},"component":{}}],["bankid",{"_index":1396,"title":{},"name":{},"text":{"17":{}},"component":{}}],["bar",{"_index":1822,"title":{},"name":{},"text":{"26":{}},"component":{}}],["barchart",{"_index":1829,"title":{},"name":{},"text":{"26":{}},"component":{}}],["base",{"_index":64,"title":{"25":{},"35":{},"9-6":{},"36-2":{},"47-2":{},"47-3":{},"47-10":{},"49-6":{}},"name":{"20":{},"36":{},"45":{}},"text":{"1":{},"2":{},"6":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"21":{},"24":{},"27":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"37":{},"38":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"55":{},"59":{},"60":{},"62":{},"65":{},"67":{},"72":{},"73":{}},"component":{}}],["baseimag",{"_index":2823,"title":{},"name":{},"text":{"47":{},"49":{},"52":{}},"component":{}}],["baselin",{"_index":2019,"title":{"31-5":{},"31-6":{},"31-7":{}},"name":{},"text":{"31":{}},"component":{}}],["baselineonmigrate=\"tru",{"_index":2048,"title":{},"name":{},"text":{"31":{}},"component":{}}],["baselinevers",{"_index":2044,"title":{},"name":{},"text":{"31":{}},"component":{}}],["baselineversion=\"1.32.0",{"_index":2049,"title":{},"name":{},"text":{"31":{}},"component":{}}],["basic",{"_index":316,"title":{"32-2":{},"49-8":{}},"name":{"38":{}},"text":{"3":{},"32":{},"35":{},"47":{},"65":{}},"component":{}}],["bc76",{"_index":1512,"title":{},"name":{},"text":{"19":{}},"component":{}}],["bcfb",{"_index":1667,"title":{},"name":{},"text":{"21":{}},"component":{}}],["be",{"_index":845,"title":{},"name":{},"text":{"9":{},"17":{},"21":{},"51":{},"59":{},"73":{}},"component":{}}],["bean",{"_index":453,"title":{},"name":{},"text":{"5":{},"6":{},"23":{}},"component":{}}],["bear",{"_index":290,"title":{},"name":{},"text":{"3":{}},"component":{}}],["bearer",{"_index":2053,"title":{"32-3":{}},"name":{},"text":{"32":{}},"component":{}}],["becom",{"_index":831,"title":{},"name":{},"text":{"9":{},"27":{},"57":{},"58":{},"59":{},"66":{}},"component":{}}],["befor",{"_index":489,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"10":{},"16":{},"17":{},"18":{},"33":{},"35":{},"36":{},"41":{},"42":{},"43":{},"46":{},"53":{},"54":{},"57":{},"58":{},"59":{},"66":{},"67":{}},"component":{}}],["beforeal",{"_index":2465,"title":{},"name":{},"text":{"38":{},"42":{}},"component":{}}],["begin",{"_index":928,"title":{},"name":{},"text":{"10":{}},"component":{}}],["behav",{"_index":355,"title":{},"name":{},"text":{"4":{},"9":{},"43":{}},"component":{}}],["behavior",{"_index":348,"title":{},"name":{},"text":{"4":{},"7":{},"12":{},"14":{},"16":{},"29":{},"47":{},"58":{}},"component":{}}],["bellow",{"_index":2899,"title":{},"name":{},"text":{"47":{}},"component":{}}],["belong",{"_index":1243,"title":{},"name":{},"text":{"14":{},"19":{},"57":{},"58":{},"59":{}},"component":{}}],["below",{"_index":282,"title":{},"name":{},"text":{"3":{},"23":{},"27":{},"31":{},"37":{},"48":{},"50":{},"54":{},"57":{},"64":{}},"component":{}}],["bequiet",{"_index":815,"title":{},"name":{},"text":{"8":{}},"component":{}}],["best",{"_index":1712,"title":{},"name":{},"text":{"22":{},"28":{}},"component":{}}],["better",{"_index":1746,"title":{},"name":{},"text":{"23":{},"55":{}},"component":{}}],["between",{"_index":966,"title":{},"name":{},"text":{"11":{},"13":{},"14":{},"27":{},"28":{},"37":{},"42":{},"43":{},"60":{},"65":{}},"component":{}}],["bidirect",{"_index":2327,"title":{"35-6":{}},"name":{},"text":{"35":{}},"component":{}}],["bigger",{"_index":1899,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bin",{"_index":3367,"title":{},"name":{},"text":{"68":{}},"component":{}}],["binari",{"_index":1402,"title":{},"name":{},"text":{"17":{},"30":{},"41":{}},"component":{}}],["bind",{"_index":135,"title":{},"name":{},"text":{"1":{},"17":{},"27":{},"53":{},"60":{}},"component":{}}],["blank",{"_index":3321,"title":{},"name":{},"text":{"64":{}},"component":{}}],["block",{"_index":2334,"title":{},"name":{},"text":{"35":{},"41":{}},"component":{}}],["bodi",{"_index":596,"title":{},"name":{},"text":{"6":{},"10":{},"23":{},"36":{},"37":{},"38":{},"42":{},"43":{}},"component":{}}],["body(\"workflowdata.greet",{"_index":2470,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body(\"{\\\"nam",{"_index":2468,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body(objectmapper.writevalueasstring(ord",{"_index":2590,"title":{},"name":{},"text":{"42":{}},"component":{}}],["boolean",{"_index":434,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"14":{},"16":{},"30":{}},"component":{}}],["boot",{"_index":2392,"title":{},"name":{},"text":{"36":{}},"component":{}}],["bootstrap",{"_index":1569,"title":{"21-1":{}},"name":{},"text":{"21":{}},"component":{}}],["both",{"_index":598,"title":{},"name":{},"text":{"6":{},"8":{},"17":{},"37":{},"42":{},"46":{},"53":{},"64":{}},"component":{}}],["box",{"_index":3320,"title":{},"name":{},"text":{"64":{},"73":{}},"component":{}}],["branch",{"_index":345,"title":{"13-3":{}},"name":{},"text":{"4":{},"13":{},"55":{},"71":{}},"component":{}}],["brancha",{"_index":1081,"title":{},"name":{},"text":{"13":{}},"component":{}}],["branchb",{"_index":1083,"title":{},"name":{},"text":{"13":{}},"component":{}}],["branchc",{"_index":1085,"title":{},"name":{},"text":{"13":{}},"component":{}}],["break",{"_index":2753,"title":{},"name":{},"text":{"45":{},"47":{},"53":{}},"component":{}}],["briefli",{"_index":587,"title":{},"name":{},"text":{"6":{}},"component":{}}],["brl",{"_index":2241,"title":{},"name":{},"text":{"33":{}},"component":{}}],["broker",{"_index":1059,"title":{},"name":{},"text":{"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"27":{},"42":{}},"component":{}}],["browser",{"_index":2951,"title":{},"name":{},"text":{"49":{},"58":{},"66":{},"69":{}},"component":{}}],["bucket",{"_index":3124,"title":{},"name":{},"text":{"57":{}},"component":{}}],["buffer",{"_index":1471,"title":{},"name":{},"text":{"18":{}},"component":{}}],["bug",{"_index":226,"title":{},"name":{},"text":{"2":{},"47":{},"49":{}},"component":{}}],["build",{"_index":24,"title":{"47":{},"55":{},"17-4":{},"21-3":{},"26-2":{},"26-3":{},"41-3":{},"41-4":{},"47-1":{},"47-3":{},"47-5":{},"47-6":{},"47-8":{},"47-9":{},"47-11":{},"55-2":{},"55-3":{}},"name":{"47":{},"55":{},"56":{}},"text":{"1":{},"3":{},"12":{},"17":{},"21":{},"24":{},"26":{},"28":{},"29":{},"31":{},"33":{},"36":{},"38":{},"41":{},"42":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"55":{},"57":{},"58":{},"59":{},"66":{}},"component":{}}],["build:\\n",{"_index":2821,"title":{},"name":{},"text":{"47":{}},"component":{}}],["build=tru",{"_index":3101,"title":{},"name":{},"text":{"55":{},"58":{}},"component":{}}],["buildconfig",{"_index":2811,"title":{},"name":{},"text":{"47":{}},"component":{}}],["buildconfig/greet",{"_index":2909,"title":{},"name":{},"text":{"47":{}},"component":{}}],["builder",{"_index":2439,"title":{"47-2":{},"47-10":{}},"name":{},"text":{"37":{},"47":{},"51":{},"55":{}},"component":{}}],["builder\\n",{"_index":2830,"title":{},"name":{},"text":{"47":{}},"component":{}}],["buildfailedreason",{"_index":3068,"title":{},"name":{},"text":{"54":{}},"component":{}}],["buildisrunningreason",{"_index":3067,"title":{},"name":{},"text":{"54":{}},"component":{}}],["buildpack",{"_index":3076,"title":{},"name":{},"text":{"55":{}},"component":{}}],["built",{"_index":1798,"title":{},"name":{},"text":{"25":{},"36":{},"41":{},"54":{},"55":{},"57":{},"58":{},"59":{},"66":{}},"component":{}}],["bump",{"_index":251,"title":{},"name":{},"text":{"2":{}},"component":{}}],["busi",{"_index":1847,"title":{"64-5":{}},"name":{},"text":{"26":{},"45":{},"64":{},"65":{}},"component":{}}],["businesskey",{"_index":1843,"title":{},"name":{},"text":{"26":{}},"component":{}}],["button",{"_index":3313,"title":{},"name":{},"text":{"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{}},"component":{}}],["buy",{"_index":2670,"title":{},"name":{},"text":{"45":{}},"component":{}}],["byte",{"_index":2630,"title":{},"name":{},"text":{"43":{}},"component":{}}],["c",{"_index":1090,"title":{},"name":{},"text":{"13":{}},"component":{}}],["c1658c4e49bc",{"_index":1531,"title":{},"name":{},"text":{"19":{}},"component":{}}],["c4e7",{"_index":1109,"title":{},"name":{},"text":{"13":{}},"component":{}}],["c82c",{"_index":2233,"title":{},"name":{},"text":{"33":{}},"component":{}}],["cace363774bb\",\"workflowdata\":{\"symbol\":\"kgto\",\"currentprice\":56.35,\"profit\":\"13",{"_index":2324,"title":{},"name":{},"text":{"34":{}},"component":{}}],["cace363774bb\",\"workflowdata\":{\"symbol\":\"kgto\",\"currentprice\":75,\"profit\":\"50",{"_index":2314,"title":{},"name":{},"text":{"34":{}},"component":{}}],["cach",{"_index":1634,"title":{},"name":{},"text":{"21":{},"38":{},"47":{},"55":{}},"component":{}}],["cad",{"_index":2240,"title":{},"name":{},"text":{"33":{}},"component":{}}],["calcul",{"_index":802,"title":{},"name":{},"text":{"8":{},"10":{},"33":{},"34":{}},"component":{}}],["calculateexchang",{"_index":2146,"title":{},"name":{},"text":{"33":{}},"component":{}}],["calculateexchangeact",{"_index":2159,"title":{},"name":{},"text":{"33":{}},"component":{}}],["calculateexchangeresult",{"_index":2147,"title":{},"name":{},"text":{"33":{}},"component":{}}],["calculatorclient.invokeoper",{"_index":757,"title":{},"name":{},"text":{"6":{}},"component":{}}],["calculatorclient.invokeoperation((string)metadata.getordefault(host,\"localhost",{"_index":748,"title":{},"name":{},"text":{"6":{}},"component":{}}],["call",{"_index":50,"title":{"28-3":{}},"name":{},"text":{"1":{},"6":{},"9":{},"10":{},"13":{},"14":{},"18":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{},"35":{},"36":{},"37":{},"43":{},"45":{},"46":{},"47":{},"49":{},"58":{}},"component":{}}],["callabl",{"_index":2564,"title":{},"name":{},"text":{"42":{}},"component":{}}],["callback",{"_index":78,"title":{"12":{},"37":{},"9-3":{},"12-1":{},"37-1":{}},"name":{"12":{},"37":{}},"text":{"1":{},"4":{},"8":{},"9":{},"10":{},"12":{},"17":{},"18":{},"19":{},"27":{},"29":{},"30":{},"37":{},"45":{},"46":{}},"component":{}}],["callback_event_typ",{"_index":2792,"title":{},"name":{},"text":{"46":{}},"component":{}}],["callback_state_timeout",{"_index":2789,"title":{"46-1":{}},"name":{},"text":{"46":{}},"component":{}}],["callbackact",{"_index":867,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["callbackerror",{"_index":874,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["callbackev",{"_index":870,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["callbackfunct",{"_index":868,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["callbackrestit",{"_index":1984,"title":{},"name":{},"text":{"29":{}},"component":{}}],["callbackst",{"_index":866,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["caller",{"_index":1017,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["callpetstor",{"_index":2416,"title":{},"name":{},"text":{"36":{}},"component":{}}],["callservic",{"_index":3042,"title":{},"name":{},"text":{"53":{}},"component":{}}],["camel",{"_index":152,"title":{"23":{},"6-7":{},"23-1":{},"23-2":{},"23-3":{}},"name":{"23":{}},"text":{"1":{},"6":{},"23":{}},"component":{}}],["camel:direct",{"_index":1735,"title":{},"name":{},"text":{"23":{}},"component":{}}],["camel:direct:logroutereplacehead",{"_index":1734,"title":{},"name":{},"text":{"23":{}},"component":{}}],["camel:direct:myendpoint",{"_index":590,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cancel",{"_index":846,"title":{},"name":{},"text":{"9":{},"14":{},"42":{},"45":{}},"component":{}}],["cancelpay",{"_index":2694,"title":{},"name":{},"text":{"45":{}},"component":{}}],["cancelpaymentrespons",{"_index":2770,"title":{},"name":{},"text":{"45":{}},"component":{}}],["cancelstockrespons",{"_index":2771,"title":{},"name":{},"text":{"45":{}},"component":{}}],["can’t",{"_index":3070,"title":{},"name":{},"text":{"54":{},"68":{}},"component":{}}],["capabl",{"_index":516,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"17":{},"18":{},"30":{},"50":{},"72":{},"73":{}},"component":{}}],["card",{"_index":281,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["care",{"_index":1355,"title":{},"name":{},"text":{"17":{},"31":{}},"component":{}}],["carri",{"_index":2796,"title":{},"name":{},"text":{"46":{}},"component":{}}],["case",{"_index":19,"title":{"1-13":{}},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"23":{},"27":{},"28":{},"31":{},"32":{},"33":{},"35":{},"36":{},"41":{},"43":{},"45":{},"46":{},"47":{},"49":{},"54":{},"55":{},"58":{},"60":{},"65":{},"66":{},"68":{}},"component":{}}],["cat",{"_index":2890,"title":{},"name":{},"text":{"47":{}},"component":{}}],["catalog",{"_index":3309,"title":{},"name":{},"text":{"60":{}},"component":{}}],["catch",{"_index":753,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"43":{}},"component":{}}],["caus",{"_index":2963,"title":{},"name":{},"text":{"49":{}},"component":{}}],["cd",{"_index":1598,"title":{},"name":{},"text":{"21":{},"33":{},"34":{},"46":{},"55":{}},"component":{}}],["cd98c6bd3ade",{"_index":2250,"title":{},"name":{},"text":{"33":{}},"component":{}}],["cdi",{"_index":1635,"title":{},"name":{},"text":{"21":{},"38":{}},"component":{}}],["ce",{"_index":1052,"title":{},"name":{},"text":{"12":{},"17":{}},"component":{}}],["ce.get().getdata",{"_index":1056,"title":{},"name":{},"text":{"12":{}},"component":{}}],["celsiu",{"_index":933,"title":{},"name":{},"text":{"10":{}},"component":{}}],["certain",{"_index":878,"title":{},"name":{},"text":{"9":{},"18":{},"34":{}},"component":{}}],["certif",{"_index":3377,"title":{},"name":{},"text":{"68":{}},"component":{}}],["chain",{"_index":979,"title":{},"name":{},"text":{"11":{}},"component":{}}],["chang",{"_index":147,"title":{"2-1":{},"47-4":{},"47-10":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"10":{},"11":{},"13":{},"16":{},"17":{},"18":{},"21":{},"24":{},"27":{},"30":{},"31":{},"33":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"67":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["channel",{"_index":446,"title":{"18-1":{},"18-2":{}},"name":{},"text":{"5":{},"17":{},"18":{},"20":{},"37":{},"42":{},"49":{}},"component":{}}],["charact",{"_index":926,"title":{},"name":{},"text":{"10":{},"32":{},"34":{}},"component":{}}],["charset=utf",{"_index":648,"title":{},"name":{},"text":{"6":{}},"component":{}}],["chart",{"_index":1823,"title":{},"name":{},"text":{"26":{}},"component":{}}],["check",{"_index":645,"title":{"47-12":{},"49-3":{}},"name":{},"text":{"6":{},"7":{},"11":{},"17":{},"25":{},"27":{},"29":{},"33":{},"38":{},"41":{},"42":{},"47":{},"49":{},"50":{},"54":{},"57":{},"58":{},"59":{},"66":{},"70":{}},"component":{}}],["checkbox",{"_index":3389,"title":{},"name":{},"text":{"70":{}},"component":{}}],["checkeven",{"_index":1002,"title":{},"name":{},"text":{"11":{}},"component":{}}],["checkevenact",{"_index":1003,"title":{},"name":{},"text":{"11":{}},"component":{}}],["checkeventarriv",{"_index":871,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["checkout",{"_index":2673,"title":{},"name":{},"text":{"45":{}},"component":{}}],["checkvalid",{"_index":2155,"title":{},"name":{},"text":{"33":{}},"component":{}}],["child",{"_index":1006,"title":{},"name":{},"text":{"11":{}},"component":{}}],["chip",{"_index":3318,"title":{},"name":{},"text":{"64":{}},"component":{}}],["chmod",{"_index":2523,"title":{},"name":{},"text":{"41":{}},"component":{}}],["choic",{"_index":1964,"title":{},"name":{},"text":{"28":{},"49":{}},"component":{}}],["choos",{"_index":1131,"title":{},"name":{},"text":{"14":{},"31":{}},"component":{}}],["chooseoneev",{"_index":2797,"title":{},"name":{},"text":{"46":{}},"component":{}}],["chooseonev",{"_index":884,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["chooseonlanguag",{"_index":2903,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["choreographi",{"_index":27,"title":{},"name":{},"text":{"1":{}},"component":{}}],["chown=185",{"_index":2847,"title":{},"name":{},"text":{"47":{}},"component":{}}],["chrome",{"_index":108,"title":{"71":{},"71-1":{},"71-2":{}},"name":{"71":{}},"text":{"1":{},"22":{},"71":{},"72":{}},"component":{}}],["chrome_extension_serverless_workflow_editor_version.zip",{"_index":3392,"title":{},"name":{},"text":{"71":{}},"component":{}}],["class",{"_index":542,"title":{},"name":{},"text":{"6":{},"11":{},"29":{},"33":{},"38":{},"42":{},"43":{},"45":{}},"component":{}}],["classifi",{"_index":1440,"title":{},"name":{},"text":{"18":{},"42":{}},"component":{}}],["classpath",{"_index":775,"title":{},"name":{},"text":{"7":{},"18":{},"20":{},"35":{},"36":{}},"component":{}}],["clean",{"_index":1417,"title":{},"name":{},"text":{"17":{},"21":{},"28":{},"29":{},"33":{},"35":{},"38":{},"42":{}},"component":{}}],["clear",{"_index":3043,"title":{},"name":{},"text":{"53":{},"64":{},"65":{}},"component":{}}],["clearli",{"_index":1898,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cli",{"_index":130,"title":{"41":{},"55":{},"31-3":{},"31-7":{},"41-1":{},"41-2":{},"41-3":{},"41-5":{},"57-3":{},"57-4":{},"57-5":{},"58-3":{},"58-4":{},"58-5":{},"59-4":{},"59-5":{},"59-6":{}},"name":{"55":{}},"text":{"1":{},"2":{},"3":{},"17":{},"21":{},"22":{},"24":{},"28":{},"31":{},"32":{},"36":{},"41":{},"55":{},"57":{},"58":{},"59":{},"60":{},"63":{},"68":{}},"component":{}}],["click",{"_index":2953,"title":{},"name":{},"text":{"49":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{}},"component":{}}],["clickabl",{"_index":3314,"title":{},"name":{},"text":{"62":{},"65":{}},"component":{}}],["client",{"_index":1130,"title":{"35-5":{}},"name":{},"text":{"14":{},"21":{},"26":{},"27":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"45":{},"60":{},"67":{},"70":{}},"component":{}}],["client.acme_financial_oauth.auth",{"_index":2194,"title":{},"name":{},"text":{"33":{}},"component":{}}],["client.acme_financial_oauth.cli",{"_index":2198,"title":{},"name":{},"text":{"33":{}},"component":{}}],["client.acme_financial_oauth.credentials.cli",{"_index":2200,"title":{},"name":{},"text":{"33":{}},"component":{}}],["client.acme_financial_oauth.discoveri",{"_index":2193,"title":{},"name":{},"text":{"33":{}},"component":{}}],["client.acme_financial_oauth.grant.type=cli",{"_index":2199,"title":{},"name":{},"text":{"33":{}},"component":{}}],["client.acme_financial_oauth.token",{"_index":2196,"title":{},"name":{},"text":{"33":{}},"component":{}}],["client.acme_financial_service_yml.url=http://localhost:8483",{"_index":2192,"title":{},"name":{},"text":{"33":{}},"component":{}}],["client.apicatalog_apis_123_document.url=http://localhost:8282",{"_index":2260,"title":{},"name":{},"text":{"34":{}},"component":{}}],["client.auth",{"_index":1927,"title":{},"name":{},"text":{"27":{}},"component":{}}],["client.host",{"_index":1923,"title":{},"name":{},"text":{"27":{}},"component":{}}],["client.myworkflow_myfunction.url=http://localhost:8282",{"_index":2262,"title":{},"name":{},"text":{"34":{}},"component":{}}],["client.oauth_exampl",{"_index":2115,"title":{},"name":{},"text":{"32":{}},"component":{}}],["client.oauth_example.auth",{"_index":2103,"title":{},"name":{},"text":{"32":{}},"component":{}}],["client.oauth_example.cli",{"_index":2109,"title":{},"name":{},"text":{"32":{}},"component":{}}],["client.oauth_example.credentials.cli",{"_index":2112,"title":{},"name":{},"text":{"32":{}},"component":{}}],["client.oauth_example.discoveri",{"_index":2107,"title":{},"name":{},"text":{"32":{}},"component":{}}],["client.oauth_example.grant.type=cli",{"_index":2111,"title":{},"name":{},"text":{"32":{}},"component":{}}],["client.oauth_example.token",{"_index":2105,"title":{},"name":{},"text":{"32":{}},"component":{}}],["client.password",{"_index":1929,"title":{},"name":{},"text":{"27":{}},"component":{}}],["client.remotecatalog.url=http://localhost:8282",{"_index":2277,"title":{},"name":{},"text":{"34":{}},"component":{}}],["client.restcountries_json.url",{"_index":2648,"title":{},"name":{},"text":{"43":{}},"component":{}}],["client.sasl",{"_index":1926,"title":{},"name":{},"text":{"27":{}},"component":{}}],["client.stock",{"_index":2267,"title":{},"name":{},"text":{"34":{}},"component":{}}],["client.stock_portfolio_svc_yaml.url=http://localhost:8282",{"_index":2254,"title":{},"name":{},"text":{"34":{}},"component":{}}],["client.stock_svc_yaml.url=http://localhost:8181",{"_index":2303,"title":{},"name":{},"text":{"34":{}},"component":{}}],["client.stock_svc_yaml.url=http://localhost:8383",{"_index":2301,"title":{},"name":{},"text":{"34":{}},"component":{}}],["client.subtraction_yaml.url=${subtraction_url:http://myserver.com",{"_index":2423,"title":{},"name":{},"text":{"36":{}},"component":{}}],["client.subtraction_yaml.url=http://myserver.com",{"_index":2420,"title":{},"name":{},"text":{"36":{}},"component":{}}],["client.us",{"_index":1924,"title":{},"name":{},"text":{"27":{}},"component":{}}],["client.usernam",{"_index":1928,"title":{},"name":{},"text":{"27":{}},"component":{}}],["clientcredenti",{"_index":2093,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["clone",{"_index":1571,"title":{},"name":{},"text":{"21":{},"30":{},"33":{},"46":{},"55":{},"67":{}},"component":{}}],["close",{"_index":2801,"title":{},"name":{},"text":{"46":{},"66":{},"70":{}},"component":{}}],["cloud",{"_index":13,"title":{"3":{},"1-9":{},"64-7":{},"65-2":{}},"name":{},"text":{"1":{},"4":{},"6":{},"10":{},"14":{},"27":{},"28":{},"37":{},"46":{},"64":{},"65":{},"73":{}},"component":{}}],["cloudev",{"_index":30,"title":{"42":{},"6-16":{},"24-1":{}},"name":{"42":{}},"text":{"1":{},"5":{},"6":{},"8":{},"10":{},"12":{},"14":{},"17":{},"18":{},"19":{},"20":{},"21":{},"24":{},"37":{},"38":{},"42":{}},"component":{}}],["cloudeventbuild",{"_index":2438,"title":{},"name":{},"text":{"37":{}},"component":{}}],["cloudeventbuilder.v1",{"_index":2440,"title":{},"name":{},"text":{"37":{}},"component":{}}],["cloudeventdata",{"_index":1055,"title":{},"name":{},"text":{"12":{}},"component":{}}],["cloudeventdata.getnode().get(\"move\").astext",{"_index":1058,"title":{},"name":{},"text":{"12":{}},"component":{}}],["cloudeventutils.decode(message.getpayload",{"_index":1053,"title":{},"name":{},"text":{"12":{}},"component":{}}],["clue",{"_index":2967,"title":{},"name":{},"text":{"49":{}},"component":{}}],["cluster",{"_index":277,"title":{},"name":{},"text":{"3":{},"6":{},"17":{},"27":{},"28":{},"34":{},"36":{},"41":{},"46":{},"47":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["clusterip",{"_index":1312,"title":{},"name":{},"text":{"16":{},"57":{}},"component":{}}],["clusterrol",{"_index":3301,"title":{},"name":{},"text":{"60":{}},"component":{}}],["cm",{"_index":2928,"title":{},"name":{},"text":{"48":{},"49":{}},"component":{}}],["cm/sonataflow",{"_index":2897,"title":{},"name":{},"text":{"47":{}},"component":{}}],["cncf",{"_index":75,"title":{"51-2":{}},"name":{"4":{}},"text":{"1":{},"4":{},"6":{},"21":{},"22":{},"36":{},"49":{},"71":{},"72":{},"73":{}},"component":{}}],["code",{"_index":102,"title":{"73":{},"73-1":{},"73-3":{},"73-5":{}},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"11":{},"21":{},"22":{},"26":{},"33":{},"35":{},"36":{},"38":{},"49":{},"63":{},"64":{},"65":{},"71":{},"72":{},"73":{}},"component":{}}],["code\":\"org.kie.kogito.serviceexcept",{"_index":2696,"title":{},"name":{},"text":{"45":{}},"component":{}}],["cogwheel",{"_index":3355,"title":{},"name":{},"text":{"67":{},"68":{},"70":{}},"component":{}}],["collect",{"_index":580,"title":{},"name":{},"text":{"6":{},"15":{},"27":{},"46":{}},"component":{}}],["colon",{"_index":997,"title":{},"name":{},"text":{"11":{}},"component":{}}],["column",{"_index":1825,"title":{},"name":{},"text":{"26":{},"62":{},"65":{}},"component":{}}],["columngroup",{"_index":1836,"title":{},"name":{},"text":{"26":{}},"component":{}}],["com.acme.myinterfaceorclass",{"_index":539,"title":{},"name":{},"text":{"6":{}},"component":{}}],["com.apple.quarantin",{"_index":3372,"title":{},"name":{},"text":{"68":{}},"component":{}}],["com.fasterxml.jackson.databind.jsonnod",{"_index":2633,"title":{},"name":{},"text":{"43":{}},"component":{}}],["com.fasterxml.jackson.databind.objectmapp",{"_index":2634,"title":{},"name":{},"text":{"43":{}},"component":{}}],["com.github.pull_request.open",{"_index":653,"title":{},"name":{},"text":{"6":{}},"component":{}}],["com.github.tomakehurst",{"_index":2565,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["com.github.tomakehurst.wiremock.client.wiremock.arespons",{"_index":2641,"title":{},"name":{},"text":{"43":{}},"component":{}}],["com.github.tomakehurst.wiremock.client.wiremock.get",{"_index":2642,"title":{},"name":{},"text":{"43":{}},"component":{}}],["com.github.tomakehurst.wiremock.client.wiremock.urlequalto",{"_index":2643,"title":{},"name":{},"text":{"43":{}},"component":{}}],["com.github.tomakehurst.wiremock.core.wiremockconfigur",{"_index":2636,"title":{},"name":{},"text":{"43":{}},"component":{}}],["com.github.tomakehurst.wiremock.wiremockserv",{"_index":2635,"title":{},"name":{},"text":{"43":{}},"component":{}}],["com.google.code.gson:gson",{"_index":229,"title":{},"name":{},"text":{"2":{}},"component":{}}],["com.networknt.schema.typevalid",{"_index":233,"title":{},"name":{},"text":{"2":{}},"component":{}}],["combin",{"_index":799,"title":{},"name":{},"text":{"8":{},"14":{},"27":{},"28":{},"41":{}},"component":{}}],["come",{"_index":1133,"title":{},"name":{},"text":{"14":{},"55":{},"59":{},"63":{}},"component":{}}],["comexampleextension1",{"_index":661,"title":{},"name":{},"text":{"6":{}},"component":{}}],["comexampleothervalu",{"_index":662,"title":{},"name":{},"text":{"6":{}},"component":{}}],["comma",{"_index":1947,"title":{},"name":{},"text":{"27":{},"41":{}},"component":{}}],["command",{"_index":1091,"title":{"73-3":{}},"name":{},"text":{"13":{},"17":{},"21":{},"22":{},"24":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"38":{},"41":{},"42":{},"46":{},"47":{},"49":{},"50":{},"54":{},"55":{},"57":{},"58":{},"59":{},"63":{},"68":{},"73":{}},"component":{}}],["commerc",{"_index":2671,"title":{},"name":{},"text":{"45":{}},"component":{}}],["commit",{"_index":3354,"title":{},"name":{},"text":{"67":{},"71":{}},"component":{}}],["common",{"_index":415,"title":{},"name":{},"text":{"5":{},"16":{},"27":{},"32":{}},"component":{}}],["commonli",{"_index":413,"title":{},"name":{},"text":{"5":{},"16":{},"30":{}},"component":{}}],["commun",{"_index":1115,"title":{"14-11":{}},"name":{},"text":{"14":{},"15":{},"16":{},"27":{},"28":{},"31":{},"45":{},"46":{},"49":{},"50":{},"60":{}},"component":{}}],["compani",{"_index":3053,"title":{},"name":{},"text":{"53":{}},"component":{}}],["compat",{"_index":2898,"title":{},"name":{},"text":{"47":{}},"component":{}}],["compens",{"_index":324,"title":{"4-9":{}},"name":{},"text":{"4":{},"45":{}},"component":{}}],["compensatedbi",{"_index":2693,"title":{},"name":{},"text":{"45":{}},"component":{}}],["compensatedby\":\"cancelpay",{"_index":2688,"title":{},"name":{},"text":{"45":{}},"component":{}}],["compil",{"_index":242,"title":{},"name":{},"text":{"2":{},"21":{},"35":{}},"component":{}}],["complet",{"_index":855,"title":{"73-6":{}},"name":{},"text":{"9":{},"12":{},"13":{},"21":{},"25":{},"26":{},"30":{},"32":{},"37":{},"38":{},"41":{},"42":{},"45":{},"54":{},"65":{},"66":{},"70":{},"72":{},"73":{}},"component":{}}],["completiontyp",{"_index":1086,"title":{},"name":{},"text":{"13":{}},"component":{}}],["complex",{"_index":382,"title":{},"name":{},"text":{"4":{},"10":{},"23":{},"41":{},"46":{},"49":{}},"component":{}}],["compliant",{"_index":339,"title":{},"name":{},"text":{"4":{},"19":{}},"component":{}}],["compon",{"_index":791,"title":{},"name":{},"text":{"7":{},"17":{},"23":{},"26":{},"32":{},"33":{},"36":{},"42":{}},"component":{}}],["components/messages/messag",{"_index":1556,"title":{},"name":{},"text":{"20":{}},"component":{}}],["components/schemas/exchangerateresult",{"_index":2183,"title":{},"name":{},"text":{"33":{}},"component":{}}],["components/schemas/multiplicationoper",{"_index":2404,"title":{},"name":{},"text":{"36":{}},"component":{}}],["compos",{"_index":185,"title":{},"name":{},"text":{"2":{},"11":{},"16":{},"32":{},"33":{},"35":{},"36":{},"41":{}},"component":{}}],["composit",{"_index":305,"title":{},"name":{},"text":{"3":{},"27":{}},"component":{}}],["comprehend",{"_index":3344,"title":{},"name":{},"text":{"66":{}},"component":{}}],["comprehens",{"_index":2971,"title":{},"name":{},"text":{"49":{}},"component":{}}],["comput",{"_index":330,"title":{},"name":{},"text":{"4":{},"6":{},"34":{},"36":{},"67":{}},"component":{}}],["computeprofit",{"_index":2296,"title":{},"name":{},"text":{"34":{}},"component":{}}],["concata",{"_index":1075,"title":{},"name":{},"text":{"13":{}},"component":{}}],["concatb",{"_index":1077,"title":{},"name":{},"text":{"13":{}},"component":{}}],["concatc",{"_index":1079,"title":{},"name":{},"text":{"13":{}},"component":{}}],["concaten",{"_index":1065,"title":{},"name":{},"text":{"13":{}},"component":{}}],["concept",{"_index":3,"title":{"14":{},"1-2":{}},"name":{"14":{},"27":{}},"text":{"1":{},"15":{},"16":{},"35":{},"49":{}},"component":{}}],["concern",{"_index":3044,"title":{},"name":{},"text":{"53":{}},"component":{}}],["concurr",{"_index":2013,"title":{},"name":{},"text":{"30":{}},"component":{}}],["condit",{"_index":217,"title":{"54":{},"10-1":{},"54-2":{},"54-3":{}},"name":{"54":{}},"text":{"2":{},"3":{},"6":{},"9":{},"10":{},"16":{},"24":{},"33":{},"34":{},"47":{},"49":{},"54":{},"57":{},"58":{},"59":{}},"component":{}}],["conf/flyway.conf",{"_index":2025,"title":{},"name":{},"text":{"31":{}},"component":{}}],["config",{"_index":2018,"title":{"31-2":{}},"name":{},"text":{"34":{},"43":{},"47":{},"52":{},"57":{},"58":{}},"component":{}}],["config.nam",{"_index":2300,"title":{},"name":{},"text":{"34":{}},"component":{}}],["config:\\n",{"_index":2822,"title":{},"name":{},"text":{"47":{}},"component":{}}],["configmap",{"_index":2279,"title":{"53-1":{}},"name":{},"text":{"34":{},"47":{},"48":{},"49":{},"53":{}},"component":{}}],["configsourc",{"_index":2278,"title":{},"name":{},"text":{"34":{}},"component":{}}],["configur",{"_index":84,"title":{"5":{},"34":{},"48":{},"6-17":{},"14-11":{},"16-7":{},"17-1":{},"17-2":{},"18-1":{},"27-7":{},"30-1":{},"31-6":{},"33-2":{},"34-3":{},"36-5":{},"37-2":{},"47-1":{},"47-8":{},"48-1":{},"49-11":{},"60-2":{}},"name":{"5":{},"34":{},"48":{}},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"43":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"64":{},"65":{},"66":{},"67":{},"70":{},"73":{}},"component":{}}],["configuration.html#nw",{"_index":2916,"title":{},"name":{},"text":{"47":{}},"component":{}}],["configurewiremockserv",{"_index":2646,"title":{},"name":{},"text":{"43":{}},"component":{}}],["confirm",{"_index":2674,"title":{},"name":{},"text":{"45":{},"66":{}},"component":{}}],["conflict",{"_index":2620,"title":{},"name":{},"text":{"43":{},"67":{}},"component":{}}],["conform",{"_index":1383,"title":{},"name":{},"text":{"17":{}},"component":{}}],["connect",{"_index":441,"title":{"68-2":{}},"name":{},"text":{"5":{},"9":{},"14":{},"15":{},"16":{},"17":{},"26":{},"27":{},"30":{},"32":{},"33":{},"42":{},"68":{},"70":{},"73":{}},"component":{}}],["connect/auth",{"_index":2186,"title":{},"name":{},"text":{"33":{}},"component":{}}],["connect/token",{"_index":2187,"title":{},"name":{},"text":{"33":{}},"component":{}}],["connector",{"_index":1263,"title":{},"name":{},"text":{"14":{},"16":{},"18":{}},"component":{}}],["consequ",{"_index":1024,"title":{},"name":{},"text":{"12":{}},"component":{}}],["consid",{"_index":525,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"11":{},"27":{},"30":{},"45":{},"60":{},"70":{}},"component":{}}],["consider",{"_index":1973,"title":{},"name":{},"text":{"28":{}},"component":{}}],["consist",{"_index":684,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"17":{},"19":{},"35":{},"36":{},"37":{},"45":{},"65":{}},"component":{}}],["consol",{"_index":207,"title":{},"name":{},"text":{"2":{},"11":{},"16":{},"23":{},"45":{},"58":{},"63":{},"68":{},"70":{},"73":{}},"component":{}}],["constant",{"_index":325,"title":{"4-10":{}},"name":{},"text":{"4":{},"10":{}},"component":{}}],["constraint",{"_index":600,"title":{},"name":{},"text":{"6":{},"47":{},"49":{}},"component":{}}],["construct",{"_index":972,"title":{},"name":{},"text":{"11":{}},"component":{}}],["consult",{"_index":3065,"title":{},"name":{},"text":{"54":{}},"component":{}}],["consum",{"_index":34,"title":{"17":{},"18":{},"20-1":{},"25-3":{},"25-4":{}},"name":{"17":{},"18":{}},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"25":{},"26":{},"28":{},"37":{},"42":{},"60":{},"65":{}},"component":{}}],["consumeev",{"_index":1558,"title":{},"name":{},"text":{"20":{}},"component":{}}],["consumerwait",{"_index":1557,"title":{},"name":{},"text":{"20":{}},"component":{}}],["consumes(mediatype.application_json",{"_index":2434,"title":{},"name":{},"text":{"37":{}},"component":{}}],["consumewait",{"_index":1554,"title":{},"name":{},"text":{"20":{}},"component":{}}],["consumpt",{"_index":1136,"title":{"25-2":{}},"name":{},"text":{"14":{},"17":{}},"component":{}}],["contact",{"_index":2251,"title":{},"name":{},"text":{"33":{}},"component":{}}],["contain",{"_index":268,"title":{"47-7":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"45":{},"46":{},"47":{},"49":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{}},"component":{}}],["container_nam",{"_index":1285,"title":{},"name":{},"text":{"16":{}},"component":{}}],["containerconcurr",{"_index":3191,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["containercr",{"_index":2994,"title":{},"name":{},"text":{"50":{}},"component":{}}],["containerport",{"_index":1319,"title":{},"name":{},"text":{"16":{},"27":{},"57":{},"58":{},"59":{}},"component":{}}],["contains($l[1",{"_index":1813,"title":{},"name":{},"text":{"26":{}},"component":{}}],["containsal",{"_index":1161,"title":{},"name":{},"text":{"14":{}},"component":{}}],["containsani",{"_index":1162,"title":{},"name":{},"text":{"14":{}},"component":{}}],["content",{"_index":568,"title":{},"name":{},"text":{"6":{},"10":{},"11":{},"13":{},"14":{},"17":{},"21":{},"24":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"42":{},"45":{},"47":{},"49":{},"53":{},"55":{},"57":{},"58":{},"59":{},"67":{},"68":{},"70":{}},"component":{}}],["contenttype(contenttype.json",{"_index":1987,"title":{},"name":{},"text":{"29":{},"38":{}},"component":{}}],["contenttype(mediatype.application_json",{"_index":2589,"title":{},"name":{},"text":{"42":{}},"component":{}}],["context",{"_index":512,"title":{"6-6":{}},"name":{},"text":{"6":{},"19":{},"21":{},"23":{},"27":{},"38":{},"47":{},"53":{},"57":{},"58":{},"59":{},"60":{},"66":{},"72":{},"73":{}},"component":{}}],["context/namespac",{"_index":3085,"title":{},"name":{},"text":{"55":{}},"component":{}}],["contextattributenam",{"_index":1492,"title":{},"name":{},"text":{"19":{}},"component":{}}],["contextattributevalu",{"_index":1493,"title":{},"name":{},"text":{"19":{}},"component":{}}],["contextu",{"_index":582,"title":{},"name":{},"text":{"6":{}},"component":{}}],["continu",{"_index":723,"title":{},"name":{},"text":{"6":{},"9":{},"19":{},"27":{},"45":{},"46":{}},"component":{}}],["contrast",{"_index":2428,"title":{},"name":{},"text":{"37":{}},"component":{}}],["control",{"_index":162,"title":{},"name":{},"text":{"1":{},"6":{},"9":{},"12":{},"27":{},"30":{},"37":{},"45":{},"47":{},"50":{},"53":{},"57":{},"71":{}},"component":{}}],["convent",{"_index":1884,"title":{},"name":{},"text":{"27":{},"32":{}},"component":{}}],["converg",{"_index":286,"title":{},"name":{},"text":{"3":{}},"component":{}}],["convers",{"_index":931,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["convert",{"_index":576,"title":{},"name":{},"text":{"6":{},"10":{},"27":{}},"component":{}}],["cooki",{"_index":2090,"title":{},"name":{},"text":{"32":{}},"component":{}}],["coordin",{"_index":629,"title":{},"name":{},"text":{"6":{},"10":{},"24":{},"45":{}},"component":{}}],["copi",{"_index":546,"title":{},"name":{},"text":{"6":{},"10":{},"21":{},"26":{},"35":{},"36":{},"41":{},"47":{},"49":{},"67":{},"68":{},"70":{}},"component":{}}],["core",{"_index":2,"title":{"14":{},"1-2":{}},"name":{"14":{},"27":{}},"text":{"1":{},"14":{},"15":{},"16":{},"36":{},"45":{},"50":{},"70":{}},"component":{}}],["core/custom",{"_index":1758,"title":{},"name":{},"text":{"24":{}},"component":{}}],["corner",{"_index":3356,"title":{},"name":{},"text":{"67":{},"68":{},"70":{},"71":{}},"component":{}}],["correct",{"_index":772,"title":{},"name":{},"text":{"7":{},"17":{},"31":{},"49":{},"50":{},"57":{},"58":{},"59":{},"68":{}},"component":{}}],["correctli",{"_index":1407,"title":{},"name":{},"text":{"17":{},"42":{},"49":{},"50":{},"57":{},"58":{},"59":{},"66":{}},"component":{}}],["correl",{"_index":117,"title":{"19":{},"19-1":{}},"name":{"19":{}},"text":{"1":{},"4":{},"8":{},"12":{},"17":{},"18":{},"19":{},"37":{}},"component":{}}],["correspond",{"_index":578,"title":{},"name":{},"text":{"6":{},"27":{},"28":{},"35":{},"46":{},"69":{}},"component":{}}],["count",{"_index":1851,"title":{},"name":{},"text":{"26":{}},"component":{}}],["counter",{"_index":1789,"title":{},"name":{},"text":{"25":{}},"component":{}}],["countri",{"_index":2610,"title":{},"name":{},"text":{"42":{}},"component":{}}],["countryserviceworkflowtest",{"_index":2656,"title":{},"name":{},"text":{"43":{}},"component":{}}],["cover",{"_index":398,"title":{},"name":{},"text":{"4":{},"8":{},"35":{},"37":{}},"component":{}}],["cpu",{"_index":2867,"title":{},"name":{},"text":{"47":{},"50":{},"52":{}},"component":{}}],["cr",{"_index":3000,"title":{},"name":{},"text":{"50":{},"51":{},"53":{}},"component":{}}],["crd",{"_index":3001,"title":{},"name":{},"text":{"50":{}},"component":{}}],["creat",{"_index":58,"title":{"21":{},"13-1":{},"21-2":{},"23-2":{},"41-2":{},"47-6":{},"47-7":{},"53-1":{},"53-2":{},"62-1":{},"62-2":{},"69-1":{},"70-1":{},"70-2":{}},"name":{"21":{}},"text":{"1":{},"4":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{}},"component":{}}],["create_table.sql",{"_index":2043,"title":{},"name":{},"text":{"31":{}},"component":{}}],["creation",{"_index":1303,"title":{},"name":{},"text":{"16":{},"30":{},"32":{},"41":{}},"component":{}}],["credenti",{"_index":2061,"title":{},"name":{},"text":{"32":{},"33":{},"47":{},"57":{},"73":{}},"component":{}}],["credit",{"_index":1391,"title":{},"name":{},"text":{"17":{},"45":{}},"component":{}}],["crucial",{"_index":1046,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["ctrl+c",{"_index":1710,"title":{},"name":{},"text":{"21":{},"33":{}},"component":{}}],["ctrl+shift+m",{"_index":3426,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ctrl+shift+p",{"_index":3406,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ctrl+space",{"_index":3422,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cue",{"_index":2944,"title":{},"name":{},"text":{"49":{}},"component":{}}],["curl",{"_index":1094,"title":{},"name":{},"text":{"13":{},"17":{},"21":{},"24":{},"33":{},"34":{},"35":{},"45":{},"47":{},"49":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["currenc",{"_index":2125,"title":{},"name":{},"text":{"33":{}},"component":{}}],["currency_exchange_workflow",{"_index":2139,"title":{},"name":{},"text":{"33":{}},"component":{}}],["currencyfrom",{"_index":2152,"title":{},"name":{},"text":{"33":{}},"component":{}}],["currencyto",{"_index":2153,"title":{},"name":{},"text":{"33":{}},"component":{}}],["current",{"_index":28,"title":{},"name":{},"text":{"1":{},"6":{},"9":{},"15":{},"19":{},"21":{},"27":{},"30":{},"34":{},"41":{},"47":{},"49":{},"50":{},"51":{},"53":{},"54":{},"57":{},"58":{},"59":{},"60":{},"65":{},"66":{},"67":{},"68":{}},"component":{}}],["currentpric",{"_index":2298,"title":{},"name":{},"text":{"34":{}},"component":{}}],["custom",{"_index":59,"title":{"6":{},"6-1":{},"6-2":{},"6-7":{},"6-11":{},"6-19":{},"6-20":{},"47-3":{},"62-1":{},"62-2":{},"62-3":{}},"name":{"6":{},"24":{},"62":{}},"text":{"1":{},"2":{},"4":{},"6":{},"11":{},"16":{},"17":{},"23":{},"24":{},"26":{},"33":{},"34":{},"45":{},"47":{},"49":{},"50":{},"51":{},"53":{},"60":{},"62":{},"64":{},"71":{}},"component":{}}],["custom`workitemhandl",{"_index":765,"title":{},"name":{},"text":{"6":{}},"component":{}}],["customer_nam",{"_index":640,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cycl",{"_index":304,"title":{"42-3":{}},"name":{},"text":{"3":{},"49":{}},"component":{}}],["d",{"_index":1097,"title":{},"name":{},"text":{"13":{},"17":{},"24":{},"31":{},"33":{},"34":{},"35":{},"47":{},"55":{},"57":{},"58":{},"59":{},"68":{}},"component":{}}],["d297",{"_index":1742,"title":{},"name":{},"text":{"23":{}},"component":{}}],["d43a56b6",{"_index":1154,"title":{},"name":{},"text":{"14":{}},"component":{}}],["d6899b5639aa",{"_index":2714,"title":{},"name":{},"text":{"45":{}},"component":{}}],["d70386b9a375",{"_index":1158,"title":{},"name":{},"text":{"14":{}},"component":{}}],["da82",{"_index":1198,"title":{},"name":{},"text":{"14":{}},"component":{}}],["daef",{"_index":1528,"title":{},"name":{},"text":{"19":{}},"component":{}}],["daemon",{"_index":3102,"title":{},"name":{},"text":{"55":{},"58":{}},"component":{}}],["damag",{"_index":3366,"title":{},"name":{},"text":{"68":{}},"component":{}}],["dash.yaml|yml",{"_index":3383,"title":{},"name":{},"text":{"69":{}},"component":{}}],["dashboard",{"_index":107,"title":{"26":{},"62":{},"26-1":{},"26-2":{},"26-3":{},"62-1":{},"62-2":{},"62-3":{},"62-4":{},"62-5":{}},"name":{"26":{},"62":{}},"text":{"1":{},"2":{},"25":{},"26":{},"58":{},"62":{},"63":{}},"component":{}}],["dashbuild",{"_index":1760,"title":{},"name":{},"text":{"25":{},"26":{},"62":{},"66":{},"69":{}},"component":{}}],["dashoard",{"_index":1841,"title":{},"name":{},"text":{"26":{}},"component":{}}],["data",{"_index":16,"title":{"14":{},"15":{},"16":{},"26":{},"70":{},"1-12":{},"4-4":{},"10-3":{},"14-1":{},"14-2":{},"14-3":{},"14-4":{},"14-5":{},"14-6":{},"14-7":{},"14-9":{},"14-10":{},"14-11":{},"14-14":{},"15-2":{},"16-1":{},"16-2":{},"16-3":{},"16-4":{},"16-5":{},"16-6":{},"16-7":{},"26-3":{},"64-4":{},"70-1":{},"70-2":{}},"name":{"14":{},"15":{},"16":{},"26":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"21":{},"23":{},"26":{},"27":{},"29":{},"30":{},"33":{},"36":{},"45":{},"46":{},"47":{},"48":{},"49":{},"53":{},"64":{},"65":{},"66":{},"69":{},"70":{}},"component":{}}],["data.processinst",{"_index":1848,"title":{},"name":{},"text":{"26":{}},"component":{}}],["data:\"{\\\"expirationtim",{"_index":1230,"title":{},"name":{},"text":{"14":{}},"component":{}}],["databas",{"_index":144,"title":{"31":{}},"name":{},"text":{"1":{},"5":{},"14":{},"15":{},"16":{},"21":{},"27":{},"29":{},"30":{},"31":{},"46":{}},"component":{}}],["database:5432/postgres?currentschema=job",{"_index":1877,"title":{},"name":{},"text":{"27":{}},"component":{}}],["database:5432/postgres?search_path=job",{"_index":1880,"title":{},"name":{},"text":{"27":{}},"component":{}}],["database_nam",{"_index":2042,"title":{},"name":{},"text":{"31":{}},"component":{}}],["datacondit",{"_index":879,"title":{},"name":{},"text":{"9":{},"10":{},"33":{},"47":{},"49":{}},"component":{}}],["datacontenttyp",{"_index":664,"title":{},"name":{},"text":{"6":{},"17":{}},"component":{}}],["dataindex",{"_index":1247,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["datainputschema",{"_index":769,"title":{"7-3":{}},"name":{},"text":{"7":{},"33":{},"53":{}},"component":{}}],["dataonli",{"_index":808,"title":{},"name":{},"text":{"8":{}},"component":{}}],["dataset",{"_index":1807,"title":{},"name":{},"text":{"26":{}},"component":{}}],["datasetlookup",{"_index":1838,"title":{},"name":{},"text":{"26":{}},"component":{}}],["datasourc",{"_index":1346,"title":{},"name":{},"text":{"16":{},"27":{},"30":{}},"component":{}}],["date",{"_index":1169,"title":{},"name":{},"text":{"14":{},"27":{}},"component":{}}],["day",{"_index":837,"title":{},"name":{},"text":{"9":{}},"component":{}}],["ddebug=fals",{"_index":2304,"title":{},"name":{},"text":{"34":{}},"component":{}}],["ddl",{"_index":1902,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{}}],["debug",{"_index":491,"title":{},"name":{"39":{}},"text":{"5":{},"6":{},"23":{},"27":{},"60":{}},"component":{}}],["decid",{"_index":667,"title":{},"name":{},"text":{"6":{},"49":{}},"component":{}}],["decim",{"_index":611,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["decis",{"_index":106,"title":{},"name":{},"text":{"1":{},"9":{},"18":{},"69":{}},"component":{}}],["declar",{"_index":534,"title":{},"name":{},"text":{"6":{},"12":{},"18":{},"19":{},"20":{},"23":{},"24":{},"29":{},"33":{},"35":{},"37":{},"42":{},"45":{}},"component":{}}],["dedic",{"_index":1116,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{}}],["deeper",{"_index":172,"title":{},"name":{},"text":{"1":{}},"component":{}}],["default",{"_index":243,"title":{"35-1":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"21":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"41":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"67":{},"73":{}},"component":{}}],["default_builder_resource_nam",{"_index":2827,"title":{},"name":{},"text":{"47":{}},"component":{}}],["default_workflow_extens",{"_index":2828,"title":{},"name":{},"text":{"47":{}},"component":{}}],["defaultcondit",{"_index":883,"title":{},"name":{},"text":{"9":{},"33":{},"46":{},"47":{},"49":{}},"component":{}}],["defin",{"_index":94,"title":{"23-3":{},"34-4":{},"34-8":{},"36-3":{}},"name":{"7":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"64":{},"65":{},"73":{}},"component":{}}],["definit",{"_index":91,"title":{"7":{},"64":{},"6-3":{},"6-8":{},"6-12":{},"11-1":{},"17-5":{},"36-1":{},"49-12":{},"64-1":{}},"name":{"64":{}},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"27":{},"28":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"45":{},"46":{},"47":{},"49":{},"50":{},"53":{},"60":{},"63":{},"64":{},"65":{},"73":{}},"component":{}}],["defint",{"_index":811,"title":{},"name":{},"text":{"8":{}},"component":{}}],["deleg",{"_index":1379,"title":{},"name":{},"text":{"17":{},"32":{}},"component":{}}],["delet",{"_index":1931,"title":{},"name":{},"text":{"27":{},"49":{},"50":{},"53":{}},"component":{}}],["deliv",{"_index":1934,"title":{},"name":{},"text":{"27":{},"45":{}},"component":{}}],["deliveri",{"_index":1857,"title":{},"name":{},"text":{"27":{},"45":{}},"component":{}}],["demo\",node_name=\"2\",process_id=\"foreach\",version=\"1.0.0",{"_index":1796,"title":{},"name":{},"text":{"25":{}},"component":{}}],["demo\",node_name=\"2\",process_id=\"jsongreet\",version=\"1.0.0",{"_index":1792,"title":{},"name":{},"text":{"25":{}},"component":{}}],["demo\",node_name=\"2\",process_id=\"yamlgreet\",version=\"1.0.0",{"_index":1794,"title":{},"name":{},"text":{"25":{}},"component":{}}],["deniedvisa",{"_index":888,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["denot",{"_index":724,"title":{},"name":{},"text":{"6":{}},"component":{}}],["depend",{"_index":54,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"17":{},"18":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"38":{},"41":{},"42":{},"43":{},"46":{},"54":{},"55":{},"57":{},"58":{},"59":{},"63":{},"64":{},"65":{},"66":{},"68":{}},"component":{}}],["depends_on",{"_index":1288,"title":{},"name":{},"text":{"16":{}},"component":{}}],["deploy",{"_index":69,"title":{"47":{},"57":{},"58":{},"59":{},"66":{},"9-6":{},"16-1":{},"16-3":{},"16-4":{},"16-5":{},"41-5":{},"47-11":{},"49-2":{},"57-2":{},"57-3":{},"57-4":{},"57-5":{},"58-2":{},"58-3":{},"58-4":{},"58-5":{},"59-2":{},"59-4":{},"59-5":{},"59-6":{},"66-1":{},"66-2":{}},"name":{"47":{},"57":{},"58":{},"59":{},"66":{}},"text":{"1":{},"3":{},"6":{},"9":{},"14":{},"15":{},"16":{},"17":{},"21":{},"24":{},"27":{},"28":{},"30":{},"36":{},"41":{},"42":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"68":{},"69":{}},"component":{}}],["deployment/sonataflow",{"_index":2999,"title":{},"name":{},"text":{"50":{}},"component":{}}],["deploymentconfig",{"_index":3295,"title":{},"name":{},"text":{"60":{}},"component":{}}],["deploymentconfigs.v1.apps.openshift.io",{"_index":3278,"title":{},"name":{},"text":{"60":{}},"component":{}}],["deploymentfailur",{"_index":3061,"title":{},"name":{},"text":{"54":{}},"component":{}}],["deploymentisunavail",{"_index":3062,"title":{},"name":{},"text":{"54":{}},"component":{}}],["deployments.v1.app",{"_index":3277,"title":{},"name":{},"text":{"60":{}},"component":{}}],["deployments/\\ncopi",{"_index":2853,"title":{},"name":{},"text":{"47":{}},"component":{}}],["deployments/app/\\ncopi",{"_index":2855,"title":{},"name":{},"text":{"47":{}},"component":{}}],["deployments/lib/\\ncopi",{"_index":2851,"title":{},"name":{},"text":{"47":{}},"component":{}}],["deployments/quarkus/\\n\\nexpos",{"_index":2856,"title":{},"name":{},"text":{"47":{}},"component":{}}],["desc",{"_index":1174,"title":{},"name":{},"text":{"14":{}},"component":{}}],["descend",{"_index":572,"title":{},"name":{},"text":{"6":{},"14":{},"26":{}},"component":{}}],["describ",{"_index":328,"title":{},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{},"21":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"67":{},"70":{},"71":{},"73":{}},"component":{}}],["descript",{"_index":237,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"9":{},"11":{},"13":{},"16":{},"17":{},"20":{},"21":{},"23":{},"27":{},"32":{},"33":{},"36":{},"54":{},"70":{},"73":{}},"component":{}}],["descriptor",{"_index":113,"title":{},"name":{},"text":{"1":{},"53":{},"57":{},"58":{},"59":{}},"component":{}}],["desd",{"_index":920,"title":{},"name":{},"text":{"10":{},"35":{},"47":{},"49":{}},"component":{}}],["design",{"_index":796,"title":{},"name":{},"text":{"8":{},"10":{},"15":{},"28":{},"45":{},"46":{},"53":{},"72":{}},"component":{}}],["desir",{"_index":989,"title":{},"name":{},"text":{"11":{},"18":{},"47":{},"49":{},"57":{},"58":{},"59":{}},"component":{}}],["desktop",{"_index":2882,"title":{},"name":{},"text":{"47":{}},"component":{}}],["detail",{"_index":161,"title":{"31-8":{},"62-5":{},"65-1":{}},"name":{},"text":{"1":{},"9":{},"14":{},"15":{},"16":{},"24":{},"30":{},"42":{},"45":{},"57":{},"62":{},"64":{},"65":{}},"component":{}}],["detect",{"_index":1646,"title":{},"name":{},"text":{"21":{}},"component":{}}],["determin",{"_index":977,"title":{},"name":{},"text":{"11":{},"27":{},"33":{},"46":{},"60":{}},"component":{}}],["dev",{"_index":127,"title":{"63":{},"9-7":{},"46-5":{}},"name":{"62":{},"63":{},"64":{},"65":{}},"text":{"1":{},"2":{},"5":{},"9":{},"14":{},"15":{},"16":{},"21":{},"22":{},"29":{},"34":{},"46":{},"48":{},"49":{},"51":{},"53":{},"63":{}},"component":{}}],["dev.loc",{"_index":2543,"title":{},"name":{},"text":{"41":{},"58":{}},"component":{}}],["dev.local/kogito/serverless",{"_index":3230,"title":{},"name":{},"text":{"58":{}},"component":{}}],["dev.local/mi",{"_index":2542,"title":{},"name":{},"text":{"41":{}},"component":{}}],["dev.local/serverless",{"_index":1606,"title":{},"name":{},"text":{"21":{}},"component":{}}],["dev.quarkus.rest",{"_index":2302,"title":{},"name":{},"text":{"34":{}},"component":{}}],["develop",{"_index":296,"title":{"49":{},"14-4":{},"16-6":{},"34-6":{},"49-1":{},"54-2":{}},"name":{"40":{},"49":{}},"text":{"3":{},"5":{},"6":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"22":{},"26":{},"28":{},"34":{},"35":{},"37":{},"41":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"63":{},"66":{},"68":{},"69":{}},"component":{}}],["devmod",{"_index":2949,"title":{},"name":{},"text":{"49":{},"51":{},"52":{}},"component":{}}],["devmode:\\n",{"_index":2960,"title":{},"name":{},"text":{"49":{}},"component":{}}],["devmodebaseimag",{"_index":3036,"title":{},"name":{},"text":{"52":{}},"component":{}}],["devprofil",{"_index":2800,"title":{},"name":{},"text":{"46":{}},"component":{}}],["devui",{"_index":3315,"title":{},"name":{},"text":{"63":{},"64":{},"65":{}},"component":{}}],["dexec.mainclass=\"org.kie.kogito.examples.sw.greeting.greeterservic",{"_index":2355,"title":{},"name":{},"text":{"35":{}},"component":{}}],["dextensions=\"kogito",{"_index":1353,"title":{},"name":{},"text":{"17":{},"21":{},"28":{}},"component":{}}],["dextensions=\"quarku",{"_index":1411,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{}}],["dfd85a369987",{"_index":3113,"title":{},"name":{},"text":{"55":{}},"component":{}}],["diagram",{"_index":1195,"title":{},"name":{},"text":{"14":{},"27":{},"33":{},"46":{},"63":{},"65":{},"72":{},"73":{}},"component":{}}],["dialog",{"_index":3403,"title":{},"name":{},"text":{"73":{}},"component":{}}],["differ",{"_index":168,"title":{"34-3":{},"34-4":{},"34-8":{}},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"18":{},"25":{},"27":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"37":{},"43":{},"46":{},"47":{},"53":{},"57":{},"58":{},"59":{},"60":{},"64":{},"69":{}},"component":{}}],["difficult",{"_index":2283,"title":{},"name":{},"text":{"34":{}},"component":{}}],["digest",{"_index":1916,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dimens",{"_index":1074,"title":{},"name":{},"text":{"13":{}},"component":{}}],["direct",{"_index":591,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"23":{},"28":{}},"component":{}}],["direct:logroutereplacehead",{"_index":1724,"title":{},"name":{},"text":{"23":{}},"component":{}}],["directli",{"_index":49,"title":{},"name":{},"text":{"1":{},"3":{},"15":{},"16":{},"21":{},"25":{},"26":{},"30":{},"47":{},"49":{},"60":{},"71":{}},"component":{}}],["directori",{"_index":263,"title":{},"name":{},"text":{"2":{},"7":{},"13":{},"17":{},"21":{},"23":{},"28":{},"33":{},"34":{},"35":{},"36":{},"38":{},"41":{},"46":{},"53":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["disabl",{"_index":431,"title":{},"name":{},"text":{"5":{},"15":{},"16":{},"25":{},"27":{},"33":{},"60":{},"66":{}},"component":{}}],["discard",{"_index":944,"title":{},"name":{},"text":{"10":{},"12":{}},"component":{}}],["discov",{"_index":1747,"title":{},"name":{},"text":{"24":{},"49":{},"60":{}},"component":{}}],["discoveri",{"_index":319,"title":{"60":{},"60-2":{},"60-3":{},"60-4":{},"60-5":{},"60-6":{}},"name":{"60":{}},"text":{"3":{},"24":{},"33":{},"36":{},"38":{},"60":{}},"component":{}}],["dispatch",{"_index":1371,"title":{},"name":{},"text":{"17":{}},"component":{}}],["display",{"_index":158,"title":{"26":{}},"name":{},"text":{"1":{},"6":{},"10":{},"11":{},"12":{},"21":{},"26":{},"37":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"70":{},"73":{}},"component":{}}],["dist",{"_index":3395,"title":{},"name":{},"text":{"71":{}},"component":{}}],["distinct",{"_index":2843,"title":{},"name":{},"text":{"47":{}},"component":{}}],["distribut",{"_index":1125,"title":{"16-2":{}},"name":{},"text":{"14":{},"15":{},"16":{},"21":{},"45":{},"47":{},"49":{}},"component":{}}],["divid",{"_index":714,"title":{},"name":{},"text":{"6":{}},"component":{}}],["dividend",{"_index":759,"title":{},"name":{},"text":{"6":{}},"component":{}}],["dividend\":\".dividend",{"_index":762,"title":{},"name":{},"text":{"6":{}},"component":{}}],["divis",{"_index":721,"title":{},"name":{},"text":{"6":{}},"component":{}}],["divisor",{"_index":760,"title":{},"name":{},"text":{"6":{}},"component":{}}],["divisor\":\".divisor",{"_index":763,"title":{},"name":{},"text":{"6":{}},"component":{}}],["djava.util.logging.manager=org.jboss.logmanager.logmanager\\\"\\nenv",{"_index":2861,"title":{},"name":{},"text":{"47":{}},"component":{}}],["dmn",{"_index":192,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dmy.sys.prop1=value1",{"_index":1882,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dmy.sys.prop2=value2",{"_index":1883,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dn",{"_index":3147,"title":{},"name":{},"text":{"57":{}},"component":{}}],["dnocod",{"_index":1597,"title":{},"name":{},"text":{"21":{}},"component":{}}],["do",{"_index":2961,"title":{},"name":{},"text":{"49":{},"53":{}},"component":{}}],["docker",{"_index":1284,"title":{},"name":{},"text":{"16":{},"21":{},"27":{},"29":{},"30":{},"33":{},"41":{},"47":{},"50":{},"55":{},"58":{},"59":{}},"component":{}}],["dockerfil",{"_index":212,"title":{"47-3":{}},"name":{},"text":{"2":{},"47":{}},"component":{}}],["document",{"_index":189,"title":{"7-4":{}},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"17":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"47":{},"48":{},"49":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"66":{},"67":{},"70":{},"71":{},"73":{}},"component":{}}],["doe",{"_index":2448,"title":{},"name":{},"text":{"38":{},"49":{}},"component":{}}],["doesn’t",{"_index":267,"title":{},"name":{},"text":{"2":{},"21":{},"38":{},"47":{},"54":{}},"component":{}}],["domain",{"_index":1489,"title":{},"name":{},"text":{"19":{},"33":{},"45":{},"53":{},"57":{},"58":{}},"component":{}}],["domainmap",{"_index":3134,"title":{},"name":{},"text":{"57":{}},"component":{}}],["domest",{"_index":2608,"title":{},"name":{},"text":{"42":{}},"component":{}}],["domesticship",{"_index":2609,"title":{},"name":{},"text":{"42":{}},"component":{}}],["don",{"_index":909,"title":{},"name":{},"text":{"9":{}},"component":{}}],["done",{"_index":1067,"title":{},"name":{},"text":{"13":{},"14":{},"53":{}},"component":{}}],["don’t",{"_index":632,"title":{},"name":{},"text":{"6":{},"27":{},"47":{}},"component":{}}],["dooper",{"_index":2401,"title":{},"name":{},"text":{"36":{}},"component":{}}],["doubl",{"_index":2171,"title":{},"name":{},"text":{"33":{},"47":{}},"component":{}}],["down",{"_index":1962,"title":{},"name":{},"text":{"27":{},"65":{},"70":{}},"component":{}}],["download",{"_index":1801,"title":{},"name":{},"text":{"26":{},"31":{},"35":{},"41":{},"68":{},"71":{},"73":{}},"component":{}}],["dprojectartifactid=serverless",{"_index":1594,"title":{},"name":{},"text":{"21":{}},"component":{}}],["dprojectgroupid=org.acm",{"_index":1593,"title":{},"name":{},"text":{"21":{}},"component":{}}],["dquarkus.contain",{"_index":3080,"title":{},"name":{},"text":{"55":{},"58":{}},"component":{}}],["dquarkus.http.host=0.0.0.0",{"_index":2860,"title":{},"name":{},"text":{"47":{}},"component":{}}],["dquarkus.native.contain",{"_index":3100,"title":{},"name":{},"text":{"55":{}},"component":{}}],["dquarkus.native.remot",{"_index":3103,"title":{},"name":{},"text":{"55":{},"58":{}},"component":{}}],["drag",{"_index":3338,"title":{},"name":{},"text":{"65":{}},"component":{}}],["drawer",{"_index":3390,"title":{},"name":{},"text":{"70":{}},"component":{}}],["driven",{"_index":32,"title":{},"name":{},"text":{"1":{},"19":{},"42":{}},"component":{}}],["driver",{"_index":2989,"title":{},"name":{},"text":{"50":{}},"component":{}}],["drop",{"_index":1474,"title":{},"name":{},"text":{"18":{},"65":{},"70":{}},"component":{}}],["dskiptest",{"_index":3209,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["dsl",{"_index":1716,"title":{"23-3":{}},"name":{},"text":{"23":{}},"component":{}}],["due",{"_index":2525,"title":{},"name":{},"text":{"41":{},"43":{},"57":{},"58":{},"68":{}},"component":{}}],["duplic",{"_index":220,"title":{},"name":{},"text":{"2":{}},"component":{}}],["durat",{"_index":830,"title":{},"name":{},"text":{"9":{},"25":{},"26":{},"46":{}},"component":{}}],["dure",{"_index":689,"title":{"17-4":{}},"name":{},"text":{"6":{},"11":{},"16":{},"17":{},"23":{},"26":{},"30":{},"32":{},"36":{},"41":{},"42":{},"45":{},"46":{},"49":{},"50":{},"53":{},"60":{}},"component":{}}],["dynam",{"_index":2433,"title":{},"name":{},"text":{"37":{},"43":{},"72":{},"73":{}},"component":{}}],["e",{"_index":1044,"title":{},"name":{},"text":{"12":{},"27":{},"38":{},"41":{},"43":{},"45":{}},"component":{}}],["e.g",{"_index":2883,"title":{},"name":{},"text":{"47":{}},"component":{}}],["e0e7708d",{"_index":2232,"title":{},"name":{},"text":{"33":{}},"component":{}}],["e293aa293bf",{"_index":1668,"title":{},"name":{},"text":{"21":{}},"component":{}}],["e6ccbe9c94c3",{"_index":2787,"title":{},"name":{},"text":{"45":{}},"component":{}}],["eaab",{"_index":1183,"title":{},"name":{},"text":{"14":{}},"component":{}}],["each",{"_index":335,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"25":{},"27":{},"28":{},"31":{},"32":{},"34":{},"35":{},"36":{},"37":{},"43":{},"45":{},"46":{},"47":{},"59":{},"65":{},"69":{},"73":{}},"component":{}}],["earli",{"_index":2976,"title":{},"name":{},"text":{"50":{}},"component":{}}],["earlier",{"_index":692,"title":{},"name":{},"text":{"6":{},"59":{}},"component":{}}],["easi",{"_index":3343,"title":{},"name":{},"text":{"66":{}},"component":{}}],["easiest",{"_index":2936,"title":{},"name":{},"text":{"49":{}},"component":{}}],["easili",{"_index":3241,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ecosystem",{"_index":51,"title":{},"name":{},"text":{"1":{},"22":{},"28":{}},"component":{}}],["edit",{"_index":111,"title":{"48-1":{}},"name":{},"text":{"1":{},"21":{},"22":{},"26":{},"31":{},"47":{},"48":{},"49":{},"53":{},"67":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["editor",{"_index":99,"title":{"71":{},"72":{},"73":{},"71-1":{},"71-2":{},"72-1":{},"73-1":{},"73-2":{},"73-4":{}},"name":{"71":{},"72":{},"73":{}},"text":{"1":{},"21":{},"22":{},"23":{},"47":{},"48":{},"49":{},"64":{},"66":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["efafe4dfb3e7",{"_index":1745,"title":{},"name":{},"text":{"23":{}},"component":{}}],["elaps",{"_index":2503,"title":{},"name":{},"text":{"38":{}},"component":{}}],["elect",{"_index":1855,"title":{"27-16":{}},"name":{},"text":{"27":{}},"component":{}}],["element",{"_index":1491,"title":{},"name":{},"text":{"19":{}},"component":{}}],["else’",{"_index":3363,"title":{},"name":{},"text":{"67":{}},"component":{}}],["email",{"_index":1506,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["emb",{"_index":929,"title":{},"name":{},"text":{"10":{}},"component":{}}],["embed",{"_index":906,"title":{"14-14":{},"28-4":{},"46-6":{}},"name":{},"text":{"9":{},"10":{},"11":{},"15":{},"21":{},"27":{},"28":{},"46":{}},"component":{}}],["emitt",{"_index":1467,"title":{},"name":{},"text":{"18":{}},"component":{}}],["empti",{"_index":452,"title":{},"name":{},"text":{"5":{},"12":{},"35":{},"60":{}},"component":{}}],["emul",{"_index":3227,"title":{},"name":{},"text":{"58":{}},"component":{}}],["enabl",{"_index":430,"title":{"23-1":{},"25-1":{},"60-5":{},"73-5":{}},"name":{},"text":{"5":{},"6":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"38":{},"41":{},"42":{},"47":{},"48":{},"51":{},"58":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"73":{}},"component":{}}],["enabled=fals",{"_index":2108,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["encapsul",{"_index":1441,"title":{},"name":{},"text":{"18":{}},"component":{}}],["encod",{"_index":1615,"title":{},"name":{},"text":{"21":{}},"component":{}}],["encount",{"_index":976,"title":{},"name":{},"text":{"11":{},"68":{}},"component":{}}],["end",{"_index":642,"title":{},"name":{},"text":{"6":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"21":{},"23":{},"26":{},"29":{},"33":{},"34":{},"36":{},"37":{},"42":{},"47":{},"49":{},"53":{},"65":{}},"component":{}}],["endpoint",{"_index":196,"title":{"34":{},"14-7":{},"17-3":{},"34-3":{},"36-5":{}},"name":{"34":{}},"text":{"2":{},"5":{},"6":{},"7":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"25":{},"26":{},"32":{},"33":{},"34":{},"36":{},"37":{},"38":{},"42":{},"43":{},"54":{},"60":{},"64":{},"65":{}},"component":{}}],["endsuccess",{"_index":2160,"title":{},"name":{},"text":{"33":{}},"component":{}}],["endwitherror",{"_index":2158,"title":{},"name":{},"text":{"33":{}},"component":{}}],["enforc",{"_index":2527,"title":{},"name":{},"text":{"41":{}},"component":{}}],["engin",{"_index":858,"title":{},"name":{},"text":{"9":{},"11":{},"19":{},"23":{},"30":{},"36":{},"45":{},"48":{},"60":{}},"component":{}}],["english",{"_index":915,"title":{},"name":{},"text":{"10":{},"35":{},"47":{},"49":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["enough",{"_index":1358,"title":{},"name":{},"text":{"17":{}},"component":{}}],["ensur",{"_index":668,"title":{},"name":{},"text":{"6":{},"9":{},"17":{},"25":{},"27":{},"29":{},"31":{},"41":{},"45":{},"49":{},"57":{},"58":{},"59":{},"66":{},"67":{}},"component":{}}],["enter",{"_index":1609,"title":{},"name":{},"text":{"21":{},"35":{},"41":{},"54":{},"57":{},"58":{},"59":{},"62":{},"63":{},"64":{},"65":{},"68":{},"70":{},"73":{}},"component":{}}],["enterpris",{"_index":1652,"title":{},"name":{},"text":{"21":{},"68":{}},"component":{}}],["entir",{"_index":562,"title":{},"name":{},"text":{"6":{},"10":{},"19":{},"45":{},"47":{},"66":{}},"component":{}}],["entiti",{"_index":1443,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["entri",{"_index":2825,"title":{},"name":{},"text":{"47":{},"53":{}},"component":{}}],["entrypoint",{"_index":1128,"title":{},"name":{},"text":{"14":{}},"component":{}}],["enum",{"_index":2326,"title":{"35-1":{}},"name":{},"text":{"73":{}},"component":{}}],["enumer",{"_index":469,"title":{},"name":{},"text":{"5":{},"35":{}},"component":{}}],["env",{"_index":1321,"title":{},"name":{},"text":{"16":{},"27":{},"58":{}},"component":{}}],["environ",{"_index":902,"title":{"27-4":{},"27-5":{},"34-3":{},"34-4":{},"34-8":{}},"name":{},"text":{"9":{},"16":{},"17":{},"22":{},"27":{},"28":{},"32":{},"33":{},"34":{},"36":{},"37":{},"41":{},"43":{},"46":{},"49":{},"50":{},"58":{},"59":{},"65":{},"66":{}},"component":{}}],["ephemer",{"_index":1344,"title":{"27-10":{}},"name":{},"text":{"16":{},"27":{}},"component":{}}],["ephemeral:1.42.0.fin",{"_index":503,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["equal",{"_index":940,"title":{},"name":{},"text":{"10":{},"14":{}},"component":{}}],["equals_to",{"_index":1834,"title":{},"name":{},"text":{"26":{}},"component":{}}],["equalto(\"hello",{"_index":2471,"title":{},"name":{},"text":{"38":{}},"component":{}}],["error",{"_index":82,"title":{"11":{},"4-6":{},"11-1":{},"11-2":{}},"name":{"11":{}},"text":{"1":{},"4":{},"6":{},"7":{},"11":{},"18":{},"26":{},"33":{},"38":{},"45":{},"49":{},"58":{},"59":{},"64":{},"65":{},"68":{},"72":{},"73":{}},"component":{}}],["error.messag",{"_index":1849,"title":{},"name":{},"text":{"26":{}},"component":{}}],["errorref",{"_index":873,"title":{},"name":{},"text":{"9":{},"11":{},"33":{},"46":{}},"component":{}}],["errorref\":\"process",{"_index":2689,"title":{},"name":{},"text":{"45":{}},"component":{}}],["establish",{"_index":1936,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{}}],["etc",{"_index":612,"title":{},"name":{},"text":{"6":{},"9":{},"23":{},"27":{},"28":{},"33":{},"53":{}},"component":{}}],["eur",{"_index":2220,"title":{},"name":{},"text":{"33":{}},"component":{}}],["eval",{"_index":3213,"title":{},"name":{},"text":{"58":{}},"component":{}}],["evalu",{"_index":365,"title":{},"name":{},"text":{"4":{},"10":{},"19":{},"23":{},"33":{},"42":{},"51":{}},"component":{}}],["even",{"_index":48,"title":{},"name":{},"text":{"1":{},"11":{},"18":{},"30":{},"49":{}},"component":{}}],["event",{"_index":7,"title":{"8":{},"17":{},"18":{},"19":{},"1-5":{},"4-3":{},"8-1":{},"9-2":{},"9-5":{},"14-12":{},"14-13":{},"16-4":{},"16-5":{},"17-1":{},"17-2":{},"17-3":{},"17-5":{},"19-1":{},"20-1":{},"20-2":{},"27-12":{},"27-13":{},"27-14":{},"28-1":{},"64-7":{},"65-2":{}},"name":{"8":{},"17":{},"18":{},"19":{}},"text":{"1":{},"2":{},"3":{},"4":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"27":{},"28":{},"30":{},"37":{},"41":{},"42":{},"45":{},"46":{},"51":{},"57":{},"58":{},"59":{},"64":{},"65":{}},"component":{}}],["event1",{"_index":892,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["event2",{"_index":898,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["event_state_timeout",{"_index":2791,"title":{"46-3":{}},"name":{},"text":{"46":{}},"component":{}}],["eventbodi",{"_index":1032,"title":{},"name":{},"text":{"12":{}},"component":{}}],["eventbody.put(\"dummyeventvari",{"_index":1035,"title":{},"name":{},"text":{"12":{}},"component":{}}],["eventbody.put(\"result",{"_index":1034,"title":{},"name":{},"text":{"12":{}},"component":{}}],["eventcondit",{"_index":880,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["eventdata",{"_index":2795,"title":{},"name":{},"text":{"46":{}},"component":{}}],["eventdatafilt",{"_index":893,"title":{},"name":{},"text":{"9":{},"10":{},"12":{},"46":{}},"component":{}}],["eventing.knative.dev/v1",{"_index":1249,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"27":{}},"component":{}}],["eventing:1.42.0.fin",{"_index":3179,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["eventinput",{"_index":2436,"title":{},"name":{},"text":{"37":{}},"component":{}}],["eventinput.getprocessinstanceid",{"_index":2441,"title":{},"name":{},"text":{"37":{}},"component":{}}],["eventref",{"_index":803,"title":{},"name":{},"text":{"8":{},"9":{},"10":{},"12":{},"19":{},"37":{},"46":{}},"component":{}}],["eventrefdefinit",{"_index":373,"title":{},"name":{},"text":{"4":{}},"component":{}}],["events.connector=quarku",{"_index":1259,"title":{},"name":{},"text":{"14":{},"16":{},"28":{}},"component":{}}],["events.connector=smallry",{"_index":1264,"title":{},"name":{},"text":{"14":{},"16":{},"28":{}},"component":{}}],["events.method=post",{"_index":1261,"title":{},"name":{},"text":{"14":{},"16":{},"28":{}},"component":{}}],["events.top",{"_index":1957,"title":{},"name":{},"text":{"27":{}},"component":{}}],["events.topic=kogito",{"_index":1265,"title":{},"name":{},"text":{"14":{},"16":{},"28":{}},"component":{}}],["events.url=${k_sink",{"_index":1260,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["events.url=${k_sink:http://localhost:8280/v2/jobs/ev",{"_index":1968,"title":{},"name":{},"text":{"28":{}},"component":{}}],["events.value.serializer=org.apache.kafka.common.serialization.stringseri",{"_index":1266,"title":{},"name":{},"text":{"14":{},"16":{},"28":{}},"component":{}}],["events_support",{"_index":1944,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eventtimeout",{"_index":862,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["eventu",{"_index":285,"title":{},"name":{},"text":{"3":{},"27":{},"37":{}},"component":{}}],["everit",{"_index":249,"title":{},"name":{},"text":{"2":{}},"component":{}}],["everyth",{"_index":2894,"title":{},"name":{},"text":{"47":{},"49":{},"50":{},"59":{}},"component":{}}],["everytim",{"_index":493,"title":{},"name":{},"text":{"5":{}},"component":{}}],["evolv",{"_index":275,"title":{},"name":{},"text":{"3":{},"49":{}},"component":{}}],["exactli",{"_index":838,"title":{},"name":{},"text":{"9":{}},"component":{}}],["exampl",{"_index":175,"title":{"45":{},"6-20":{},"7-3":{},"8-1":{},"10-1":{},"10-2":{},"10-3":{},"11-2":{},"12-1":{},"16-4":{},"16-5":{},"17-5":{},"18-2":{},"19-1":{},"23-4":{},"25-5":{},"32-2":{},"32-3":{},"32-4":{},"32-5":{},"32-6":{},"33-1":{},"33-2":{},"33-3":{},"37-1":{},"42-3":{},"45-2":{},"45-3":{},"46-9":{},"55-1":{},"60-4":{}},"name":{"46":{}},"text":{"1":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"70":{},"73":{}},"component":{}}],["example.json",{"_index":2055,"title":{},"name":{},"text":{"32":{}},"component":{}}],["examples.git",{"_index":2004,"title":{},"name":{},"text":{"30":{},"33":{},"46":{},"55":{}},"component":{}}],["examples/serverless",{"_index":1572,"title":{},"name":{},"text":{"21":{},"33":{},"38":{},"46":{},"55":{}},"component":{}}],["exceed",{"_index":891,"title":{},"name":{},"text":{"9":{}},"component":{}}],["except",{"_index":371,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"45":{},"60":{}},"component":{}}],["excerpt",{"_index":2410,"title":{},"name":{},"text":{"36":{},"47":{}},"component":{}}],["exchang",{"_index":2126,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exchanged",{"_index":2154,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exchanger",{"_index":2148,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exchangerateresult",{"_index":2184,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exchangeworkflowhelp",{"_index":2164,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exchangeworkflowhelper.java",{"_index":2165,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exclus",{"_index":349,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"32":{},"46":{}},"component":{}}],["exec:java",{"_index":2354,"title":{},"name":{},"text":{"35":{}},"component":{}}],["execut",{"_index":9,"title":{"1-7":{},"27-3":{},"31-4":{},"42-3":{},"46-4":{}},"name":{"39":{}},"text":{"1":{},"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"19":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"35":{},"38":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"49":{},"55":{},"57":{},"58":{},"59":{},"63":{},"65":{},"68":{},"73":{}},"component":{}}],["executeworkitem",{"_index":706,"title":{},"name":{},"text":{"6":{}},"component":{}}],["executioncount",{"_index":1151,"title":{},"name":{},"text":{"14":{}},"component":{}}],["executionstatu",{"_index":2156,"title":{},"name":{},"text":{"33":{}},"component":{}}],["executionstatusmessag",{"_index":2161,"title":{},"name":{},"text":{"33":{}},"component":{}}],["executor",{"_index":2676,"title":{},"name":{},"text":{"45":{}},"component":{}}],["exemplifi",{"_index":588,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["exhaust",{"_index":980,"title":{},"name":{},"text":{"11":{}},"component":{}}],["exist",{"_index":146,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"10":{},"14":{},"16":{},"18":{},"31":{},"34":{},"35":{},"43":{},"46":{},"60":{},"67":{},"73":{}},"component":{}}],["exitmessag",{"_index":895,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["expect",{"_index":202,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"11":{},"12":{},"14":{},"16":{},"23":{},"29":{},"35":{},"38":{},"42":{},"55":{},"60":{}},"component":{}}],["experi",{"_index":295,"title":{},"name":{},"text":{"3":{},"22":{},"72":{},"73":{}},"component":{}}],["expir",{"_index":882,"title":{},"name":{},"text":{"9":{},"29":{},"42":{}},"component":{}}],["explain",{"_index":1460,"title":{},"name":{},"text":{"18":{},"49":{},"59":{}},"component":{}}],["explicitli",{"_index":1135,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{}}],["explor",{"_index":173,"title":{},"name":{},"text":{"1":{},"16":{},"65":{}},"component":{}}],["export",{"_index":2322,"title":{},"name":{},"text":{"34":{}},"component":{}}],["expos",{"_index":155,"title":{"25":{},"27-4":{}},"name":{"25":{}},"text":{"1":{},"14":{},"15":{},"25":{},"27":{},"33":{},"36":{},"38":{},"47":{},"49":{},"59":{},"60":{},"65":{}},"component":{}}],["exposur",{"_index":1140,"title":{},"name":{},"text":{"14":{}},"component":{}}],["express",{"_index":80,"title":{"10":{},"4-5":{},"10-1":{},"10-2":{},"10-3":{}},"name":{"10":{}},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"11":{},"13":{},"23":{},"26":{},"29":{},"33":{},"36":{},"42":{},"60":{}},"component":{}}],["expressionlang",{"_index":387,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["ext",{"_index":3180,"title":{},"name":{},"text":{"57":{},"58":{},"59":{},"63":{}},"component":{}}],["extend",{"_index":255,"title":{"68-1":{}},"name":{},"text":{"2":{},"6":{},"30":{},"46":{},"68":{}},"component":{}}],["extens",{"_index":103,"title":{"15":{},"28":{},"62":{},"63":{},"65":{},"71":{},"73":{},"14-5":{},"14-14":{},"15-2":{},"63-1":{},"71-1":{},"71-2":{},"73-1":{},"73-3":{},"73-5":{}},"name":{"15":{},"28":{},"71":{},"73":{}},"text":{"1":{},"6":{},"7":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"27":{},"28":{},"29":{},"32":{},"34":{},"36":{},"37":{},"38":{},"41":{},"55":{},"57":{},"58":{},"59":{},"63":{},"64":{},"65":{},"71":{},"72":{},"73":{}},"component":{}}],["extension.kogito.swf.silentlygeneratesvg",{"_index":3407,"title":{},"name":{},"text":{"73":{}},"component":{}}],["extensionid",{"_index":787,"title":{},"name":{},"text":{"7":{},"34":{}},"component":{}}],["extern",{"_index":136,"title":{},"name":{},"text":{"1":{},"6":{},"9":{},"11":{},"12":{},"15":{},"19":{},"27":{},"37":{},"47":{},"54":{},"57":{},"66":{},"73":{}},"component":{}}],["extra",{"_index":1142,"title":{},"name":{},"text":{"14":{}},"component":{}}],["extract",{"_index":739,"title":{},"name":{},"text":{"6":{},"19":{},"26":{},"29":{},"31":{},"36":{},"71":{}},"component":{}}],["f",{"_index":1424,"title":{},"name":{},"text":{"17":{},"25":{},"28":{},"31":{},"47":{},"49":{},"50":{},"57":{},"58":{},"59":{}},"component":{}}],["f0f9",{"_index":1099,"title":{},"name":{},"text":{"13":{}},"component":{}}],["f5c5d5d784ad",{"_index":2453,"title":{},"name":{},"text":{"38":{}},"component":{}}],["f779929c9937\",\"workflowdata\":{\"symbol\":\"kgto\",\"currentprice\":59.36,\"profit\":\"19",{"_index":2320,"title":{},"name":{},"text":{"34":{}},"component":{}}],["fabric8",{"_index":3308,"title":{},"name":{},"text":{"60":{}},"component":{}}],["facilit",{"_index":1408,"title":{},"name":{},"text":{"17":{},"27":{},"28":{},"29":{},"46":{}},"component":{}}],["fact",{"_index":1022,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["fahrenheit",{"_index":932,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["fail",{"_index":455,"title":{},"name":{},"text":{"5":{},"7":{},"18":{},"27":{},"33":{},"38":{},"43":{},"45":{},"49":{},"54":{}},"component":{}}],["failonvalidationerror",{"_index":774,"title":{},"name":{},"text":{"7":{}},"component":{}}],["failsaf",{"_index":1979,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["failservic",{"_index":2751,"title":{},"name":{},"text":{"45":{}},"component":{}}],["failservice\":\".failservic",{"_index":2685,"title":{},"name":{},"text":{"45":{}},"component":{}}],["failservice\":\"shippingservic",{"_index":2759,"title":{},"name":{},"text":{"45":{}},"component":{}}],["failur",{"_index":995,"title":{"49-9":{}},"name":{},"text":{"11":{},"38":{},"45":{},"49":{},"51":{},"54":{},"64":{},"65":{}},"component":{}}],["failurethreshold",{"_index":3194,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["fake",{"_index":2285,"title":{},"name":{},"text":{"34":{}},"component":{}}],["fals",{"_index":351,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"14":{},"15":{},"16":{},"17":{},"27":{},"30":{},"31":{},"36":{},"48":{},"49":{},"54":{},"55":{},"58":{}},"component":{}}],["familiar",{"_index":402,"title":{"22":{}},"name":{"22":{}},"text":{"4":{},"21":{},"36":{},"43":{},"55":{}},"component":{}}],["fast",{"_index":2558,"title":{},"name":{},"text":{"41":{}},"component":{}}],["faster",{"_index":3108,"title":{},"name":{},"text":{"55":{},"57":{},"58":{},"59":{}},"component":{}}],["fat",{"_index":2316,"title":{},"name":{},"text":{"34":{}},"component":{}}],["fb11",{"_index":1155,"title":{},"name":{},"text":{"14":{}},"component":{}}],["fe5a3577efdd\",\"workflowdata\":{\"name\":\"john\",\"language\":\"english\",\"greeting\":\"hello",{"_index":2926,"title":{},"name":{},"text":{"47":{}},"component":{}}],["featur",{"_index":181,"title":{"2":{},"49-10":{},"72-1":{},"73-2":{}},"name":{},"text":{"3":{},"4":{},"6":{},"14":{},"15":{},"16":{},"21":{},"23":{},"24":{},"27":{},"30":{},"31":{},"36":{},"38":{},"47":{},"49":{},"57":{},"58":{},"59":{},"60":{},"70":{},"72":{},"73":{}},"component":{}}],["feel",{"_index":406,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["fetch",{"_index":2872,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"64":{},"65":{},"66":{},"70":{},"73":{}},"component":{}}],["few",{"_index":313,"title":{},"name":{},"text":{"3":{},"17":{},"47":{},"48":{},"49":{},"55":{},"66":{}},"component":{}}],["field",{"_index":682,"title":{},"name":{},"text":{"6":{},"10":{},"12":{},"14":{},"21":{},"26":{},"30":{},"35":{},"47":{},"49":{},"62":{},"64":{},"65":{},"67":{},"68":{},"70":{}},"component":{}}],["fieldpath",{"_index":1325,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["fieldref",{"_index":1324,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["figur",{"_index":924,"title":{},"name":{},"text":{"10":{},"11":{},"12":{},"19":{},"21":{},"26":{},"27":{},"33":{},"37":{},"42":{},"45":{},"46":{},"49":{},"57":{},"60":{},"62":{},"63":{},"64":{},"65":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["file",{"_index":262,"title":{"53":{},"53-1":{},"62-2":{},"73-5":{}},"name":{"53":{}},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"53":{},"55":{},"57":{},"58":{},"59":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["file.yaml#myfunction1",{"_index":2386,"title":{},"name":{},"text":{"36":{}},"component":{}}],["file=$(pwd",{"_index":3045,"title":{},"name":{},"text":{"53":{}},"component":{}}],["file=.dockerconfigjson=${home}/.docker/config.json",{"_index":2879,"title":{},"name":{},"text":{"47":{}},"component":{}}],["file_nam",{"_index":459,"title":{},"name":{},"text":{"5":{}},"component":{}}],["file_name(default",{"_index":2253,"title":{},"name":{},"text":{"34":{}},"component":{}}],["filenam",{"_index":2063,"title":{},"name":{},"text":{"32":{},"73":{}},"component":{}}],["filename.svg",{"_index":3409,"title":{},"name":{},"text":{"73":{}},"component":{}}],["filesystem",{"_index":421,"title":{},"name":{},"text":{"5":{}},"component":{}}],["fill",{"_index":2353,"title":{"64-4":{}},"name":{},"text":{"35":{},"64":{},"65":{}},"component":{}}],["fillworkitemhandl",{"_index":695,"title":{},"name":{},"text":{"6":{}},"component":{}}],["fillworkitemhandler(workflow",{"_index":731,"title":{},"name":{},"text":{"6":{}},"component":{}}],["filter",{"_index":384,"title":{"10-3":{},"62-4":{},"64-1":{}},"name":{},"text":{"4":{},"6":{},"10":{},"14":{},"16":{},"17":{},"21":{},"26":{},"27":{},"32":{},"33":{},"46":{},"60":{},"62":{},"64":{},"65":{}},"component":{}}],["final",{"_index":592,"title":{},"name":{},"text":{"6":{},"10":{},"14":{},"16":{},"27":{},"28":{},"33":{},"36":{},"42":{},"43":{},"46":{},"47":{}},"component":{}}],["finalizewitherror",{"_index":875,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["financi",{"_index":2128,"title":{},"name":{},"text":{"33":{}},"component":{}}],["find",{"_index":403,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["fine",{"_index":2873,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["finish",{"_index":849,"title":{},"name":{},"text":{"9":{},"10":{},"11":{},"12":{},"21":{},"30":{},"35":{},"37":{},"38":{},"43":{},"47":{},"54":{}},"component":{}}],["fire",{"_index":1178,"title":{},"name":{},"text":{"14":{},"37":{}},"component":{}}],["fire&wait",{"_index":822,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["first",{"_index":73,"title":{"66-1":{},"66-2":{}},"name":{"21":{}},"text":{"1":{},"4":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"21":{},"23":{},"25":{},"26":{},"29":{},"30":{},"33":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"46":{},"47":{},"49":{},"50":{},"54":{},"55":{},"58":{},"59":{},"60":{},"66":{}},"component":{}}],["fit",{"_index":1965,"title":{},"name":{},"text":{"28":{}},"component":{}}],["fix",{"_index":215,"title":{},"name":{},"text":{"2":{},"5":{},"16":{},"41":{},"43":{},"47":{},"49":{},"68":{}},"component":{}}],["flag",{"_index":777,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"21":{},"41":{},"46":{},"55":{},"68":{}},"component":{}}],["flasgger",{"_index":2393,"title":{},"name":{},"text":{"36":{}},"component":{}}],["flexibl",{"_index":1124,"title":{},"name":{},"text":{"14":{}},"component":{}}],["fli",{"_index":2889,"title":{},"name":{},"text":{"47":{}},"component":{}}],["float",{"_index":610,"title":{},"name":{},"text":{"6":{},"23":{},"36":{}},"component":{}}],["flow",{"_index":780,"title":{},"name":{},"text":{"7":{},"9":{},"17":{},"20":{},"21":{},"32":{},"33":{},"37":{},"42":{},"45":{},"46":{},"47":{},"49":{},"53":{}},"component":{}}],["flyway",{"_index":149,"title":{"31-2":{},"31-3":{},"31-7":{},"31-8":{}},"name":{"31":{}},"text":{"1":{},"14":{},"16":{},"27":{},"30":{},"31":{}},"component":{}}],["flyway.loc",{"_index":2037,"title":{},"name":{},"text":{"31":{}},"component":{}}],["flyway.locations=classpath:com.mycomp.migration,database/migrations,filesystem:/sql",{"_index":2038,"title":{},"name":{},"text":{"31":{}},"component":{}}],["flyway.password=bar",{"_index":2028,"title":{},"name":{},"text":{"31":{}},"component":{}}],["flyway.url=jdbc:postgresql://localhost:5432/foobardb",{"_index":2026,"title":{},"name":{},"text":{"31":{}},"component":{}}],["flyway.user=foo",{"_index":2027,"title":{},"name":{},"text":{"31":{}},"component":{}}],["flyway_schema_histori",{"_index":2022,"title":{},"name":{},"text":{"31":{}},"component":{}}],["focus",{"_index":1020,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["folder",{"_index":2035,"title":{},"name":{},"text":{"31":{},"36":{},"41":{},"66":{},"67":{},"71":{},"73":{}},"component":{}}],["follow",{"_index":70,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["footprint",{"_index":3099,"title":{},"name":{},"text":{"55":{}},"component":{}}],["foreach",{"_index":362,"title":{},"name":{},"text":{"4":{},"5":{},"25":{}},"component":{}}],["forget",{"_index":666,"title":{},"name":{},"text":{"6":{}},"component":{}}],["form",{"_index":401,"title":{},"name":{},"text":{"4":{},"9":{},"18":{},"64":{},"65":{}},"component":{}}],["format",{"_index":785,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"17":{},"18":{},"19":{},"23":{},"26":{},"30":{},"32":{},"33":{},"36":{},"48":{},"64":{},"65":{},"73":{}},"component":{}}],["former",{"_index":1021,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["found",{"_index":327,"title":{"4-13":{},"5-1":{},"6-22":{},"7-6":{},"8-3":{},"9-11":{},"10-5":{},"11-4":{},"12-3":{},"13-5":{},"14-16":{},"15-4":{},"16-9":{},"17-7":{},"18-5":{},"19-3":{},"20-3":{},"21-7":{},"22-1":{},"23-6":{},"24-3":{},"25-6":{},"26-5":{},"27-17":{},"28-5":{},"29-4":{},"30-3":{},"31-9":{},"32-8":{},"33-5":{},"34-10":{},"35-7":{},"36-7":{},"37-4":{},"38-2":{},"41-7":{},"42-5":{},"43-5":{},"45-5":{},"46-11":{},"47-14":{},"48-4":{},"49-14":{},"50-5":{},"53-4":{},"54-5":{},"55-6":{},"57-6":{},"58-6":{},"59-7":{},"60-8":{},"62-6":{},"63-2":{},"64-8":{},"65-3":{},"66-3":{},"67-4":{},"68-3":{},"69-3":{},"70-3":{},"71-3":{},"72-3":{},"73-7":{}},"name":{},"text":{"6":{},"11":{},"16":{},"18":{},"27":{},"35":{},"36":{},"38":{},"59":{},"60":{}},"component":{}}],["foundat",{"_index":331,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["four",{"_index":709,"title":{},"name":{},"text":{"6":{},"47":{}},"component":{}}],["fqcn",{"_index":540,"title":{},"name":{},"text":{"6":{},"11":{},"45":{}},"component":{}}],["framework",{"_index":57,"title":{},"name":{},"text":{"1":{},"33":{},"36":{},"42":{}},"component":{}}],["fraud",{"_index":2605,"title":{},"name":{},"text":{"42":{}},"component":{}}],["fraudevalu",{"_index":2606,"title":{},"name":{},"text":{"42":{}},"component":{}}],["free",{"_index":407,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["from/test",{"_index":2587,"title":{},"name":{},"text":{"42":{}},"component":{}}],["from=build",{"_index":2846,"title":{},"name":{},"text":{"47":{}},"component":{}}],["fulfil",{"_index":2669,"title":{},"name":{},"text":{"45":{}},"component":{}}],["full",{"_index":279,"title":{},"name":{},"text":{"3":{},"16":{},"27":{},"28":{},"29":{},"34":{},"41":{},"71":{}},"component":{}}],["full_uri",{"_index":460,"title":{},"name":{},"text":{"5":{},"34":{}},"component":{}}],["fulli",{"_index":338,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"45":{}},"component":{}}],["function",{"_index":96,"title":{"6":{},"4-2":{},"6-1":{},"6-2":{},"6-3":{},"6-4":{},"6-5":{},"6-6":{},"6-7":{},"6-8":{},"6-9":{},"6-10":{},"6-11":{},"6-12":{},"6-14":{},"6-19":{},"6-20":{},"10-2":{},"23-3":{},"36-1":{},"36-3":{},"36-4":{}},"name":{"6":{},"24":{}},"text":{"1":{},"4":{},"6":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"26":{},"33":{},"34":{},"35":{},"36":{},"37":{},"45":{},"47":{},"49":{},"51":{},"53":{},"60":{},"66":{},"70":{},"73":{}},"component":{}}],["function($l",{"_index":1811,"title":{},"name":{},"text":{"26":{}},"component":{}}],["function_nam",{"_index":462,"title":{},"name":{},"text":{"5":{},"34":{}},"component":{}}],["functiondef",{"_index":734,"title":{},"name":{},"text":{"6":{}},"component":{}}],["functiondefinit",{"_index":733,"title":{},"name":{},"text":{"6":{}},"component":{}}],["functionref",{"_index":529,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"10":{},"11":{},"13":{},"20":{},"23":{},"24":{},"33":{},"34":{},"35":{},"36":{},"37":{},"45":{},"46":{},"47":{},"49":{},"53":{}},"component":{}}],["function’",{"_index":1750,"title":{},"name":{},"text":{"24":{}},"component":{}}],["further",{"_index":1341,"title":{},"name":{},"text":{"16":{},"33":{},"57":{},"58":{},"59":{}},"component":{}}],["futur",{"_index":357,"title":{},"name":{},"text":{"4":{},"19":{},"33":{},"36":{}},"component":{}}],["gateway",{"_index":206,"title":{"14-9":{}},"name":{},"text":{"2":{},"14":{}},"component":{}}],["gbp",{"_index":2239,"title":{},"name":{},"text":{"33":{}},"component":{}}],["gener",{"_index":186,"title":{"17-4":{},"54-1":{}},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"9":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"21":{},"25":{},"27":{},"28":{},"32":{},"33":{},"34":{},"36":{},"37":{},"38":{},"41":{},"47":{},"48":{},"54":{},"57":{},"58":{},"59":{},"63":{},"64":{},"67":{},"72":{},"73":{}},"component":{}}],["generalerror",{"_index":792,"title":{},"name":{},"text":{"7":{}},"component":{}}],["generatecloudevent(ce.get().getextension(cloudeventextensionconstants.process_instance_id).tostr",{"_index":1057,"title":{},"name":{},"text":{"12":{}},"component":{}}],["generatecloudevent(str",{"_index":1031,"title":{},"name":{},"text":{"12":{}},"component":{}}],["generator.[filename].auth.[security_scheme_name].[auth_property_nam",{"_index":2062,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.[filename].auth.[security_scheme_name].api",{"_index":2087,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.[filename].auth.[security_scheme_name].bear",{"_index":2083,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.[filename].auth.[security_scheme_name].head",{"_index":2120,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.[filename].auth.[security_scheme_name].password",{"_index":2080,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.[filename].auth.[security_scheme_name].token",{"_index":2116,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.[filename].auth.[security_scheme_name].usernam",{"_index":2078,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.codegen.default.security.schem",{"_index":2059,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.codegen.default.security.scheme=http",{"_index":2060,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.codegen.spec.acme_financial_service_yml.bas",{"_index":2189,"title":{},"name":{},"text":{"33":{}},"component":{}}],["generator.security_example_json.auth.api_key_example.api",{"_index":2088,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.security_example_json.auth.http_basic_example.password=my_passwd",{"_index":2081,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.security_example_json.auth.http_basic_example.username=my_us",{"_index":2079,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.security_example_json.auth.http_bearer_example.bear",{"_index":2084,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.security_example_json.auth.oauth_example.head",{"_index":2122,"title":{},"name":{},"text":{"32":{}},"component":{}}],["generator.security_example_json.auth.oauth_example.token",{"_index":2118,"title":{},"name":{},"text":{"32":{}},"component":{}}],["get",{"_index":0,"title":{"22":{},"1-1":{}},"name":{"22":{}},"text":{"3":{},"4":{},"21":{},"25":{},"36":{},"43":{},"50":{},"55":{},"58":{}},"component":{}}],["get(\"/callback/{id",{"_index":1997,"title":{},"name":{},"text":{"29":{}},"component":{}}],["getexchanger",{"_index":2143,"title":{},"name":{},"text":{"33":{}},"component":{}}],["getexchangerateact",{"_index":2157,"title":{},"name":{},"text":{"33":{}},"component":{}}],["getpet",{"_index":2417,"title":{},"name":{},"text":{"36":{}},"component":{}}],["getpetbyid",{"_index":2413,"title":{},"name":{},"text":{"36":{}},"component":{}}],["getprofitfunct",{"_index":2291,"title":{},"name":{},"text":{"34":{}},"component":{}}],["getstockpric",{"_index":2287,"title":{},"name":{},"text":{"34":{}},"component":{}}],["getstockpricefunct",{"_index":2288,"title":{},"name":{},"text":{"34":{}},"component":{}}],["getstockprofit",{"_index":2297,"title":{},"name":{},"text":{"34":{}},"component":{}}],["getter",{"_index":2175,"title":{},"name":{},"text":{"33":{}},"component":{}}],["gist",{"_index":3358,"title":{},"name":{},"text":{"67":{}},"component":{}}],["git",{"_index":2002,"title":{},"name":{},"text":{"30":{},"33":{},"46":{},"55":{},"67":{}},"component":{}}],["git@github.com:kiegroup/kogito",{"_index":2003,"title":{},"name":{},"text":{"30":{}},"component":{}}],["github",{"_index":109,"title":{"67":{},"71":{},"67-1":{},"67-2":{},"67-3":{},"71-1":{},"71-2":{}},"name":{"67":{}},"text":{"1":{},"12":{},"13":{},"21":{},"22":{},"23":{},"30":{},"33":{},"34":{},"35":{},"37":{},"38":{},"45":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["give",{"_index":2943,"title":{},"name":{},"text":{"49":{}},"component":{}}],["given",{"_index":616,"title":{},"name":{},"text":{"6":{},"9":{},"17":{},"19":{},"27":{},"29":{},"34":{},"38":{},"42":{},"45":{},"46":{},"47":{},"49":{},"50":{},"52":{},"53":{},"57":{},"60":{}},"component":{}}],["global",{"_index":1482,"title":{"27-7":{}},"name":{},"text":{"18":{},"27":{},"32":{},"47":{},"60":{}},"component":{}}],["go",{"_index":171,"title":{},"name":{},"text":{"1":{},"26":{},"33":{},"36":{},"46":{},"53":{},"58":{},"63":{},"64":{},"65":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{}},"component":{}}],["goal",{"_index":1245,"title":{},"name":{},"text":{"14":{},"16":{},"27":{}},"component":{}}],["goe",{"_index":2939,"title":{},"name":{},"text":{"49":{}},"component":{}}],["good",{"_index":2173,"title":{},"name":{},"text":{"33":{}},"component":{}}],["googl",{"_index":3391,"title":{},"name":{},"text":{"71":{}},"component":{}}],["goto",{"_index":971,"title":{},"name":{},"text":{"11":{}},"component":{}}],["graalvm",{"_index":3073,"title":{},"name":{},"text":{"55":{}},"component":{}}],["gradl",{"_index":2017,"title":{},"name":{},"text":{"30":{},"57":{},"58":{},"59":{}},"component":{}}],["grafana",{"_index":1761,"title":{},"name":{},"text":{"25":{}},"component":{}}],["grant",{"_index":2131,"title":{},"name":{},"text":{"33":{},"68":{},"70":{}},"component":{}}],["graphic",{"_index":1852,"title":{},"name":{},"text":{"26":{}},"component":{}}],["graphiql",{"_index":1235,"title":{},"name":{},"text":{"14":{},"26":{}},"component":{}}],["graphql",{"_index":366,"title":{"14-7":{},"14-8":{},"14-10":{}},"name":{},"text":{"4":{},"14":{},"15":{},"16":{},"21":{},"26":{},"27":{}},"component":{}}],["greaterthan",{"_index":1164,"title":{},"name":{},"text":{"14":{}},"component":{}}],["greaterthanequ",{"_index":1165,"title":{},"name":{},"text":{"14":{}},"component":{}}],["greecepayload",{"_index":2622,"title":{},"name":{},"text":{"43":{}},"component":{}}],["greet",{"_index":626,"title":{},"name":{},"text":{"6":{},"10":{},"21":{},"24":{},"26":{},"35":{},"38":{},"47":{},"48":{},"49":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{}},"component":{}}],["greetact",{"_index":2906,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["greeter",{"_index":2330,"title":{},"name":{},"text":{"35":{}},"component":{}}],["greetfunct",{"_index":2904,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["greetinenglish",{"_index":922,"title":{},"name":{},"text":{"10":{},"47":{},"49":{}},"component":{}}],["greeting+.nam",{"_index":2907,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["greeting.proto",{"_index":2342,"title":{},"name":{},"text":{"35":{}},"component":{}}],["greeting.proto#greeter#sayhello",{"_index":2341,"title":{},"name":{},"text":{"35":{}},"component":{}}],["greeting_svc/greet",{"_index":2921,"title":{},"name":{},"text":{"47":{}},"component":{}}],["greeting_svc=$(minikub",{"_index":2913,"title":{},"name":{},"text":{"47":{}},"component":{}}],["greeting_svc=$(oc",{"_index":2918,"title":{},"name":{},"text":{"47":{}},"component":{}}],["greetinspanish",{"_index":923,"title":{},"name":{},"text":{"10":{},"47":{},"49":{}},"component":{}}],["greetperson",{"_index":2905,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["grep",{"_index":3002,"title":{},"name":{},"text":{"50":{}},"component":{}}],["group",{"_index":801,"title":{},"name":{},"text":{"8":{},"17":{},"21":{},"26":{},"53":{},"60":{}},"component":{}}],["group/namespac",{"_index":3207,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["groupfunct",{"_index":1837,"title":{},"name":{},"text":{"26":{}},"component":{}}],["grpc",{"_index":114,"title":{"35":{},"35-3":{},"35-4":{},"35-5":{},"35-6":{}},"name":{"35":{}},"text":{"1":{},"5":{},"35":{},"45":{}},"component":{}}],["guarante",{"_index":1896,"title":{},"name":{},"text":{"27":{},"35":{}},"component":{}}],["guid",{"_index":23,"title":{"1":{},"52":{}},"name":{"52":{}},"text":{"1":{},"2":{},"3":{},"9":{},"14":{},"16":{},"27":{},"28":{},"30":{},"32":{},"33":{},"34":{},"47":{},"49":{},"50":{},"57":{},"58":{},"59":{},"62":{}},"component":{}}],["gvk",{"_index":3268,"title":{},"name":{},"text":{"60":{}},"component":{}}],["h",{"_index":1096,"title":{},"name":{},"text":{"13":{},"17":{},"21":{},"24":{},"31":{},"33":{},"34":{},"35":{},"41":{},"45":{},"47":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["halt",{"_index":865,"title":{},"name":{},"text":{"9":{}},"component":{}}],["hand",{"_index":2794,"title":{},"name":{},"text":{"46":{}},"component":{}}],["handl",{"_index":83,"title":{"11":{},"4-6":{},"11-2":{},"18-3":{}},"name":{"8":{},"11":{}},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"11":{},"12":{},"24":{},"27":{},"28":{},"30":{},"37":{},"42":{},"45":{},"47":{},"50":{},"51":{},"58":{}},"component":{}}],["handlenovisadecis",{"_index":889,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["handler",{"_index":688,"title":{},"name":{},"text":{"6":{}},"component":{}}],["handling.sw.json",{"_index":2678,"title":{},"name":{},"text":{"45":{}},"component":{}}],["happen",{"_index":965,"title":{},"name":{},"text":{"11":{},"20":{},"49":{},"54":{}},"component":{}}],["hardcod",{"_index":2421,"title":{},"name":{},"text":{"36":{}},"component":{}}],["harden",{"_index":2815,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["hashmap",{"_index":1033,"title":{},"name":{},"text":{"12":{}},"component":{}}],["hat",{"_index":1582,"title":{"70":{},"70-1":{},"70-2":{}},"name":{},"text":{"21":{},"59":{},"66":{},"68":{},"69":{},"70":{},"73":{}},"component":{}}],["hat’",{"_index":2896,"title":{},"name":{},"text":{"47":{}},"component":{}}],["have",{"_index":2544,"title":{},"name":{},"text":{"41":{},"47":{},"49":{},"53":{}},"component":{}}],["header",{"_index":597,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"10":{},"12":{},"17":{},"23":{},"32":{},"36":{},"37":{},"38":{},"42":{},"43":{},"64":{},"65":{}},"component":{}}],["header(\"accept",{"_index":2472,"title":{},"name":{},"text":{"38":{}},"component":{}}],["header(\"c",{"_index":2585,"title":{},"name":{},"text":{"42":{}},"component":{}}],["header.workflowid",{"_index":1727,"title":{},"name":{},"text":{"23":{}},"component":{}}],["health",{"_index":1367,"title":{},"name":{},"text":{"17":{},"21":{},"49":{}},"component":{}}],["healthi",{"_index":2962,"title":{},"name":{},"text":{"49":{},"54":{}},"component":{}}],["hello",{"_index":918,"title":{},"name":{},"text":{"10":{},"21":{},"32":{},"37":{},"38":{},"41":{},"47":{},"49":{},"53":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["hello.sw.json",{"_index":1604,"title":{},"name":{},"text":{"21":{}},"component":{}}],["hello_world",{"_index":1573,"title":{},"name":{},"text":{"21":{}},"component":{}}],["hellorepli",{"_index":2338,"title":{},"name":{},"text":{"35":{}},"component":{}}],["hellorequest",{"_index":2337,"title":{},"name":{},"text":{"35":{}},"component":{}}],["hellotest",{"_index":2454,"title":{},"name":{},"text":{"38":{}},"component":{}}],["hellotest.java",{"_index":2456,"title":{},"name":{},"text":{"38":{}},"component":{}}],["help",{"_index":315,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"17":{},"25":{},"41":{},"49":{},"54":{},"59":{},"60":{},"63":{},"64":{}},"component":{}}],["henc",{"_index":705,"title":{},"name":{},"text":{"6":{}},"component":{}}],["here",{"_index":409,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["here’",{"_index":2929,"title":{},"name":{},"text":{"48":{}},"component":{}}],["hibern",{"_index":1694,"title":{},"name":{},"text":{"21":{}},"component":{}}],["hide",{"_index":3398,"title":{},"name":{},"text":{"71":{}},"component":{}}],["histori",{"_index":1394,"title":{},"name":{},"text":{"17":{},"31":{}},"component":{}}],["hit",{"_index":2602,"title":{},"name":{},"text":{"42":{},"49":{}},"component":{}}],["hold",{"_index":487,"title":{},"name":{},"text":{"5":{},"7":{},"12":{},"37":{},"47":{},"49":{}},"component":{}}],["home",{"_index":3379,"title":{},"name":{},"text":{"69":{}},"component":{}}],["home/kogito/launch/build",{"_index":2834,"title":{},"name":{},"text":{"47":{}},"component":{}}],["home/kogito/serverless",{"_index":2848,"title":{},"name":{},"text":{"47":{}},"component":{}}],["home/user/dev/kiegroup/kogito",{"_index":2508,"title":{},"name":{},"text":{"38":{}},"component":{}}],["home}/.docker/config.json",{"_index":2881,"title":{},"name":{},"text":{"47":{}},"component":{}}],["hood",{"_index":3258,"title":{},"name":{},"text":{"60":{}},"component":{}}],["host",{"_index":1909,"title":{},"name":{},"text":{"27":{},"31":{},"68":{}},"component":{}}],["host1:11222;host2:11222",{"_index":1912,"title":{},"name":{},"text":{"27":{}},"component":{}}],["host:port",{"_index":1948,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hot",{"_index":200,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hour",{"_index":840,"title":{},"name":{},"text":{"9":{}},"component":{}}],["hover",{"_index":3330,"title":{},"name":{},"text":{"65":{}},"component":{}}],["html",{"_index":1828,"title":{},"name":{},"text":{"26":{}},"component":{}}],["http",{"_index":132,"title":{"42":{},"17-3":{},"32-2":{},"37-2":{}},"name":{"42":{}},"text":{"1":{},"2":{},"6":{},"7":{},"10":{},"11":{},"14":{},"16":{},"17":{},"20":{},"21":{},"25":{},"27":{},"28":{},"29":{},"32":{},"35":{},"36":{},"37":{},"38":{},"42":{},"47":{},"49":{},"53":{},"57":{},"58":{},"59":{},"60":{},"64":{},"65":{},"73":{}},"component":{}}],["http1",{"_index":3201,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["http://0.0.0.0:8080",{"_index":1688,"title":{},"name":{},"text":{"21":{}},"component":{}}],["http://127.0.0.1:57053",{"_index":2948,"title":{},"name":{},"text":{"49":{}},"component":{}}],["http://127.0.0.1:57053/q/swagger",{"_index":2952,"title":{},"name":{},"text":{"49":{}},"component":{}}],["http://custom",{"_index":621,"title":{},"name":{},"text":{"6":{},"24":{}},"component":{}}],["http://hello",{"_index":3162,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["http://localhost:8080",{"_index":1401,"title":{},"name":{},"text":{"17":{},"21":{}},"component":{}}],["http://localhost:8080/callback",{"_index":2431,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/currency_exchange_workflow",{"_index":2222,"title":{},"name":{},"text":{"33":{}},"component":{}}],["http://localhost:8080/hello_world",{"_index":1701,"title":{},"name":{},"text":{"21":{}},"component":{}}],["http://localhost:8080/jsongreet",{"_index":2358,"title":{},"name":{},"text":{"35":{},"55":{}},"component":{}}],["http://localhost:8080/jsongreetbidistream",{"_index":2382,"title":{},"name":{},"text":{"35":{}},"component":{}}],["http://localhost:8080/jsongreetclientstream",{"_index":2376,"title":{},"name":{},"text":{"35":{}},"component":{}}],["http://localhost:8080/jsongreetserverstream",{"_index":2365,"title":{},"name":{},"text":{"35":{}},"component":{}}],["http://localhost:8080/order_saga_error_workflow",{"_index":2707,"title":{},"name":{},"text":{"45":{}},"component":{}}],["http://localhost:8080/parallel",{"_index":1095,"title":{},"name":{},"text":{"13":{}},"component":{}}],["http://localhost:8080/q/dev",{"_index":1339,"title":{},"name":{},"text":{"16":{},"63":{}},"component":{}}],["http://localhost:8080/q/graphql",{"_index":1240,"title":{},"name":{},"text":{"14":{}},"component":{}}],["http://localhost:8080/q/metr",{"_index":1810,"title":{},"name":{},"text":{"26":{}},"component":{}}],["http://localhost:8080/q/openapi",{"_index":790,"title":{},"name":{},"text":{"7":{}},"component":{}}],["http://localhost:8080/q/swagg",{"_index":1590,"title":{},"name":{},"text":{"21":{}},"component":{}}],["http://localhost:8080/resum",{"_index":1567,"title":{},"name":{},"text":{"20":{}},"component":{}}],["http://localhost:8080/stockprofit",{"_index":2308,"title":{},"name":{},"text":{"34":{}},"component":{}}],["http://localhost:8080/wait",{"_index":2432,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8081",{"_index":2501,"title":{},"name":{},"text":{"38":{}},"component":{}}],["http://localhost:8180",{"_index":1842,"title":{},"name":{},"text":{"26":{}},"component":{}}],["http://localhost:8180/graphiql",{"_index":1237,"title":{},"name":{},"text":{"14":{},"26":{}},"component":{}}],["http://localhost:8180/graphql",{"_index":1338,"title":{},"name":{},"text":{"16":{}},"component":{}}],["http://localhost:8180/graphql/?query=%7bprocessinstances%7bprocessid%20processname%20state%20start%20end%20businesskey%20error%7bmessage%7d%7d%7d%0a",{"_index":1850,"title":{},"name":{},"text":{"26":{}},"component":{}}],["http://localhost:8181",{"_index":2307,"title":{},"name":{},"text":{"34":{}},"component":{}}],["http://localhost:8280/v2/jobs/ev",{"_index":1969,"title":{},"name":{},"text":{"28":{}},"component":{}}],["http://localhost:8281/auth/realms/kogito/protocol/openid",{"_index":2185,"title":{},"name":{},"text":{"33":{}},"component":{}}],["http://localhost:8282",{"_index":2305,"title":{},"name":{},"text":{"34":{}},"component":{}}],["http://localhost:8383",{"_index":2306,"title":{},"name":{},"text":{"34":{}},"component":{}}],["http://localhost:8483/financi",{"_index":2201,"title":{},"name":{},"text":{"33":{}},"component":{}}],["http://localhost:9000",{"_index":1366,"title":{},"name":{},"text":{"17":{}},"component":{}}],["http://myserver.com",{"_index":2426,"title":{},"name":{},"text":{"36":{}},"component":{}}],["http://myservice.mynamespace.cluster.svc.loc",{"_index":2270,"title":{},"name":{},"text":{"34":{}},"component":{}}],["http:400",{"_index":998,"title":{},"name":{},"text":{"11":{}},"component":{}}],["http_basic_exampl",{"_index":2067,"title":{},"name":{},"text":{"32":{}},"component":{}}],["httpget",{"_index":3195,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["https://docs.openshift.com/contain",{"_index":2914,"title":{},"name":{},"text":{"47":{}},"component":{}}],["https://example.com/oauth",{"_index":2095,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://example.com/oauth/token",{"_index":2097,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://github.com/cloudevents/spec/pul",{"_index":655,"title":{},"name":{},"text":{"6":{}},"component":{}}],["https://github.com/kiegroup/kogito",{"_index":2211,"title":{},"name":{},"text":{"33":{},"46":{},"55":{}},"component":{}}],["https://my.remote.host/apicatalog/apis/123/docu",{"_index":2259,"title":{},"name":{},"text":{"34":{}},"component":{}}],["https://raw.githubusercontent.com/kiegroup/kogito",{"_index":2940,"title":{},"name":{},"text":{"49":{},"50":{}},"component":{}}],["https://{url",{"_index":3418,"title":{},"name":{},"text":{"73":{}},"component":{}}],["huge",{"_index":1546,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hybrid",{"_index":3420,"title":{},"name":{},"text":{"73":{}},"component":{}}],["i)error",{"_index":992,"title":{},"name":{},"text":{"11":{}},"component":{}}],["i.",{"_index":1236,"title":{"47-8":{}},"name":{},"text":{"14":{},"55":{}},"component":{}}],["icon",{"_index":269,"title":{},"name":{},"text":{"2":{},"4":{},"64":{},"65":{},"66":{},"71":{}},"component":{}}],["id",{"_index":390,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"12":{},"13":{},"14":{},"17":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"29":{},"30":{},"33":{},"34":{},"36":{},"37":{},"38":{},"42":{},"49":{},"55":{},"57":{},"58":{},"59":{},"65":{},"70":{},"73":{}},"component":{}}],["id\":\"0f77abc",{"_index":3170,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["id\":\"217050a3",{"_index":2754,"title":{},"name":{},"text":{"45":{}},"component":{}}],["id\":\"358f97ba",{"_index":1098,"title":{},"name":{},"text":{"13":{}},"component":{}}],["id\":\"3da62df1",{"_index":1108,"title":{},"name":{},"text":{"13":{}},"component":{}}],["id\":\"4376cc50",{"_index":2359,"title":{},"name":{},"text":{"35":{}},"component":{}}],["id\":\"5ab5dcb8",{"_index":2310,"title":{},"name":{},"text":{"34":{}},"component":{}}],["id\":\"665911c5",{"_index":2366,"title":{},"name":{},"text":{"35":{}},"component":{}}],["id\":\"87cf8275",{"_index":1753,"title":{},"name":{},"text":{"24":{}},"component":{}}],["id\":\"a80c95d6",{"_index":2317,"title":{},"name":{},"text":{"34":{}},"component":{}}],["id\":\"b5c0bf16",{"_index":2715,"title":{},"name":{},"text":{"45":{}},"component":{}}],["id\":\"b5fbfaa3",{"_index":2922,"title":{},"name":{},"text":{"47":{}},"component":{}}],["id\":\"efb59bfa",{"_index":1702,"title":{},"name":{},"text":{"21":{}},"component":{}}],["id:\"23147fcc",{"_index":1197,"title":{},"name":{},"text":{"14":{}},"component":{}}],["id:\"66e05e9c",{"_index":1182,"title":{},"name":{},"text":{"14":{}},"component":{}}],["id=io.quarkus.platform",{"_index":1602,"title":{},"name":{},"text":{"21":{}},"component":{}}],["id=kogito",{"_index":2110,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["ideal",{"_index":31,"title":{},"name":{},"text":{"1":{}},"component":{}}],["identifi",{"_index":680,"title":{},"name":{},"text":{"6":{},"8":{},"11":{},"12":{},"19":{},"21":{},"23":{},"27":{},"28":{},"29":{},"32":{},"33":{},"36":{},"37":{},"42":{},"45":{},"49":{},"73":{}},"component":{}}],["ifnotpres",{"_index":3218,"title":{},"name":{},"text":{"58":{}},"component":{}}],["ignor",{"_index":374,"title":{},"name":{},"text":{"4":{}},"component":{}}],["illegalargumentexcept",{"_index":747,"title":{},"name":{},"text":{"6":{},"11":{},"23":{}},"component":{}}],["illegalargumentexception(",{"_index":1045,"title":{},"name":{},"text":{"12":{}},"component":{}}],["illegalargumentexception(\"odd",{"_index":556,"title":{},"name":{},"text":{"6":{}},"component":{}}],["illustr",{"_index":999,"title":{},"name":{},"text":{"11":{},"35":{},"37":{}},"component":{}}],["imag",{"_index":213,"title":{"55":{},"47-2":{},"47-10":{},"49-6":{},"55-3":{},"55-4":{}},"name":{"55":{},"56":{}},"text":{"2":{},"3":{},"5":{},"14":{},"16":{},"17":{},"21":{},"24":{},"27":{},"29":{},"36":{},"37":{},"41":{},"47":{},"49":{},"50":{},"51":{},"54":{},"55":{},"57":{},"58":{},"59":{},"66":{}},"component":{}}],["image.build",{"_index":3079,"title":{},"name":{},"text":{"55":{}},"component":{}}],["image.build=tru",{"_index":3081,"title":{},"name":{},"text":{"55":{}},"component":{}}],["image.group",{"_index":3084,"title":{},"name":{},"text":{"55":{}},"component":{}}],["image.group=kiegroup",{"_index":3206,"title":{},"name":{},"text":{"57":{}},"component":{}}],["image.group=kogito",{"_index":3088,"title":{},"name":{},"text":{"55":{},"58":{},"59":{}},"component":{}}],["image.nam",{"_index":3087,"title":{},"name":{},"text":{"55":{}},"component":{}}],["image.name=serverless",{"_index":3089,"title":{},"name":{},"text":{"55":{}},"component":{}}],["image.push",{"_index":3093,"title":{},"name":{},"text":{"55":{}},"component":{}}],["image.push=fals",{"_index":3231,"title":{},"name":{},"text":{"58":{}},"component":{}}],["image.push=tru",{"_index":3094,"title":{},"name":{},"text":{"55":{},"57":{},"59":{}},"component":{}}],["image.registri",{"_index":3083,"title":{},"name":{},"text":{"55":{}},"component":{}}],["image.registry=dev.loc",{"_index":3232,"title":{},"name":{},"text":{"58":{}},"component":{}}],["image.registry=imag",{"_index":3256,"title":{},"name":{},"text":{"59":{}},"component":{}}],["image.registry=quay.io",{"_index":3091,"title":{},"name":{},"text":{"55":{},"57":{}},"component":{}}],["image.registry=some_of_the_values_abov",{"_index":3216,"title":{},"name":{},"text":{"58":{}},"component":{}}],["image.tag=1.0",{"_index":3090,"title":{},"name":{},"text":{"55":{},"57":{},"58":{},"59":{}},"component":{}}],["image=[nam",{"_index":2547,"title":{},"name":{},"text":{"41":{}},"component":{}}],["image=[name]:[tag",{"_index":2548,"title":{},"name":{},"text":{"41":{}},"component":{}}],["image=[registry]/[repository]/[nam",{"_index":2551,"title":{},"name":{},"text":{"41":{}},"component":{}}],["image=[registry]/[repository]/[name]:[tag",{"_index":2552,"title":{},"name":{},"text":{"41":{}},"component":{}}],["image=[repository]/[nam",{"_index":2549,"title":{},"name":{},"text":{"41":{}},"component":{}}],["image=[repository]/[name]:[tag",{"_index":2550,"title":{},"name":{},"text":{"41":{}},"component":{}}],["image=dev.local/kogito/serverless",{"_index":3229,"title":{},"name":{},"text":{"58":{}},"component":{}}],["image=imag",{"_index":3254,"title":{},"name":{},"text":{"59":{}},"component":{}}],["image=quay.io/kiegroup/serverless",{"_index":3149,"title":{},"name":{},"text":{"57":{}},"component":{}}],["imagepullpolici",{"_index":1317,"title":{},"name":{},"text":{"16":{},"27":{},"57":{},"58":{},"59":{}},"component":{}}],["imagestream",{"_index":2895,"title":{},"name":{},"text":{"47":{}},"component":{}}],["imaginari",{"_index":952,"title":{},"name":{},"text":{"10":{}},"component":{}}],["immedi",{"_index":1018,"title":{},"name":{},"text":{"12":{},"14":{},"16":{},"29":{},"37":{}},"component":{}}],["immut",{"_index":2807,"title":{"48-2":{}},"name":{},"text":{"47":{},"48":{},"49":{},"54":{}},"component":{}}],["implement",{"_index":76,"title":{"60-6":{}},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"9":{},"11":{},"17":{},"27":{},"33":{},"34":{},"35":{},"37":{},"43":{},"45":{},"47":{},"49":{},"51":{},"54":{},"66":{},"67":{}},"component":{}}],["import",{"_index":726,"title":{"67-3":{}},"name":{},"text":{"6":{},"7":{},"16":{},"27":{},"28":{},"33":{},"38":{},"43":{},"47":{},"48":{},"54":{},"59":{},"67":{}},"component":{}}],["improv",{"_index":222,"title":{},"name":{},"text":{"2":{}},"component":{}}],["inact",{"_index":1063,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["includ",{"_index":284,"title":{},"name":{},"text":{"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"21":{},"26":{},"27":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"45":{},"49":{},"51":{},"65":{},"66":{},"69":{},"73":{}},"component":{}}],["include=tru",{"_index":1277,"title":{},"name":{},"text":{"15":{}},"component":{}}],["incom",{"_index":445,"title":{},"name":{},"text":{"5":{},"17":{},"18":{},"19":{},"27":{},"37":{},"42":{},"46":{}},"component":{}}],["incoming(\"in",{"_index":1048,"title":{},"name":{},"text":{"12":{}},"component":{}}],["incoming/outgo",{"_index":3028,"title":{},"name":{},"text":{"51":{}},"component":{}}],["incomplet",{"_index":1659,"title":{},"name":{},"text":{"21":{}},"component":{}}],["incorpor",{"_index":1177,"title":{},"name":{},"text":{"14":{},"15":{},"16":{}},"component":{}}],["increas",{"_index":2987,"title":{},"name":{},"text":{"50":{}},"component":{}}],["independ",{"_index":903,"title":{},"name":{},"text":{"9":{},"19":{},"27":{},"43":{},"46":{}},"component":{}}],["index",{"_index":17,"title":{"14":{},"15":{},"16":{},"1-12":{},"14-1":{},"14-2":{},"14-3":{},"14-4":{},"14-5":{},"14-6":{},"14-7":{},"14-9":{},"14-10":{},"14-11":{},"14-14":{},"15-2":{},"16-1":{},"16-2":{},"16-3":{},"16-4":{},"16-5":{},"16-6":{},"16-7":{},"26-3":{}},"name":{"1":{},"3":{},"14":{},"15":{},"16":{}},"text":{"1":{},"2":{},"5":{},"9":{},"14":{},"15":{},"16":{},"21":{},"26":{},"27":{},"46":{}},"component":{}}],["index.graphql.ui.alway",{"_index":1239,"title":{},"name":{},"text":{"14":{},"15":{}},"component":{}}],["index.html",{"_index":3352,"title":{},"name":{},"text":{"66":{}},"component":{}}],["index.proto",{"_index":1679,"title":{},"name":{},"text":{"21":{}},"component":{}}],["indic",{"_index":468,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"10":{},"12":{},"13":{},"16":{},"17":{},"18":{},"23":{},"24":{},"33":{},"34":{},"37":{},"45":{},"62":{},"65":{},"66":{}},"component":{}}],["individu",{"_index":1900,"title":{},"name":{},"text":{"27":{},"32":{}},"component":{}}],["inf/resources/persistence/protobuf:/home/kogito/data/protobuf",{"_index":1293,"title":{},"name":{},"text":{"16":{}},"component":{}}],["infinispan",{"_index":422,"title":{"27-11":{}},"name":{},"text":{"5":{},"14":{},"15":{},"27":{}},"component":{}}],["info",{"_index":523,"title":{},"name":{},"text":{"6":{},"21":{},"32":{},"33":{},"34":{},"36":{},"38":{},"45":{},"54":{},"55":{}},"component":{}}],["info.titl",{"_index":2264,"title":{},"name":{},"text":{"34":{}},"component":{}}],["inform",{"_index":329,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["ingress",{"_index":2950,"title":{},"name":{},"text":{"49":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["ingresses.v1.networking.k8s.io",{"_index":3281,"title":{},"name":{},"text":{"60":{}},"component":{}}],["inherit",{"_index":690,"title":{},"name":{},"text":{"6":{}},"component":{}}],["init",{"_index":767,"title":{},"name":{},"text":{"6":{},"38":{}},"component":{}}],["initi",{"_index":911,"title":{},"name":{},"text":{"10":{},"12":{},"16":{},"27":{},"31":{},"37":{},"45":{},"47":{},"57":{},"58":{},"59":{}},"component":{}}],["initialdelaysecond",{"_index":3197,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["inject",{"_index":361,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"11":{},"17":{},"21":{},"33":{},"36":{},"47":{},"49":{}},"component":{}}],["inmemori",{"_index":1271,"title":{},"name":{},"text":{"15":{},"21":{}},"component":{}}],["input",{"_index":88,"title":{"7":{},"7-1":{}},"name":{"7":{}},"text":{"1":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"18":{},"21":{},"33":{},"46":{},"53":{},"64":{}},"component":{}}],["insecur",{"_index":2984,"title":{},"name":{},"text":{"50":{}},"component":{}}],["insecureskipverifi",{"_index":3378,"title":{},"name":{},"text":{"68":{}},"component":{}}],["insensit",{"_index":988,"title":{},"name":{},"text":{"11":{}},"component":{}}],["insid",{"_index":583,"title":{},"name":{},"text":{"6":{},"10":{},"14":{},"49":{},"51":{}},"component":{}}],["insight",{"_index":1123,"title":{},"name":{},"text":{"14":{}},"component":{}}],["inspect",{"_index":3055,"title":{},"name":{},"text":{"54":{}},"component":{}}],["inspector",{"_index":2398,"title":{},"name":{},"text":{"36":{}},"component":{}}],["instal",{"_index":100,"title":{"50":{},"41-1":{},"50-2":{},"58-1":{},"59-1":{},"63-1":{},"71-1":{},"73-1":{}},"name":{"50":{}},"text":{"1":{},"3":{},"17":{},"21":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"33":{},"36":{},"38":{},"41":{},"43":{},"47":{},"49":{},"50":{},"55":{},"57":{},"58":{},"59":{},"63":{},"68":{},"71":{},"73":{}},"component":{}}],["instanc",{"_index":66,"title":{"65":{},"14-8":{},"50-1":{},"64-2":{},"64-3":{},"64-6":{},"65-1":{},"65-2":{},"68-2":{}},"name":{"65":{}},"text":{"1":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"19":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"33":{},"35":{},"37":{},"42":{},"43":{},"46":{},"47":{},"49":{},"50":{},"52":{},"53":{},"54":{},"63":{},"64":{},"65":{},"66":{},"68":{},"70":{}},"component":{}}],["instead",{"_index":395,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"11":{},"13":{},"27":{},"28":{},"32":{},"33":{},"36":{},"41":{},"47":{},"50":{},"55":{},"57":{},"58":{},"59":{},"60":{},"65":{}},"component":{}}],["instruct",{"_index":1711,"title":{},"name":{},"text":{"21":{},"30":{},"41":{},"43":{},"55":{},"59":{},"60":{}},"component":{}}],["int",{"_index":477,"title":{},"name":{},"text":{"5":{},"6":{},"16":{}},"component":{}}],["int32",{"_index":793,"title":{},"name":{},"text":{"7":{}},"component":{}}],["int64",{"_index":2415,"title":{},"name":{},"text":{"36":{}},"component":{}}],["integ",{"_index":549,"title":{},"name":{},"text":{"6":{},"7":{},"11":{},"14":{},"23":{},"36":{}},"component":{}}],["integer)iter.next",{"_index":752,"title":{},"name":{},"text":{"6":{}},"component":{}}],["integr",{"_index":14,"title":{"23":{},"29":{},"67":{},"68":{},"70":{},"1-10":{},"27-1":{},"51-4":{}},"name":{"23":{},"29":{},"38":{},"67":{},"68":{},"70":{}},"text":{"1":{},"3":{},"6":{},"23":{},"26":{},"27":{},"29":{},"30":{},"31":{},"35":{},"38":{},"42":{},"43":{},"46":{},"51":{},"54":{},"63":{},"66":{},"67":{},"68":{},"69":{},"70":{}},"component":{}}],["intend",{"_index":707,"title":{},"name":{},"text":{"6":{},"46":{}},"component":{}}],["interact",{"_index":164,"title":{"28-1":{},"28-2":{},"28-3":{}},"name":{},"text":{"1":{},"6":{},"10":{},"11":{},"14":{},"15":{},"17":{},"18":{},"27":{},"28":{},"29":{},"33":{},"42":{},"45":{}},"component":{}}],["interceptor",{"_index":3303,"title":{},"name":{},"text":{"60":{}},"component":{}}],["interfac",{"_index":543,"title":{},"name":{},"text":{"6":{},"16":{},"24":{},"26":{},"36":{},"43":{},"49":{},"54":{},"55":{},"57":{},"58":{},"59":{},"63":{},"68":{},"69":{}},"component":{}}],["intermedi",{"_index":2243,"title":{},"name":{},"text":{"33":{}},"component":{}}],["intern",{"_index":56,"title":{},"name":{},"text":{"1":{},"14":{},"19":{},"25":{},"26":{},"35":{},"36":{},"42":{},"45":{},"47":{},"51":{},"54":{},"59":{}},"component":{}}],["internalexecut",{"_index":702,"title":{},"name":{},"text":{"6":{}},"component":{}}],["internalexecute(kogitoworkitem",{"_index":741,"title":{},"name":{},"text":{"6":{}},"component":{}}],["interpol",{"_index":531,"title":{},"name":{},"text":{"6":{}},"component":{}}],["interpret",{"_index":309,"title":{},"name":{},"text":{"3":{}},"component":{}}],["interrupt",{"_index":851,"title":{},"name":{},"text":{"9":{}},"component":{}}],["interruptedexcept",{"_index":2578,"title":{},"name":{},"text":{"42":{}},"component":{}}],["interv",{"_index":1769,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["introduc",{"_index":1442,"title":{},"name":{},"text":{"18":{},"45":{},"53":{}},"component":{}}],["introduct",{"_index":160,"title":{"27":{},"49-1":{}},"name":{},"text":{"1":{}},"component":{}}],["invalid",{"_index":2237,"title":{},"name":{},"text":{"33":{},"49":{}},"component":{}}],["invoc",{"_index":43,"title":{},"name":{},"text":{"1":{},"4":{},"10":{},"11":{},"12":{},"20":{},"32":{},"33":{},"36":{},"53":{}},"component":{}}],["invok",{"_index":154,"title":{"24":{}},"name":{},"text":{"1":{},"6":{},"10":{},"11":{},"20":{},"21":{},"24":{},"32":{},"34":{},"35":{},"36":{},"37":{},"45":{},"55":{}},"component":{}}],["invokefunct",{"_index":641,"title":{},"name":{},"text":{"6":{}},"component":{}}],["io",{"_index":755,"title":{},"name":{},"text":{"6":{}},"component":{}}],["io.qua.run.con.configrecord",{"_index":1674,"title":{},"name":{},"text":{"21":{}},"component":{}}],["io.quarku",{"_index":1414,"title":{},"name":{},"text":{"17":{},"18":{},"21":{},"28":{},"29":{},"30":{},"32":{},"38":{},"42":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["io.quarkus.deployment.quarkusaugmentor",{"_index":2512,"title":{},"name":{},"text":{"38":{}},"component":{}}],["io.quarkus.platform:quarku",{"_index":1591,"title":{},"name":{},"text":{"21":{}},"component":{}}],["io.quarkus.test.common.quarkustestresourc",{"_index":2654,"title":{},"name":{},"text":{"43":{}},"component":{}}],["io.quarkus.test.common.quarkustestresourcelifecyclemanag",{"_index":2637,"title":{},"name":{},"text":{"43":{}},"component":{}}],["io.quarkus.test.junit.quarkustest",{"_index":2457,"title":{},"name":{},"text":{"38":{},"43":{}},"component":{}}],["io.quarkus:quarku",{"_index":3177,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["io.rest",{"_index":1976,"title":{},"name":{},"text":{"29":{},"38":{},"42":{}},"component":{}}],["io.restassured.http.contenttyp",{"_index":2459,"title":{},"name":{},"text":{"38":{}},"component":{}}],["io.restassured.restassur",{"_index":2458,"title":{},"name":{},"text":{"38":{}},"component":{}}],["io.restassured.restassured.given",{"_index":2462,"title":{},"name":{},"text":{"38":{}},"component":{}}],["io.zon.tes.db.pos.emb.defaultpostgresbinaryresolv",{"_index":1651,"title":{},"name":{},"text":{"21":{}},"component":{}}],["io.zon.tes.db.pos.emb.embeddedpostgr",{"_index":1645,"title":{},"name":{},"text":{"21":{}},"component":{}}],["ioexcept",{"_index":754,"title":{},"name":{},"text":{"6":{},"43":{}},"component":{}}],["ip",{"_index":3116,"title":{},"name":{},"text":{"57":{}},"component":{}}],["iseven",{"_index":1000,"title":{},"name":{},"text":{"11":{}},"component":{}}],["isnul",{"_index":1159,"title":{},"name":{},"text":{"14":{}},"component":{}}],["iso",{"_index":833,"title":{},"name":{},"text":{"9":{}},"component":{}}],["isol",{"_index":2613,"title":{},"name":{},"text":{"43":{}},"component":{}}],["issu",{"_index":311,"title":{"51":{},"4-13":{},"5-1":{},"6-22":{},"7-6":{},"8-3":{},"9-11":{},"10-5":{},"11-4":{},"12-3":{},"13-5":{},"14-16":{},"15-4":{},"16-9":{},"17-7":{},"18-5":{},"19-3":{},"20-3":{},"21-7":{},"22-1":{},"23-6":{},"24-3":{},"25-6":{},"26-5":{},"27-17":{},"28-5":{},"29-4":{},"30-3":{},"31-9":{},"32-8":{},"33-5":{},"34-10":{},"35-7":{},"36-7":{},"37-4":{},"38-2":{},"41-7":{},"42-5":{},"43-5":{},"45-5":{},"46-11":{},"47-14":{},"48-4":{},"49-14":{},"50-5":{},"53-4":{},"54-5":{},"55-6":{},"57-6":{},"58-6":{},"59-7":{},"60-8":{},"62-6":{},"63-2":{},"64-8":{},"65-3":{},"66-3":{},"67-4":{},"68-3":{},"69-3":{},"70-3":{},"71-3":{},"72-3":{},"73-7":{}},"name":{"51":{}},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["istio",{"_index":3238,"title":{},"name":{},"text":{"59":{}},"component":{}}],["iswinn",{"_index":3040,"title":{},"name":{},"text":{"53":{}},"component":{}}],["item",{"_index":687,"title":{},"name":{},"text":{"6":{},"8":{},"45":{},"73":{}},"component":{}}],["iter",{"_index":303,"title":{},"name":{},"text":{"3":{},"6":{}},"component":{}}],["itself",{"_index":1121,"title":{},"name":{},"text":{"14":{}},"component":{}}],["it’",{"_index":292,"title":{},"name":{},"text":{"3":{},"6":{},"14":{},"48":{},"49":{}},"component":{}}],["it’ll",{"_index":1932,"title":{},"name":{},"text":{"27":{}},"component":{}}],["jackson",{"_index":454,"title":{},"name":{},"text":{"5":{},"21":{},"38":{}},"component":{}}],["jackson,quarku",{"_index":1596,"title":{},"name":{},"text":{"21":{}},"component":{}}],["jackson’",{"_index":559,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["jan",{"_index":2374,"title":{},"name":{},"text":{"35":{}},"component":{}}],["jane",{"_index":2954,"title":{},"name":{},"text":{"49":{}},"component":{}}],["jar",{"_index":1610,"title":{},"name":{},"text":{"21":{},"29":{},"33":{},"34":{},"38":{},"60":{}},"component":{}}],["java",{"_index":245,"title":{"6-2":{},"27-6":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"12":{},"21":{},"23":{},"27":{},"30":{},"33":{},"34":{},"36":{},"37":{},"38":{},"41":{},"45":{},"49":{},"60":{}},"component":{}}],["java.io.ioexcept",{"_index":2638,"title":{},"name":{},"text":{"43":{}},"component":{}}],["java.io.uncheckedioexcept",{"_index":2639,"title":{},"name":{},"text":{"43":{}},"component":{}}],["java.lang.except",{"_index":2150,"title":{},"name":{},"text":{"33":{}},"component":{}}],["java.lang.illegalstateexcept",{"_index":982,"title":{},"name":{},"text":{"11":{}},"component":{}}],["java.lang.runtimeexcept",{"_index":981,"title":{},"name":{},"text":{"11":{}},"component":{}}],["java.util.map",{"_index":2640,"title":{},"name":{},"text":{"43":{}},"component":{}}],["java_app_jar=\\\"/deployments/quarku",{"_index":2862,"title":{},"name":{},"text":{"47":{}},"component":{}}],["java_hom",{"_index":1576,"title":{},"name":{},"text":{"21":{}},"component":{}}],["java_opt",{"_index":1881,"title":{},"name":{},"text":{"27":{},"47":{}},"component":{}}],["javax.enterprise.context.applicationscop",{"_index":2167,"title":{},"name":{},"text":{"33":{}},"component":{}}],["javi",{"_index":2364,"title":{},"name":{},"text":{"35":{}},"component":{}}],["javierito",{"_index":1566,"title":{},"name":{},"text":{"20":{},"35":{}},"component":{}}],["javierito\\nhello",{"_index":2378,"title":{},"name":{},"text":{"35":{}},"component":{}}],["jboss",{"_index":2481,"title":{},"name":{},"text":{"38":{}},"component":{}}],["jdbc",{"_index":419,"title":{},"name":{},"text":{"5":{},"19":{},"21":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["jdbc:postgresql://newslett",{"_index":1327,"title":{},"name":{},"text":{"16":{}},"component":{}}],["jdbc:postgresql://postgres:5432/kogito",{"_index":1295,"title":{},"name":{},"text":{"16":{}},"component":{}}],["jdbc:postgresql://timeout",{"_index":1876,"title":{},"name":{},"text":{"27":{}},"component":{}}],["jib",{"_index":1413,"title":{},"name":{},"text":{"17":{},"41":{},"55":{}},"component":{}}],["job",{"_index":15,"title":{"28":{},"1-11":{},"14-8":{},"14-14":{},"27-2":{},"28-4":{}},"name":{},"text":{"1":{},"9":{},"14":{},"16":{},"27":{},"28":{},"46":{}},"component":{}}],["job.creat",{"_index":1940,"title":{},"name":{},"text":{"27":{}},"component":{}}],["job.delet",{"_index":1942,"title":{},"name":{},"text":{"27":{}},"component":{}}],["job_nam",{"_index":1774,"title":{},"name":{},"text":{"25":{}},"component":{}}],["jobcancel",{"_index":1234,"title":{},"name":{},"text":{"14":{}},"component":{}}],["jobev",{"_index":1256,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["jobreschedul",{"_index":1229,"title":{},"name":{},"text":{"14":{}},"component":{}}],["jobs_service_persist",{"_index":1871,"title":{},"name":{},"text":{"27":{}},"component":{}}],["jobs_service_persistence=postgresql",{"_index":1872,"title":{},"name":{},"text":{"27":{}},"component":{}}],["john",{"_index":2357,"title":{},"name":{},"text":{"35":{},"38":{},"47":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["john\"},{\"message\":\"saludo",{"_index":2371,"title":{},"name":{},"text":{"35":{}},"component":{}}],["john\\nhello",{"_index":2379,"title":{},"name":{},"text":{"35":{}},"component":{}}],["jpi",{"_index":2238,"title":{},"name":{},"text":{"33":{}},"component":{}}],["jq",{"_index":79,"title":{"10":{},"10-1":{},"10-2":{},"10-3":{}},"name":{"10":{}},"text":{"1":{},"4":{},"6":{},"10":{},"21":{},"23":{},"36":{},"38":{},"49":{}},"component":{}}],["jre8",{"_index":2566,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["json",{"_index":95,"title":{"6-15":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"10":{},"11":{},"21":{},"23":{},"26":{},"33":{},"35":{},"38":{},"43":{},"47":{},"49":{},"55":{},"57":{},"58":{},"59":{},"64":{},"65":{},"69":{},"72":{},"73":{}},"component":{}}],["jsonata",{"_index":1806,"title":{},"name":{},"text":{"26":{}},"component":{}}],["jsoncloudeventdata",{"_index":1054,"title":{},"name":{},"text":{"12":{}},"component":{}}],["jsongreet",{"_index":1787,"title":{},"name":{},"text":{"25":{}},"component":{}}],["jsonnod",{"_index":560,"title":{},"name":{},"text":{"6":{},"23":{},"43":{}},"component":{}}],["jsonp",{"_index":2540,"title":{},"name":{},"text":{"41":{}},"component":{}}],["jsonp,quarku",{"_index":1601,"title":{},"name":{},"text":{"21":{},"41":{}},"component":{}}],["jsonpath",{"_index":380,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["jsonpath=\"{.spec.template.spec.containers[?(@.name=='manager')].imag",{"_index":3009,"title":{},"name":{},"text":{"50":{}},"component":{}}],["jsonpath='{..namespac",{"_index":3144,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["jsonpath={.statu",{"_index":3056,"title":{},"name":{},"text":{"54":{}},"component":{}}],["jsonpath={.status.condit",{"_index":2966,"title":{},"name":{},"text":{"49":{}},"component":{}}],["jsonprocessingexcept",{"_index":1043,"title":{},"name":{},"text":{"12":{},"37":{},"42":{}},"component":{}}],["jta",{"_index":1698,"title":{},"name":{},"text":{"21":{}},"component":{}}],["junit5",{"_index":1975,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["jvm",{"_index":1629,"title":{},"name":{},"text":{"21":{},"29":{},"38":{},"42":{},"55":{}},"component":{}}],["k8",{"_index":1768,"title":{},"name":{},"text":{"25":{},"47":{},"49":{}},"component":{}}],["k_sink",{"_index":1257,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"28":{}},"component":{}}],["k_sink:http://localhost:9090",{"_index":1364,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kafka",{"_index":119,"title":{"18":{},"14-13":{},"16-4":{},"27-15":{},"28-2":{}},"name":{"18":{}},"text":{"1":{},"5":{},"8":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"27":{},"28":{}},"component":{}}],["kafka,kogito",{"_index":1970,"title":{},"name":{},"text":{"28":{}},"component":{}}],["kafka.bootstrap.serv",{"_index":1954,"title":{},"name":{},"text":{"27":{}},"component":{}}],["kafka_bootstrap_serv",{"_index":1946,"title":{},"name":{},"text":{"27":{}},"component":{}}],["kaniko",{"_index":2810,"title":{},"name":{},"text":{"47":{}},"component":{}}],["kanikobuildcacheen",{"_index":2885,"title":{},"name":{},"text":{"47":{}},"component":{}}],["kaoto",{"_index":1719,"title":{},"name":{},"text":{"23":{}},"component":{}}],["kebab",{"_index":3339,"title":{},"name":{},"text":{"65":{}},"component":{}}],["keep",{"_index":1866,"title":{},"name":{},"text":{"27":{},"45":{}},"component":{}}],["key",{"_index":457,"title":{"32-4":{},"64-5":{}},"name":{},"text":{"5":{},"6":{},"14":{},"26":{},"32":{},"34":{},"35":{},"36":{},"48":{},"64":{},"65":{},"73":{}},"component":{}}],["key/valu",{"_index":606,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["key1",{"_index":602,"title":{},"name":{},"text":{"6":{}},"component":{}}],["key2",{"_index":604,"title":{},"name":{},"text":{"6":{}},"component":{}}],["key=my_key",{"_index":2089,"title":{},"name":{},"text":{"32":{}},"component":{}}],["keycloak",{"_index":2136,"title":{},"name":{},"text":{"33":{}},"component":{}}],["keyword",{"_index":538,"title":{},"name":{},"text":{"6":{}},"component":{}}],["kgto",{"_index":2309,"title":{},"name":{},"text":{"34":{}},"component":{}}],["kie",{"_index":2519,"title":{},"name":{},"text":{"41":{},"71":{},"73":{}},"component":{}}],["kind",{"_index":1250,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"25":{},"27":{},"31":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["kind=postgresql",{"_index":2007,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["kn",{"_index":617,"title":{},"name":{"41":{}},"text":{"6":{},"17":{},"21":{},"24":{},"41":{},"57":{},"58":{},"59":{}},"component":{}}],["knativ",{"_index":120,"title":{"17":{},"24":{},"41":{},"6-11":{},"14-12":{},"16-5":{},"17-1":{},"17-2":{},"17-4":{},"17-5":{},"27-13":{},"27-14":{},"28-1":{},"41-1":{},"41-2":{},"41-3":{},"41-5":{},"51-4":{},"57-1":{},"57-3":{},"58-1":{},"58-3":{},"59-4":{}},"name":{"17":{},"24":{},"61":{}},"text":{"1":{},"6":{},"8":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"24":{},"27":{},"28":{},"36":{},"37":{},"41":{},"42":{},"46":{},"51":{},"54":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["knative.json",{"_index":3183,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["knative.yml",{"_index":1419,"title":{},"name":{},"text":{"17":{},"28":{},"41":{},"57":{},"58":{},"59":{}},"component":{}}],["knative/kubernet",{"_index":3027,"title":{},"name":{},"text":{"51":{}},"component":{}}],["knative:services.v1.serving.knative.dev/custom",{"_index":627,"title":{},"name":{},"text":{"6":{},"24":{}},"component":{}}],["knative:services.v1.serving.knative.dev/my_different_namespace/custom",{"_index":636,"title":{},"name":{},"text":{"6":{}},"component":{}}],["know",{"_index":718,"title":{},"name":{},"text":{"6":{},"49":{}},"component":{}}],["known",{"_index":310,"title":{"51":{}},"name":{"51":{}},"text":{"3":{},"14":{},"35":{},"45":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"60":{},"68":{}},"component":{}}],["ko.loc",{"_index":3215,"title":{},"name":{},"text":{"58":{}},"component":{}}],["kogito",{"_index":20,"title":{"1":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"19":{},"22":{},"24":{},"29":{},"32":{},"37":{},"41":{},"45":{},"46":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"6-6":{},"14-1":{},"23-1":{},"23-2":{},"25-1":{},"25-2":{},"25-5":{},"41-1":{},"46-5":{},"50-2":{},"60-4":{},"63-1":{},"66-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"73":{}},"component":{}}],["kogito.addon.kn",{"_index":672,"title":{},"name":{},"text":{"6":{}},"component":{}}],["kogito.addon.messaging.emitter..buff",{"_index":1475,"title":{},"name":{},"text":{"18":{}},"component":{}}],["kogito.addon.messaging.emitter..overflow",{"_index":1470,"title":{},"name":{},"text":{"18":{}},"component":{}}],["kogito.addon.messaging.emitter.overflow",{"_index":1484,"title":{},"name":{},"text":{"18":{}},"component":{}}],["kogito.addon.messaging.emitter.wait.buff",{"_index":1480,"title":{},"name":{},"text":{"18":{}},"component":{}}],["kogito.addon.messaging.emitter.wait.overflow",{"_index":1478,"title":{},"name":{},"text":{"18":{}},"component":{}}],["kogito.addon.messaging.incoming.defaultnam",{"_index":444,"title":{},"name":{},"text":{"5":{},"18":{}},"component":{}}],["kogito.addon.messaging.outgoing.defaultnam",{"_index":448,"title":{},"name":{},"text":{"5":{},"18":{}},"component":{}}],["kogito.grpc.enum.includedefault",{"_index":467,"title":{},"name":{},"text":{"5":{},"35":{}},"component":{}}],["kogito.grpc.stream.timeout",{"_index":471,"title":{},"name":{},"text":{"5":{}},"component":{}}],["kogito.jackson.fail",{"_index":451,"title":{},"name":{},"text":{"5":{}},"component":{}}],["kogito.job",{"_index":1892,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["kogito.loanbroker.aggregated.quotes.respons",{"_index":1430,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kogito.messaging.a",{"_index":443,"title":{},"name":{},"text":{"5":{}},"component":{}}],["kogito.persistence.optimistic.lock",{"_index":429,"title":{},"name":{},"text":{"5":{},"30":{}},"component":{}}],["kogito.persistence.optimistic.lock=tru",{"_index":2014,"title":{},"name":{},"text":{"30":{}},"component":{}}],["kogito.persistence.query.timeout.milli",{"_index":425,"title":{},"name":{},"text":{"5":{},"16":{},"30":{}},"component":{}}],["kogito.persistence.typ",{"_index":418,"title":{},"name":{},"text":{"5":{},"30":{}},"component":{}}],["kogito.persistence.type=jdbc",{"_index":2005,"title":{},"name":{},"text":{"30":{}},"component":{}}],["kogito.quarkus.events.threads.pools",{"_index":479,"title":{},"name":{},"text":{"5":{}},"component":{}}],["kogito.quarkus.events.threads.queues",{"_index":484,"title":{},"name":{},"text":{"5":{}},"component":{}}],["kogito.serverless.loanbroker.aggregated.quotes.respons",{"_index":1406,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kogito.service.url",{"_index":438,"title":{},"name":{},"text":{"5":{}},"component":{}}],["kogito.sw.operationidstrategi",{"_index":456,"title":{},"name":{},"text":{"5":{},"34":{}},"component":{}}],["kogito.sw.request.quot",{"_index":1428,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kogito.sw.states.foreach.outputvarnam",{"_index":463,"title":{},"name":{},"text":{"5":{}},"component":{}}],["kogito.swf.serviceregistri",{"_index":3411,"title":{},"name":{},"text":{"73":{}},"component":{}}],["kogito.swf.stunner.enabled(default",{"_index":3336,"title":{},"name":{},"text":{"65":{}},"component":{}}],["kogito.workflow.vers",{"_index":435,"title":{},"name":{},"text":{"5":{},"30":{}},"component":{}}],["kogito.yml",{"_index":1420,"title":{},"name":{},"text":{"17":{},"28":{},"41":{}},"component":{}}],["kogito/serverless/loanbroker/aggreg",{"_index":1431,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kogito_data_index_quarkus_profil",{"_index":1246,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["kogito_incoming_stream",{"_index":447,"title":{},"name":{},"text":{"5":{},"18":{}},"component":{}}],["kogito_jobs_service_backoffretrymilli",{"_index":1887,"title":{},"name":{},"text":{"27":{}},"component":{}}],["kogito_jobs_service_http_job_status_change_ev",{"_index":1935,"title":{},"name":{},"text":{"27":{}},"component":{}}],["kogito_jobs_service_kafka_job_status_change_ev",{"_index":1945,"title":{},"name":{},"text":{"27":{}},"component":{}}],["kogito_jobs_service_maxintervallimittoretrymilli",{"_index":1890,"title":{},"name":{},"text":{"27":{}},"component":{}}],["kogito_jobs_service_url",{"_index":1972,"title":{},"name":{},"text":{"28":{}},"component":{}}],["kogito_outgoing_stream",{"_index":450,"title":{},"name":{},"text":{"5":{},"18":{}},"component":{}}],["kogito_process_instance_completed_tot",{"_index":1781,"title":{},"name":{},"text":{"25":{},"26":{}},"component":{}}],["kogito_process_instance_completed_total{app_id=\"default",{"_index":1790,"title":{},"name":{},"text":{"25":{}},"component":{}}],["kogito_process_instance_duration_seconds_sum",{"_index":1784,"title":{},"name":{},"text":{"25":{},"26":{}},"component":{}}],["kogito_process_instance_running_tot",{"_index":1783,"title":{},"name":{},"text":{"25":{},"26":{}},"component":{}}],["kogito_process_instance_started_tot",{"_index":1782,"title":{},"name":{},"text":{"25":{},"26":{}},"component":{}}],["kogito_version_redhat",{"_index":3340,"title":{},"name":{},"text":{"65":{}},"component":{}}],["kogitobusinesskey",{"_index":3329,"title":{},"name":{},"text":{"64":{}},"component":{}}],["kogitoprocesscontext",{"_index":584,"title":{},"name":{},"text":{"6":{}},"component":{}}],["kogitoprocid",{"_index":1532,"title":{},"name":{},"text":{"19":{}},"component":{}}],["kogitoprocinstanceid",{"_index":1047,"title":{},"name":{},"text":{"12":{},"19":{},"37":{}},"component":{}}],["kogitoprocrefid",{"_index":820,"title":{},"name":{},"text":{"8":{},"12":{},"37":{},"65":{}},"component":{}}],["kogitoproctyp",{"_index":1535,"title":{},"name":{},"text":{"19":{}},"component":{}}],["kogitoprocvers",{"_index":1533,"title":{},"name":{},"text":{"19":{}},"component":{}}],["kogitousertaskist",{"_index":1534,"title":{},"name":{},"text":{"19":{}},"component":{}}],["kogitoworkitemhandl",{"_index":737,"title":{},"name":{},"text":{"6":{}},"component":{}}],["kourier",{"_index":3137,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["kubectl",{"_index":1423,"title":{},"name":{},"text":{"17":{},"24":{},"28":{},"41":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"57":{},"58":{}},"component":{}}],["kubectl=\"minikub",{"_index":3210,"title":{},"name":{},"text":{"58":{}},"component":{}}],["kubernet",{"_index":151,"title":{"57":{},"60":{},"3-1":{},"3-2":{},"47-5":{},"57-1":{},"57-2":{},"57-4":{},"58-4":{},"60-1":{},"60-2":{},"60-3":{},"60-4":{},"60-5":{}},"name":{"57":{},"60":{}},"text":{"1":{},"3":{},"16":{},"17":{},"24":{},"25":{},"27":{},"28":{},"34":{},"36":{},"41":{},"42":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"68":{}},"component":{}}],["kubernetes,quarku",{"_index":1412,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kubernetes/kn",{"_index":2802,"title":{},"name":{},"text":{"46":{}},"component":{}}],["kubernetes:2.16.8.fin",{"_index":3178,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["kubernetes:pods.v1//?labels=label",{"_index":3285,"title":{},"name":{},"text":{"60":{}},"component":{}}],["kubernetes_namespac",{"_index":1322,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["l",{"_index":2706,"title":{},"name":{},"text":{"45":{}},"component":{}}],["l[0",{"_index":1812,"title":{},"name":{},"text":{"26":{}},"component":{}}],["l[1",{"_index":1817,"title":{},"name":{},"text":{"26":{}},"component":{}}],["l[2",{"_index":1818,"title":{},"name":{},"text":{"26":{}},"component":{}}],["label",{"_index":507,"title":{},"name":{},"text":{"5":{},"16":{},"25":{},"26":{},"48":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["label=anoth",{"_index":3284,"title":{},"name":{},"text":{"60":{}},"component":{}}],["label=oth",{"_index":3273,"title":{},"name":{},"text":{"60":{}},"component":{}}],["labels=label",{"_index":3270,"title":{},"name":{},"text":{"60":{}},"component":{}}],["lack",{"_index":2973,"title":{},"name":{},"text":{"49":{}},"component":{}}],["lang='en_us.utf",{"_index":2841,"title":{},"name":{},"text":{"47":{}},"component":{}}],["languag",{"_index":385,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"35":{},"42":{},"47":{},"49":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["language\":\"czech",{"_index":2375,"title":{},"name":{},"text":{"35":{}},"component":{}}],["language\":\"english",{"_index":2373,"title":{},"name":{},"text":{"35":{}},"component":{}}],["language\":\"english\"},{\"nam",{"_index":2381,"title":{},"name":{},"text":{"35":{}},"component":{}}],["language\":\"spanish",{"_index":2372,"title":{},"name":{},"text":{"35":{}},"component":{}}],["language\":\"spanish\"},{\"nam",{"_index":2380,"title":{},"name":{},"text":{"35":{}},"component":{}}],["language='en_us:en'\\n",{"_index":2842,"title":{},"name":{},"text":{"47":{}},"component":{}}],["language=2",{"_index":2340,"title":{},"name":{},"text":{"35":{}},"component":{}}],["larg",{"_index":1488,"title":{},"name":{},"text":{"19":{}},"component":{}}],["last",{"_index":585,"title":{},"name":{},"text":{"6":{},"11":{},"27":{},"54":{},"62":{},"65":{}},"component":{}}],["later",{"_index":2207,"title":{},"name":{},"text":{"33":{},"41":{},"57":{},"58":{},"59":{},"66":{},"73":{}},"component":{}}],["latest",{"_index":618,"title":{},"name":{},"text":{"6":{},"24":{},"31":{},"41":{},"49":{},"55":{},"57":{},"58":{},"59":{},"68":{},"73":{}},"component":{}}],["latter",{"_index":788,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["launch",{"_index":1180,"title":{},"name":{},"text":{"14":{},"29":{},"33":{}},"component":{}}],["layer",{"_index":1279,"title":{},"name":{},"text":{"16":{},"47":{}},"component":{}}],["lead",{"_index":3327,"title":{},"name":{},"text":{"64":{},"65":{}},"component":{}}],["leader",{"_index":1854,"title":{"27-16":{}},"name":{},"text":{"27":{}},"component":{}}],["learn",{"_index":67,"title":{},"name":{},"text":{"1":{},"3":{}},"component":{}}],["leav",{"_index":2668,"title":{},"name":{},"text":{"45":{}},"component":{}}],["left",{"_index":939,"title":{},"name":{},"text":{"10":{},"68":{}},"component":{}}],["leftel",{"_index":936,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["legaci",{"_index":708,"title":{},"name":{},"text":{"6":{}},"component":{}}],["lessthan",{"_index":1166,"title":{},"name":{},"text":{"14":{}},"component":{}}],["lessthanequ",{"_index":1167,"title":{},"name":{},"text":{"14":{}},"component":{}}],["letsgetloud",{"_index":814,"title":{},"name":{},"text":{"8":{}},"component":{}}],["letter",{"_index":1114,"title":{},"name":{},"text":{"13":{}},"component":{}}],["let’",{"_index":1548,"title":{},"name":{},"text":{"20":{},"59":{}},"component":{}}],["level",{"_index":521,"title":{},"name":{},"text":{"6":{},"7":{},"27":{},"46":{}},"component":{}}],["leverag",{"_index":1336,"title":{},"name":{},"text":{"16":{},"21":{},"34":{},"36":{},"57":{},"58":{},"59":{}},"component":{}}],["librari",{"_index":2447,"title":{},"name":{},"text":{"38":{},"47":{}},"component":{}}],["life",{"_index":1853,"title":{"27-2":{}},"name":{},"text":{},"component":{}}],["lifetim",{"_index":2598,"title":{},"name":{},"text":{"42":{}},"component":{}}],["lightweight",{"_index":63,"title":{},"name":{},"text":{"1":{}},"component":{}}],["limit",{"_index":312,"title":{"51":{}},"name":{},"text":{"3":{},"4":{},"14":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"54":{}},"component":{}}],["line",{"_index":1422,"title":{},"name":{},"text":{"17":{},"22":{},"24":{},"31":{},"41":{},"47":{},"50":{},"55":{},"57":{},"58":{},"59":{},"63":{}},"component":{}}],["link",{"_index":1805,"title":{},"name":{},"text":{"26":{},"29":{},"31":{},"57":{},"58":{},"59":{},"62":{},"64":{},"65":{},"68":{}},"component":{}}],["link:{spec_doc_url}#ev",{"_index":352,"title":{},"name":{},"text":{"4":{}},"component":{}}],["linux",{"_index":1647,"title":{},"name":{},"text":{"21":{},"55":{}},"component":{}}],["list",{"_index":283,"title":{},"name":{},"text":{"3":{},"6":{},"14":{},"17":{},"18":{},"24":{},"26":{},"27":{},"32":{},"34":{},"41":{},"48":{},"49":{},"54":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"70":{},"73":{}},"component":{}}],["listen",{"_index":499,"title":{},"name":{},"text":{"5":{},"8":{},"12":{},"16":{},"17":{},"21":{},"37":{},"38":{},"42":{}},"component":{}}],["listener\",artifactid=\"kogito",{"_index":1791,"title":{},"name":{},"text":{"25":{}},"component":{}}],["liter",{"_index":917,"title":{},"name":{},"text":{"10":{}},"component":{}}],["live",{"_index":1633,"title":{},"name":{},"text":{"21":{},"66":{}},"component":{}}],["livenessprob",{"_index":3193,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["load",{"_index":3159,"title":{"73-5":{}},"name":{},"text":{"57":{},"58":{},"59":{},"67":{},"71":{},"73":{}},"component":{}}],["loadbalanc",{"_index":3226,"title":{},"name":{},"text":{"58":{}},"component":{}}],["loanbrok",{"_index":1434,"title":{},"name":{},"text":{"17":{}},"component":{}}],["local",{"_index":322,"title":{"59-1":{}},"name":{},"text":{"3":{},"17":{},"21":{},"22":{},"27":{},"41":{},"47":{},"58":{},"59":{},"67":{},"73":{}},"component":{}}],["local/curl",{"_index":1405,"title":{},"name":{},"text":{"17":{}},"component":{}}],["local/quarku",{"_index":3328,"title":{},"name":{},"text":{"64":{},"65":{}},"component":{}}],["localhost:5000",{"_index":2986,"title":{},"name":{},"text":{"50":{}},"component":{}}],["localhost:8080",{"_index":1562,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["localhost:9092",{"_index":1551,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["locat",{"_index":1550,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"31":{},"33":{},"35":{},"36":{},"53":{}},"component":{}}],["lock",{"_index":433,"title":{},"name":{},"text":{"5":{},"30":{},"33":{}},"component":{}}],["log",{"_index":518,"title":{},"name":{},"text":{"6":{},"7":{},"21":{},"23":{},"38":{},"41":{},"45":{},"47":{},"49":{},"50":{},"54":{},"59":{},"60":{},"68":{},"73":{}},"component":{}}],["logger",{"_index":492,"title":{},"name":{},"text":{"5":{}},"component":{}}],["logger.info(\"about",{"_index":2437,"title":{},"name":{},"text":{"37":{}},"component":{}}],["logic",{"_index":104,"title":{"66":{},"67":{},"68":{},"69":{},"67-1":{},"68-2":{},"69-1":{}},"name":{"66":{},"67":{},"68":{},"69":{},"70":{}},"text":{"1":{},"6":{},"13":{},"22":{},"43":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{}},"component":{}}],["login",{"_index":2559,"title":{},"name":{},"text":{"41":{},"47":{},"59":{},"68":{},"73":{}},"component":{}}],["loginfo",{"_index":519,"title":{},"name":{},"text":{"6":{}},"component":{}}],["logist",{"_index":2675,"title":{},"name":{},"text":{"45":{}},"component":{}}],["logrout",{"_index":1733,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logroutereplacehead",{"_index":1737,"title":{},"name":{},"text":{"23":{}},"component":{}}],["long",{"_index":427,"title":{},"name":{},"text":{"5":{},"6":{},"9":{},"16":{},"27":{},"30":{},"49":{}},"component":{}}],["look",{"_index":297,"title":{},"name":{},"text":{"3":{},"6":{},"49":{},"57":{},"60":{},"64":{}},"component":{}}],["lookup",{"_index":1821,"title":{},"name":{},"text":{"26":{}},"component":{}}],["loop",{"_index":465,"title":{},"name":{},"text":{"5":{},"58":{}},"component":{}}],["lost",{"_index":1542,"title":{},"name":{},"text":{"19":{},"27":{}},"component":{}}],["low",{"_index":2803,"title":{},"name":{},"text":{"46":{}},"component":{}}],["m1",{"_index":3236,"title":{},"name":{},"text":{"59":{}},"component":{}}],["mac",{"_index":2521,"title":{},"name":{},"text":{"41":{},"58":{},"59":{}},"component":{}}],["machin",{"_index":2981,"title":{},"name":{},"text":{"50":{},"58":{}},"component":{}}],["maco",{"_index":3365,"title":{},"name":{},"text":{"68":{}},"component":{}}],["made",{"_index":1868,"title":{},"name":{},"text":{"27":{},"45":{}},"component":{}}],["magic",{"_index":3146,"title":{},"name":{},"text":{"57":{}},"component":{}}],["main",{"_index":1333,"title":{},"name":{},"text":{"16":{},"21":{},"27":{},"38":{},"55":{},"72":{},"73":{}},"component":{}}],["mainten",{"_index":1270,"title":{},"name":{},"text":{"15":{}},"component":{}}],["major",{"_index":3012,"title":{},"name":{},"text":{"50":{}},"component":{}}],["make",{"_index":881,"title":{},"name":{},"text":{"9":{},"14":{},"20":{},"27":{},"30":{},"37":{},"47":{},"49":{},"53":{},"54":{},"57":{},"59":{},"60":{},"65":{},"71":{},"72":{},"73":{}},"component":{}}],["manag",{"_index":68,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"12":{},"14":{},"15":{},"16":{},"18":{},"22":{},"27":{},"28":{},"32":{},"33":{},"41":{},"45":{},"50":{},"51":{},"54":{},"58":{},"63":{},"65":{},"70":{}},"component":{}}],["mandatori",{"_index":646,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"31":{}},"component":{}}],["mani",{"_index":1476,"title":{},"name":{},"text":{"18":{},"34":{},"53":{},"54":{}},"component":{}}],["manipul",{"_index":81,"title":{},"name":{},"text":{"1":{},"4":{}},"component":{}}],["manner",{"_index":987,"title":{},"name":{},"text":{"11":{}},"component":{}}],["mantra",{"_index":1574,"title":{},"name":{},"text":{"21":{}},"component":{}}],["manual",{"_index":289,"title":{"17-3":{},"31-4":{}},"name":{},"text":{"3":{},"17":{},"25":{},"27":{},"28":{},"30":{},"31":{},"35":{},"57":{},"58":{},"59":{},"64":{}},"component":{}}],["map",{"_index":703,"title":{"18-2":{}},"name":{},"text":{"6":{},"11":{},"12":{},"18":{},"26":{},"32":{},"34":{},"35":{},"36":{},"42":{},"43":{},"47":{},"53":{}},"component":{}}],["map.of(\"quarkus.rest",{"_index":2647,"title":{},"name":{},"text":{"43":{}},"component":{}}],["mappingbuild",{"_index":2601,"title":{},"name":{},"text":{"42":{}},"component":{}}],["marketplac",{"_index":3400,"title":{},"name":{},"text":{"73":{}},"component":{}}],["marshal",{"_index":1448,"title":{},"name":{},"text":{"18":{}},"component":{}}],["match",{"_index":377,"title":{"8-1":{}},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"15":{},"16":{},"18":{},"19":{},"25":{},"32":{},"42":{},"64":{},"73":{}},"component":{}}],["matcher",{"_index":984,"title":{},"name":{},"text":{"11":{}},"component":{}}],["matchlabel",{"_index":1315,"title":{},"name":{},"text":{"16":{},"25":{},"27":{}},"component":{}}],["matter",{"_index":2315,"title":{},"name":{},"text":{"34":{},"60":{}},"component":{}}],["maven",{"_index":533,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"21":{},"23":{},"28":{},"29":{},"30":{},"33":{},"35":{},"38":{},"41":{},"42":{},"46":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["maven.hom",{"_index":1983,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["max",{"_index":945,"title":{},"name":{},"text":{"10":{}},"component":{}}],["max.x",{"_index":958,"title":{},"name":{},"text":{"10":{}},"component":{}}],["max_by(.x",{"_index":946,"title":{},"name":{},"text":{"10":{}},"component":{}}],["maxact",{"_index":956,"title":{},"name":{},"text":{"10":{}},"component":{}}],["maximum",{"_index":481,"title":{},"name":{},"text":{"5":{},"9":{},"10":{},"27":{},"46":{}},"component":{}}],["md5",{"_index":1917,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mean",{"_index":343,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"11":{},"13":{},"18":{},"19":{},"27":{},"30":{},"31":{},"32":{},"35":{},"38":{},"48":{},"49":{},"53":{},"59":{}},"component":{}}],["mechan",{"_index":678,"title":{},"name":{},"text":{"6":{},"10":{},"11":{},"12":{},"15":{},"19":{},"26":{},"27":{},"31":{},"37":{},"45":{},"64":{}},"component":{}}],["memori",{"_index":1334,"title":{},"name":{},"text":{"16":{},"17":{},"19":{},"27":{},"47":{},"50":{},"52":{}},"component":{}}],["mention",{"_index":1454,"title":{},"name":{},"text":{"18":{},"25":{},"26":{},"30":{},"37":{},"58":{},"59":{}},"component":{}}],["menu",{"_index":3345,"title":{},"name":{},"text":{"66":{},"70":{},"73":{}},"component":{}}],["merg",{"_index":570,"title":{},"name":{},"text":{"6":{},"10":{},"23":{},"33":{},"35":{},"46":{},"67":{}},"component":{}}],["mermaid",{"_index":3335,"title":{},"name":{},"text":{"65":{}},"component":{}}],["messag",{"_index":252,"title":{"27-15":{},"28-2":{}},"name":{},"text":{"2":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"35":{},"37":{},"38":{},"46":{},"47":{},"49":{},"54":{},"59":{},"64":{},"65":{},"66":{},"68":{},"70":{},"71":{}},"component":{}}],["message\":\"hello",{"_index":2383,"title":{},"name":{},"text":{"35":{}},"component":{}}],["message\":\"saludo",{"_index":2377,"title":{},"name":{},"text":{"35":{}},"component":{}}],["met",{"_index":1860,"title":{},"name":{},"text":{"27":{}},"component":{}}],["metadata",{"_index":270,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"16":{},"17":{},"25":{},"27":{},"30":{},"47":{},"48":{},"49":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["metadata.get(oper",{"_index":746,"title":{},"name":{},"text":{"6":{}},"component":{}}],["metadata.getordefault(port",{"_index":749,"title":{},"name":{},"text":{"6":{}},"component":{}}],["metadata.namespac",{"_index":1326,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["metdata",{"_index":1846,"title":{},"name":{},"text":{"26":{}},"component":{}}],["method",{"_index":52,"title":{},"name":{},"text":{"1":{},"6":{},"11":{},"12":{},"26":{},"33":{},"35":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"48":{},"51":{},"64":{},"65":{},"71":{},"73":{}},"component":{}}],["metric",{"_index":156,"title":{"25":{},"25-1":{},"25-2":{},"25-3":{},"25-4":{},"25-5":{},"26-2":{}},"name":{"25":{}},"text":{"1":{},"21":{},"23":{},"25":{},"26":{},"50":{},"66":{}},"component":{}}],["metrics_path",{"_index":1777,"title":{},"name":{},"text":{"25":{}},"component":{}}],["micoprofil",{"_index":2280,"title":{},"name":{},"text":{"34":{}},"component":{}}],["micromet",{"_index":1772,"title":{},"name":{},"text":{"25":{}},"component":{}}],["microprofil",{"_index":2070,"title":{},"name":{},"text":{"32":{},"34":{}},"component":{}}],["microservic",{"_index":2666,"title":{},"name":{},"text":{"45":{}},"component":{}}],["migrat",{"_index":145,"title":{"31":{},"52":{},"31-1":{},"31-2":{},"31-3":{},"31-5":{},"31-8":{}},"name":{"31":{},"52":{}},"text":{"1":{},"3":{},"14":{},"16":{},"30":{},"31":{},"52":{}},"component":{}}],["migrate=tru",{"_index":2046,"title":{},"name":{},"text":{"31":{}},"component":{}}],["migrations,s3:migrationsbucket,gcs:migrationsbucket",{"_index":2039,"title":{},"name":{},"text":{"31":{}},"component":{}}],["millisecond",{"_index":677,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["min",{"_index":947,"title":{},"name":{},"text":{"10":{}},"component":{}}],["min_by(.i",{"_index":948,"title":{},"name":{},"text":{"10":{}},"component":{}}],["mind",{"_index":291,"title":{},"name":{},"text":{"3":{}},"component":{}}],["minifi",{"_index":3143,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["minikub",{"_index":321,"title":{"58":{},"50-1":{},"58-1":{},"58-2":{}},"name":{"58":{}},"text":{"3":{},"16":{},"21":{},"24":{},"47":{},"49":{},"50":{},"51":{},"55":{},"58":{}},"component":{}}],["minikube’",{"_index":3228,"title":{},"name":{},"text":{"58":{}},"component":{}}],["minim",{"_index":2539,"title":{},"name":{},"text":{"41":{}},"component":{}}],["minimum",{"_index":954,"title":{},"name":{},"text":{"10":{},"13":{},"54":{}},"component":{}}],["minor",{"_index":3013,"title":{},"name":{},"text":{"50":{}},"component":{}}],["minu",{"_index":712,"title":{},"name":{},"text":{"6":{}},"component":{}}],["minut",{"_index":843,"title":{},"name":{},"text":{"9":{},"66":{}},"component":{}}],["mislead",{"_index":404,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["miss",{"_index":2030,"title":{},"name":{},"text":{"31":{},"49":{}},"component":{}}],["mistak",{"_index":2052,"title":{},"name":{},"text":{"31":{}},"component":{}}],["mock",{"_index":131,"title":{"42":{},"43":{},"43-1":{}},"name":{"42":{},"43":{}},"text":{"1":{},"17":{},"38":{},"42":{},"43":{}},"component":{}}],["modal",{"_index":3346,"title":{},"name":{},"text":{"66":{},"70":{}},"component":{}}],["mode",{"_index":234,"title":{"34-6":{},"34-7":{}},"name":{},"text":{"2":{},"5":{},"9":{},"13":{},"14":{},"15":{},"16":{},"21":{},"26":{},"27":{},"28":{},"29":{},"34":{},"42":{},"47":{},"49":{},"51":{},"65":{},"69":{},"71":{}},"component":{}}],["model",{"_index":299,"title":{"69-1":{}},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"10":{},"11":{},"12":{},"35":{},"69":{}},"component":{}}],["modif",{"_index":2974,"title":{},"name":{},"text":{"49":{}},"component":{}}],["modifi",{"_index":567,"title":{},"name":{},"text":{"6":{},"12":{},"14":{},"26":{},"62":{}},"component":{}}],["modul",{"_index":241,"title":{},"name":{},"text":{"2":{},"4":{},"6":{}},"component":{}}],["moment",{"_index":1494,"title":{},"name":{},"text":{"19":{},"20":{},"23":{},"49":{}},"component":{}}],["mongodb",{"_index":420,"title":{},"name":{},"text":{"5":{},"14":{},"15":{}},"component":{}}],["monitor",{"_index":1762,"title":{},"name":{},"text":{"25":{},"26":{},"65":{},"68":{}},"component":{}}],["monitor.yaml",{"_index":1765,"title":{},"name":{},"text":{"25":{}},"component":{}}],["monitoring.coreos.com/v1",{"_index":1766,"title":{},"name":{},"text":{"25":{}},"component":{}}],["more",{"_index":37,"title":{"31-8":{}},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"32":{},"33":{},"34":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"49":{},"50":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"73":{}},"component":{}}],["move",{"_index":864,"title":{},"name":{},"text":{"9":{},"10":{},"12":{},"37":{},"46":{},"67":{},"68":{}},"component":{}}],["mp.messaging.[incoming|outgo",{"_index":1446,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.emitter.default",{"_index":1483,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.incoming..path",{"_index":1381,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mp.messaging.incoming.kogito",{"_index":1955,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mp.messaging.incoming.kogito_incoming_stream.connector=smallry",{"_index":1461,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.incoming.kogito_incoming_stream.path",{"_index":1380,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mp.messaging.incoming.kogito_incoming_stream.topic=applic",{"_index":1462,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.stringdeseri",{"_index":1463,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.incoming.wait.connector=quarku",{"_index":2445,"title":{},"name":{},"text":{"37":{}},"component":{}}],["mp.messaging.incoming.wait.connector=smallry",{"_index":1456,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.incoming.wait.path=/wait",{"_index":2446,"title":{},"name":{},"text":{"37":{}},"component":{}}],["mp.messaging.incoming.wait.value.deserializer=org.apache.kafka.common.serialization.stringdeseri",{"_index":1457,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.outgoing.kogito",{"_index":1258,"title":{},"name":{},"text":{"14":{},"16":{},"27":{},"28":{}},"component":{}}],["mp.messaging.outgoing.kogito_outgoing_stream.connector",{"_index":1365,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mp.messaging.outgoing.kogito_outgoing_stream.connector=smallry",{"_index":1464,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.outgoing.kogito_outgoing_stream.topic=decis",{"_index":1465,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.outgoing.kogito_outgoing_stream.url",{"_index":1363,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mp.messaging.outgoing.kogito_outgoing_stream.url=http://0.0.0.0:8181",{"_index":2604,"title":{},"name":{},"text":{"42":{}},"component":{}}],["mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.stringseri",{"_index":1466,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.outgoing.resume.connector=smallry",{"_index":1458,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp.messaging.outgoing.resume.value.serializer=org.apache.kafka.common.serialization.stringseri",{"_index":1459,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mp_messaging_incoming_kogito_job_service_job_request_events_v2_top",{"_index":1949,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mp_messaging_outgoing_kogito_job_service_job_status_events_top",{"_index":1951,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multipl",{"_index":812,"title":{},"name":{},"text":{"8":{},"14":{},"16":{},"17":{},"19":{},"36":{},"41":{},"60":{}},"component":{}}],["multipli",{"_index":713,"title":{},"name":{},"text":{"6":{},"36":{}},"component":{}}],["multiplicationoper",{"_index":2405,"title":{},"name":{},"text":{"36":{}},"component":{}}],["multiplyvalu",{"_index":2408,"title":{},"name":{},"text":{"36":{}},"component":{}}],["mutat",{"_index":1118,"title":{},"name":{},"text":{"14":{}},"component":{}}],["mvn",{"_index":1092,"title":{},"name":{},"text":{"13":{},"17":{},"21":{},"28":{},"29":{},"33":{},"34":{},"35":{},"38":{},"42":{}},"component":{}}],["mxn",{"_index":2231,"title":{},"name":{},"text":{"33":{}},"component":{}}],["my.body.data",{"_index":601,"title":{},"name":{},"text":{"6":{}},"component":{}}],["my.other.valu",{"_index":605,"title":{},"name":{},"text":{"6":{}},"component":{}}],["my.properties.key",{"_index":2930,"title":{},"name":{},"text":{"48":{}},"component":{}}],["my.valu",{"_index":603,"title":{},"name":{},"text":{"6":{}},"component":{}}],["my_different_namespac",{"_index":637,"title":{},"name":{},"text":{"6":{}},"component":{}}],["my_key",{"_index":2091,"title":{},"name":{},"text":{"32":{}},"component":{}}],["mycamelendpoint",{"_index":589,"title":{},"name":{},"text":{"6":{}},"component":{}}],["myendpoint",{"_index":593,"title":{},"name":{},"text":{"6":{}},"component":{}}],["myfunct",{"_index":535,"title":{},"name":{},"text":{"6":{},"34":{}},"component":{}}],["myheadernam",{"_index":2124,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myinterfaceorclass",{"_index":551,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mymethod",{"_index":544,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mymethod(int",{"_index":553,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mymethod(jsonnod",{"_index":564,"title":{},"name":{},"text":{"6":{}},"component":{}}],["myopenapifile.yaml",{"_index":2389,"title":{},"name":{},"text":{"36":{}},"component":{}}],["mystat",{"_index":526,"title":{},"name":{},"text":{"6":{}},"component":{}}],["myworkflow",{"_index":391,"title":{},"name":{},"text":{"4":{},"34":{}},"component":{}}],["myworkflow_myfunct",{"_index":2263,"title":{},"name":{},"text":{"34":{}},"component":{}}],["n",{"_index":379,"title":{},"name":{},"text":{"4":{},"41":{},"47":{},"49":{},"50":{},"53":{},"54":{},"57":{},"59":{}},"component":{}}],["name",{"_index":393,"title":{"27-6":{}},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{}},"component":{}}],["name\":\"javierito",{"_index":1568,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name\":\"myfunction1",{"_index":2384,"title":{},"name":{},"text":{"36":{}},"component":{}}],["name\":\"process",{"_index":2697,"title":{},"name":{},"text":{"45":{}},"component":{}}],["name\":\"processpay",{"_index":2680,"title":{},"name":{},"text":{"45":{}},"component":{}}],["name\":\"processpaymentact",{"_index":2682,"title":{},"name":{},"text":{"45":{}},"component":{}}],["name\":\"reserv",{"_index":2695,"title":{},"name":{},"text":{"45":{}},"component":{}}],["name\":\"reservestock",{"_index":2701,"title":{},"name":{},"text":{"45":{}},"component":{}}],["name\":\"ship",{"_index":2698,"title":{},"name":{},"text":{"45":{}},"component":{}}],["name/port",{"_index":1910,"title":{},"name":{},"text":{"27":{}},"component":{}}],["name=[http_header_nam",{"_index":2121,"title":{},"name":{},"text":{"32":{}},"component":{}}],["name=label",{"_index":3271,"title":{},"name":{},"text":{"60":{}},"component":{}}],["name=myheadernam",{"_index":2123,"title":{},"name":{},"text":{"32":{}},"component":{}}],["name=namevalue;anoth",{"_index":3283,"title":{},"name":{},"text":{"60":{}},"component":{}}],["name=test",{"_index":3286,"title":{},"name":{},"text":{"60":{}},"component":{}}],["name={port_nam",{"_index":3269,"title":{},"name":{},"text":{"60":{}},"component":{}}],["name_oper",{"_index":3423,"title":{},"name":{},"text":{"73":{}},"component":{}}],["name_vers",{"_index":3424,"title":{},"name":{},"text":{"73":{}},"component":{}}],["namespac",{"_index":513,"title":{"6-13":{},"47-6":{}},"name":{},"text":{"6":{},"17":{},"25":{},"47":{},"48":{},"49":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"68":{}},"component":{}}],["namespace/project",{"_index":3086,"title":{},"name":{},"text":{"55":{}},"component":{}}],["namespace=serverless",{"_index":3142,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["namespace=workflow",{"_index":2876,"title":{},"name":{},"text":{"47":{}},"component":{}}],["nan",{"_index":1819,"title":{},"name":{},"text":{"26":{}},"component":{}}],["narayana",{"_index":1697,"title":{},"name":{},"text":{"21":{}},"component":{}}],["nativ",{"_index":25,"title":{"55-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"29":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["natur",{"_index":974,"title":{},"name":{},"text":{"11":{}},"component":{}}],["navig",{"_index":2210,"title":{},"name":{},"text":{"33":{},"35":{},"46":{},"55":{},"62":{},"64":{},"65":{},"73":{}},"component":{}}],["necess",{"_index":2541,"title":{},"name":{},"text":{"41":{}},"component":{}}],["necessari",{"_index":901,"title":{},"name":{},"text":{"9":{},"14":{},"31":{},"36":{}},"component":{}}],["need",{"_index":440,"title":{},"name":{},"text":{"5":{},"6":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"49":{},"50":{},"51":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"67":{},"68":{},"69":{},"73":{}},"component":{}}],["nest",{"_index":2742,"title":{},"name":{},"text":{"45":{}},"component":{}}],["net",{"_index":2051,"title":{},"name":{},"text":{"31":{},"36":{},"57":{}},"component":{}}],["network",{"_index":2348,"title":{},"name":{},"text":{"35":{},"60":{}},"component":{}}],["networking.k8s.io",{"_index":3291,"title":{},"name":{},"text":{"60":{}},"component":{}}],["never",{"_index":3217,"title":{},"name":{},"text":{"58":{}},"component":{}}],["new",{"_index":180,"title":{"2":{},"49-2":{},"64-2":{},"64-3":{},"64-6":{}},"name":{},"text":{"3":{},"6":{},"8":{},"9":{},"12":{},"14":{},"15":{},"19":{},"21":{},"23":{},"27":{},"30":{},"31":{},"33":{},"37":{},"41":{},"42":{},"43":{},"45":{},"47":{},"49":{},"50":{},"53":{},"54":{},"59":{},"64":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["newaccountev",{"_index":1495,"title":{},"name":{},"text":{"19":{}},"component":{}}],["newaccounteventtyp",{"_index":1496,"title":{},"name":{},"text":{"19":{}},"component":{}}],["newli",{"_index":3077,"title":{},"name":{},"text":{"55":{},"57":{},"58":{},"59":{},"64":{},"65":{}},"component":{}}],["next",{"_index":860,"title":{},"name":{},"text":{"9":{},"12":{},"21":{},"24":{},"27":{},"33":{},"37":{},"45":{},"46":{},"54":{},"57":{},"58":{},"59":{},"64":{},"65":{},"73":{}},"component":{}}],["nfrom",{"_index":2838,"title":{},"name":{},"text":{"47":{}},"component":{}}],["nightli",{"_index":2816,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["nightly:1.41.0",{"_index":3010,"title":{},"name":{},"text":{"50":{}},"component":{}}],["nightly:latest",{"_index":1875,"title":{},"name":{},"text":{"27":{},"47":{}},"component":{}}],["node",{"_index":569,"title":{},"name":{},"text":{"6":{},"14":{},"35":{},"65":{}},"component":{}}],["node.workname(name).metadata(oper",{"_index":735,"title":{},"name":{},"text":{"6":{}},"component":{}}],["nodedefinit",{"_index":1189,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeid",{"_index":1203,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeid:\"_b8c4f63c",{"_index":1211,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeinst",{"_index":1204,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeinstancecancel",{"_index":1224,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeinstanceid",{"_index":1217,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeinstanceid:\"01756ba2",{"_index":1219,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeinstanceretrigg",{"_index":1218,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeinstancetrigg",{"_index":1205,"title":{},"name":{},"text":{"14":{}},"component":{}}],["nodeport",{"_index":2910,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["noisi",{"_index":805,"title":{},"name":{},"text":{"8":{}},"component":{}}],["noisyev",{"_index":807,"title":{},"name":{},"text":{"8":{}},"component":{}}],["non",{"_index":685,"title":{},"name":{},"text":{"6":{},"18":{},"19":{},"32":{}},"component":{}}],["none",{"_index":1472,"title":{},"name":{},"text":{"18":{},"46":{},"73":{}},"component":{}}],["normal",{"_index":1738,"title":{},"name":{},"text":{"23":{},"34":{},"35":{},"53":{},"54":{}},"component":{}}],["nosuchmethodexcept",{"_index":232,"title":{},"name":{},"text":{"2":{}},"component":{}}],["notabl",{"_index":179,"title":{"2-1":{}},"name":{},"text":{},"component":{}}],["notat",{"_index":1179,"title":{},"name":{},"text":{"14":{}},"component":{}}],["notcareaboutnois",{"_index":816,"title":{},"name":{},"text":{"8":{}},"component":{}}],["note",{"_index":635,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"13":{},"17":{},"18":{},"21":{},"26":{},"32":{},"34":{},"36":{},"37":{},"48":{},"53":{},"55":{},"59":{}},"component":{}}],["notic",{"_index":3250,"title":{},"name":{},"text":{"59":{}},"component":{}}],["notif",{"_index":3325,"title":{},"name":{},"text":{"64":{},"65":{},"73":{}},"component":{}}],["notifi",{"_index":1861,"title":{},"name":{},"text":{"27":{},"37":{},"46":{}},"component":{}}],["notus",{"_index":2402,"title":{},"name":{},"text":{"36":{}},"component":{}}],["now",{"_index":288,"title":{},"name":{},"text":{"3":{},"31":{},"47":{},"49":{},"53":{},"59":{}},"component":{}}],["npm",{"_index":1803,"title":{},"name":{},"text":{"26":{}},"component":{}}],["null",{"_index":238,"title":{},"name":{},"text":{"2":{},"6":{},"19":{},"26":{},"33":{},"42":{},"43":{},"57":{},"58":{},"59":{}},"component":{}}],["number",{"_index":472,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"11":{},"13":{},"17":{},"26":{},"33":{},"36":{},"43":{},"46":{},"63":{}},"component":{}}],["numbertyp",{"_index":1010,"title":{},"name":{},"text":{"11":{}},"component":{}}],["numcomplet",{"_index":1107,"title":{},"name":{},"text":{"13":{}},"component":{}}],["numer",{"_index":1163,"title":{},"name":{},"text":{"14":{}},"component":{}}],["o",{"_index":2965,"title":{},"name":{},"text":{"49":{},"50":{},"54":{},"57":{},"58":{}},"component":{}}],["oauth",{"_index":124,"title":{"33":{},"32-5":{},"33-1":{}},"name":{},"text":{"1":{},"32":{},"33":{}},"component":{}}],["oauth2",{"_index":126,"title":{"33-2":{}},"name":{"33":{}},"text":{"1":{},"32":{},"33":{}},"component":{}}],["oauth_exampl",{"_index":2101,"title":{},"name":{},"text":{"32":{}},"component":{}}],["object",{"_index":317,"title":{"6-15":{},"17-4":{}},"name":{},"text":{"3":{},"6":{},"7":{},"10":{},"11":{},"17":{},"23":{},"32":{},"33":{},"35":{},"36":{},"47":{},"48":{},"54":{},"57":{},"58":{},"59":{},"60":{},"73":{}},"component":{}}],["objectmapp",{"_index":2579,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["objectmapper.readtree(countryserviceworkflowtest.class.getresourceasstream(\"/country_mock_feature_a.json",{"_index":2662,"title":{},"name":{},"text":{"43":{}},"component":{}}],["objectmapper.readtree(getclass().getresourceasstream(\"/country_mock.json",{"_index":2623,"title":{},"name":{},"text":{"43":{}},"component":{}}],["objectmapper.writevalueasstring(cloudeventbuilder.v1",{"_index":1036,"title":{},"name":{},"text":{"12":{}},"component":{}}],["observ",{"_index":3054,"title":{},"name":{},"text":{"54":{}},"component":{}}],["observedgener",{"_index":3057,"title":{},"name":{},"text":{"54":{}},"component":{}}],["obtain",{"_index":758,"title":{},"name":{},"text":{"6":{},"35":{},"68":{}},"component":{}}],["oc",{"_index":1771,"title":{},"name":{},"text":{"25":{},"47":{},"59":{},"68":{}},"component":{}}],["occur",{"_index":571,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{},"45":{},"49":{}},"component":{}}],["occurr",{"_index":2244,"title":{},"name":{},"text":{"33":{}},"component":{}}],["odata",{"_index":367,"title":{},"name":{},"text":{"4":{}},"component":{}}],["odd",{"_index":1001,"title":{},"name":{},"text":{"11":{}},"component":{}}],["oer",{"_index":2444,"title":{},"name":{},"text":{"37":{}},"component":{}}],["offer",{"_index":3211,"title":{},"name":{},"text":{"58":{}},"component":{}}],["offset",{"_index":1175,"title":{},"name":{},"text":{"14":{}},"component":{}}],["oidc",{"_index":1699,"title":{},"name":{},"text":{"21":{},"32":{},"33":{}},"component":{}}],["oidcclient",{"_index":2100,"title":{},"name":{},"text":{"32":{}},"component":{}}],["ok",{"_index":625,"title":{},"name":{},"text":{"6":{},"24":{},"32":{},"33":{},"36":{},"57":{},"58":{},"59":{}},"component":{}}],["okhttp",{"_index":3302,"title":{},"name":{},"text":{"60":{}},"component":{}}],["omit",{"_index":2387,"title":{},"name":{},"text":{"36":{}},"component":{}}],["on",{"_index":314,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"8":{},"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"24":{},"26":{},"27":{},"30":{},"31":{},"32":{},"35":{},"36":{},"41":{},"43":{},"46":{},"47":{},"48":{},"49":{},"53":{},"57":{},"58":{},"59":{},"60":{},"66":{},"69":{},"71":{},"73":{}},"component":{}}],["onc",{"_index":848,"title":{},"name":{},"text":{"9":{},"10":{},"12":{},"15":{},"16":{},"19":{},"20":{},"21":{},"23":{},"29":{},"30":{},"33":{},"35":{},"36":{},"37":{},"42":{},"43":{},"45":{},"49":{},"50":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"64":{},"65":{},"73":{}},"component":{}}],["onerror",{"_index":872,"title":{},"name":{},"text":{"9":{},"11":{},"33":{},"45":{},"46":{}},"component":{}}],["onev",{"_index":800,"title":{},"name":{},"text":{"8":{},"9":{},"19":{},"46":{}},"component":{}}],["onevent(messag",{"_index":1051,"title":{},"name":{},"text":{"12":{}},"component":{}}],["onlin",{"_index":1715,"title":{},"name":{},"text":{"22":{},"62":{},"68":{}},"component":{}}],["onoverflow",{"_index":1439,"title":{"18-3":{}},"name":{},"text":{"18":{}},"component":{}}],["open",{"_index":458,"title":{"65-1":{}},"name":{},"text":{"5":{},"32":{},"41":{},"43":{},"49":{},"58":{},"66":{},"67":{},"68":{},"70":{},"71":{},"73":{}},"component":{}}],["openapi",{"_index":112,"title":{"32":{},"34":{},"36":{},"37":{},"43":{},"32-1":{},"34-3":{},"36-1":{},"36-2":{},"36-3":{},"36-5":{},"37-1":{},"43-1":{},"73-5":{}},"name":{"32":{},"34":{},"36":{},"37":{},"43":{}},"text":{"1":{},"7":{},"10":{},"11":{},"21":{},"32":{},"33":{},"34":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"53":{},"60":{},"66":{},"70":{},"73":{}},"component":{}}],["openapi.json",{"_index":3048,"title":{},"name":{},"text":{"53":{}},"component":{}}],["openapi.json#iswinn",{"_index":3041,"title":{},"name":{},"text":{"53":{}},"component":{}}],["openapi/async",{"_index":45,"title":{},"name":{},"text":{"1":{}},"component":{}}],["openapi/stock",{"_index":2289,"title":{},"name":{},"text":{"34":{}},"component":{}}],["openid",{"_index":2099,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["openshift",{"_index":320,"title":{"59":{},"68":{},"70":{},"25-3":{},"47-9":{},"59-1":{},"59-2":{},"59-5":{},"68-2":{},"70-1":{},"70-2":{}},"name":{"59":{},"68":{}},"text":{"3":{},"25":{},"47":{},"49":{},"51":{},"55":{},"59":{},"60":{},"66":{},"68":{},"69":{},"70":{},"73":{}},"component":{}}],["openshift1.42.0.fin",{"_index":3181,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["openshift:2.16.8.fin",{"_index":3255,"title":{},"name":{},"text":{"59":{}},"component":{}}],["openshift_registry_url",{"_index":3240,"title":{},"name":{},"text":{"59":{}},"component":{}}],["openshift_registry_url/kogito",{"_index":3247,"title":{},"name":{},"text":{"59":{}},"component":{}}],["openshift_registry_url=$(oc",{"_index":3242,"title":{},"name":{},"text":{"59":{}},"component":{}}],["openshift’",{"_index":3233,"title":{"59-3":{}},"name":{},"text":{"59":{}},"component":{}}],["oper",{"_index":257,"title":{"47":{},"49":{},"50":{},"51":{},"3-1":{},"9-7":{},"46-5":{},"47-8":{},"50-2":{},"50-3":{}},"name":{"50":{}},"text":{"2":{},"3":{},"4":{},"6":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"59":{},"66":{},"68":{},"73":{}},"component":{}}],["operation\":\"classpath:/myopenapi",{"_index":2385,"title":{},"name":{},"text":{"36":{}},"component":{}}],["operation\":\"service:org.kie.kogito.paymentservice::processpay",{"_index":2703,"title":{},"name":{},"text":{"45":{}},"component":{}}],["operation1",{"_index":2273,"title":{},"name":{},"text":{"34":{}},"component":{}}],["operation2",{"_index":2275,"title":{},"name":{},"text":{"34":{}},"component":{}}],["operationid",{"_index":745,"title":{},"name":{},"text":{"6":{},"20":{},"32":{},"33":{},"36":{}},"component":{}}],["operationid.valueof(operationid.touppercas",{"_index":751,"title":{},"name":{},"text":{"6":{}},"component":{}}],["operator/.x/operator.yaml",{"_index":3017,"title":{},"name":{},"text":{"50":{}},"component":{}}],["operator/main/operator.yaml",{"_index":3018,"title":{},"name":{},"text":{"50":{}},"component":{}}],["operator/v1.42.0/config/samples/sw.kogito_v1alpha08_sonataflow_devmode.yaml",{"_index":2946,"title":{},"name":{},"text":{"49":{}},"component":{}}],["operator/v1.42.0/operator.yaml",{"_index":2990,"title":{},"name":{},"text":{"50":{}},"component":{}}],["operator/v1.42.0/test/testdata/sw.kogito_v1alpha08_sonataflow_devmode.yaml",{"_index":2941,"title":{},"name":{},"text":{"49":{}},"component":{}}],["operator’",{"_index":2824,"title":{},"name":{},"text":{"47":{},"50":{}},"component":{}}],["opt",{"_index":287,"title":{},"name":{},"text":{"3":{},"31":{}},"component":{}}],["optim",{"_index":2134,"title":{},"name":{},"text":{"33":{},"41":{}},"component":{}}],["optimist",{"_index":432,"title":{},"name":{},"text":{"5":{},"30":{}},"component":{}}],["option",{"_index":47,"title":{},"name":{},"text":{"1":{},"3":{},"5":{},"6":{},"7":{},"11":{},"12":{},"14":{},"16":{},"18":{},"19":{},"21":{},"24":{},"27":{},"30":{},"31":{},"33":{},"35":{},"41":{},"43":{},"45":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"64":{},"65":{},"66":{},"67":{},"73":{}},"component":{}}],["orchestr",{"_index":6,"title":{"20":{},"33":{},"35":{},"36":{},"45":{},"1-4":{},"1-5":{},"33-1":{},"33-2":{}},"name":{"20":{},"33":{},"35":{},"36":{},"45":{}},"text":{"1":{},"4":{},"6":{},"7":{},"10":{},"21":{},"32":{},"33":{},"34":{},"36":{},"43":{},"45":{},"53":{}},"component":{}}],["order",{"_index":1104,"title":{},"name":{},"text":{"13":{},"14":{},"31":{},"33":{},"35":{},"42":{},"45":{},"46":{},"47":{},"49":{},"54":{}},"component":{}}],["order.getid",{"_index":2586,"title":{},"name":{},"text":{"42":{}},"component":{}}],["order.setcountry(\"u",{"_index":2584,"title":{},"name":{},"text":{"42":{}},"component":{}}],["order.setdescription(\"iphon",{"_index":2581,"title":{},"name":{},"text":{"42":{}},"component":{}}],["order.setid(uuid.randomuuid().tostr",{"_index":2580,"title":{},"name":{},"text":{"42":{}},"component":{}}],["order.settotal(1001",{"_index":2583,"title":{},"name":{},"text":{"42":{}},"component":{}}],["orderbi",{"_index":1171,"title":{},"name":{},"text":{"14":{}},"component":{}}],["orderev",{"_index":2588,"title":{},"name":{},"text":{"42":{}},"component":{}}],["orderid",{"_index":2709,"title":{},"name":{},"text":{"45":{}},"component":{}}],["orderid\":\".orderid",{"_index":2684,"title":{},"name":{},"text":{"45":{}},"component":{}}],["orderid\":\"03e6cf79",{"_index":2720,"title":{},"name":{},"text":{"45":{}},"component":{}}],["orderrespons",{"_index":2740,"title":{},"name":{},"text":{"45":{}},"component":{}}],["org.acm",{"_index":1599,"title":{},"name":{},"text":{"21":{}},"component":{}}],["org.acme:serverless",{"_index":1586,"title":{},"name":{},"text":{"21":{}},"component":{}}],["org.apache.kafka.common.serialization.bytearraydeseri",{"_index":1449,"title":{},"name":{},"text":{"18":{}},"component":{}}],["org.apache.kafka.common.serialization.bytearrayseri",{"_index":1452,"title":{},"name":{},"text":{"18":{}},"component":{}}],["org.apache.kafka.common.serialization.stringdeseri",{"_index":1450,"title":{},"name":{},"text":{"18":{}},"component":{}}],["org.apache.kafka.common.serialization.stringseri",{"_index":1453,"title":{},"name":{},"text":{"18":{}},"component":{}}],["org.apache.maven.plugins:maven",{"_index":1612,"title":{},"name":{},"text":{"21":{}},"component":{}}],["org.awaitil",{"_index":1978,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["org.hamcrest.matchers.equalto",{"_index":2463,"title":{},"name":{},"text":{"38":{}},"component":{}}],["org.jbo.thread",{"_index":2480,"title":{},"name":{},"text":{"38":{}},"component":{}}],["org.jboss.logmanager.logmanag",{"_index":1982,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["org.junit.jupiter.api.beforeal",{"_index":2460,"title":{},"name":{},"text":{"38":{}},"component":{}}],["org.junit.jupiter.api.test",{"_index":2461,"title":{},"name":{},"text":{"38":{},"43":{}},"component":{}}],["org.kie.kog.add.qua.mes.com.quarkuskogitoextensioniniti",{"_index":1627,"title":{},"name":{},"text":{"21":{},"38":{}},"component":{}}],["org.kie.kog.cod.api.uti.addonsconfigdiscoveri",{"_index":2484,"title":{},"name":{},"text":{"38":{}},"component":{}}],["org.kie.kog.cod.cor.uti.applicationgeneratordiscoveri",{"_index":2496,"title":{},"name":{},"text":{"38":{}},"component":{}}],["org.kie.kog.mockservic",{"_index":2776,"title":{},"name":{},"text":{"45":{}},"component":{}}],["org.kie.kog.orderservic",{"_index":2750,"title":{},"name":{},"text":{"45":{}},"component":{}}],["org.kie.kog.paymentservic",{"_index":2746,"title":{},"name":{},"text":{"45":{}},"component":{}}],["org.kie.kog.per.inm.pos.run.inmemorypostgresqlrecord",{"_index":1671,"title":{},"name":{},"text":{"21":{}},"component":{}}],["org.kie.kog.per.pro.protobufservic",{"_index":1677,"title":{},"name":{},"text":{"21":{}},"component":{}}],["org.kie.kog.qua.pro.dev.dataindexinmemorycontain",{"_index":1639,"title":{},"name":{},"text":{"21":{}},"component":{}}],["org.kie.kog.shippingservic",{"_index":2748,"title":{},"name":{},"text":{"45":{}},"component":{}}],["org.kie.kog.stockservic",{"_index":2744,"title":{},"name":{},"text":{"45":{}},"component":{}}],["org.kie.kogito",{"_index":1227,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"57":{},"58":{},"59":{},"60":{},"63":{},"65":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.auto_generate_brok",{"_index":1370,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.brok",{"_index":1378,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.health",{"_index":2934,"title":{},"name":{},"text":{"48":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.health_en",{"_index":1369,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.sink",{"_index":1372,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.sink.api_vers",{"_index":1375,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.sink.kind",{"_index":1377,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.sink.nam",{"_index":1376,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.addons.knative.eventing.sink.namespac",{"_index":1374,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.kie.kogito.exampl",{"_index":2166,"title":{},"name":{},"text":{"33":{},"38":{}},"component":{}}],["org.kie.kogito.examples.evenservic",{"_index":1004,"title":{},"name":{},"text":{"11":{}},"component":{}}],["org.kie.kogito.examples.exchangeworkflowhelp",{"_index":2163,"title":{},"name":{},"text":{"33":{}},"component":{}}],["org.kie.kogito.examples.hellotest",{"_index":2477,"title":{},"name":{},"text":{"38":{}},"component":{}}],["org.kie.kogito.examples.sw.custom.rpccustomworkitemhandler.nam",{"_index":727,"title":{},"name":{},"text":{"6":{}},"component":{}}],["org.kie.kogito.examples.sw.custom.rpccustomworkitemhandler.oper",{"_index":728,"title":{},"name":{},"text":{"6":{}},"component":{}}],["org.kie.kogito.serviceexcept",{"_index":2699,"title":{},"name":{},"text":{"45":{}},"component":{}}],["org.kie.kogito.sw.knative.service=knative:services.v1/serverless",{"_index":3306,"title":{},"name":{},"text":{"60":{}},"component":{}}],["org.kie.kogito:kogito",{"_index":1718,"title":{},"name":{},"text":{"23":{},"25":{},"26":{},"57":{},"58":{},"59":{},"60":{},"63":{}},"component":{}}],["organ",{"_index":3052,"title":{},"name":{},"text":{"53":{}},"component":{}}],["origin",{"_index":960,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{}}],["orm",{"_index":1695,"title":{},"name":{},"text":{"21":{}},"component":{}}],["otherwis",{"_index":804,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"16":{},"23":{},"24":{},"45":{},"48":{},"50":{},"57":{},"58":{}},"component":{}}],["ought",{"_index":1357,"title":{},"name":{},"text":{"17":{}},"component":{}}],["out",{"_index":857,"title":{},"name":{},"text":{"9":{},"10":{},"37":{},"49":{},"54":{},"57":{},"64":{},"65":{},"68":{}},"component":{}}],["outcom",{"_index":3008,"title":{},"name":{},"text":{"50":{}},"component":{}}],["outgo",{"_index":449,"title":{},"name":{},"text":{"5":{},"14":{},"17":{},"18":{},"27":{},"37":{}},"component":{}}],["outgoing(\"out",{"_index":1049,"title":{},"name":{},"text":{"12":{}},"component":{}}],["output",{"_index":89,"title":{"7":{},"7-2":{}},"name":{},"text":{"1":{},"7":{},"10":{},"11":{},"18":{},"21":{},"24":{},"38":{},"41":{},"45":{},"49":{},"50":{},"53":{},"57":{},"58":{},"59":{},"66":{}},"component":{}}],["outputschema",{"_index":770,"title":{"7-3":{}},"name":{},"text":{"7":{}},"component":{}}],["outsid",{"_index":442,"title":{},"name":{},"text":{"5":{}},"component":{}}],["over",{"_index":258,"title":{},"name":{},"text":{"2":{},"15":{},"17":{},"20":{},"28":{},"37":{}},"component":{}}],["overdu",{"_index":856,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["overeag",{"_index":3368,"title":{},"name":{},"text":{"68":{}},"component":{}}],["overflow",{"_index":1468,"title":{},"name":{},"text":{"18":{}},"component":{}}],["overrid",{"_index":417,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"16":{},"17":{},"41":{},"43":{},"48":{},"55":{},"60":{}},"component":{}}],["overview",{"_index":1267,"title":{"15-1":{},"29-1":{},"32-1":{},"34-1":{},"42-1":{},"45-1":{}},"name":{"41":{},"63":{},"69":{},"72":{}},"text":{},"component":{}}],["overwrit",{"_index":2321,"title":{},"name":{},"text":{"34":{},"41":{}},"component":{}}],["overwrot",{"_index":2325,"title":{},"name":{},"text":{"34":{}},"component":{}}],["p",{"_index":2912,"title":{},"name":{},"text":{"47":{},"55":{},"58":{},"59":{}},"component":{}}],["p2dt3h4m",{"_index":844,"title":{},"name":{},"text":{"9":{}},"component":{}}],["packag",{"_index":274,"title":{},"name":{},"text":{"2":{},"21":{},"26":{},"27":{},"33":{},"34":{},"38":{}},"component":{}}],["package=com.acm",{"_index":2190,"title":{},"name":{},"text":{"33":{}},"component":{}}],["packet",{"_index":1661,"title":{},"name":{},"text":{"21":{}},"component":{}}],["page",{"_index":1820,"title":{},"name":{"62":{},"64":{},"65":{}},"text":{"26":{},"38":{},"41":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"73":{}},"component":{}}],["pagin",{"_index":1176,"title":{},"name":{},"text":{"14":{}},"component":{}}],["pair",{"_index":607,"title":{},"name":{},"text":{"6":{},"23":{},"35":{}},"component":{}}],["palett",{"_index":3405,"title":{},"name":{},"text":{"73":{}},"component":{}}],["panach",{"_index":1696,"title":{},"name":{},"text":{"21":{}},"component":{}}],["panel",{"_index":3332,"title":{},"name":{},"text":{"65":{}},"component":{}}],["parallel",{"_index":98,"title":{"13":{},"13-1":{},"13-2":{},"13-3":{}},"name":{"13":{}},"text":{"1":{},"2":{},"4":{},"13":{},"42":{}},"component":{}}],["parallel.sw.json",{"_index":1070,"title":{},"name":{},"text":{"13":{}},"component":{}}],["paramet",{"_index":561,"title":{},"name":{},"text":{"6":{},"7":{},"11":{},"14":{},"25":{},"27":{},"32":{},"33":{},"35":{},"36":{},"38":{},"42":{},"47":{},"60":{}},"component":{}}],["parameters.values().iter",{"_index":743,"title":{},"name":{},"text":{"6":{}},"component":{}}],["parentprocessinstanceid",{"_index":1146,"title":{},"name":{},"text":{"14":{}},"component":{}}],["pars",{"_index":2561,"title":{},"name":{},"text":{"42":{},"60":{},"73":{}},"component":{}}],["parsercontext",{"_index":732,"title":{},"name":{},"text":{"6":{}},"component":{}}],["part",{"_index":696,"title":{},"name":{},"text":{"6":{},"10":{},"11":{},"14":{},"16":{},"19":{},"20":{},"27":{},"33":{},"35":{},"36":{}},"component":{}}],["parti",{"_index":123,"title":{"33":{}},"name":{"33":{}},"text":{"1":{},"32":{},"43":{},"45":{}},"component":{}}],["partial",{"_index":340,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{}}],["particip",{"_index":2664,"title":{},"name":{},"text":{"45":{}},"component":{}}],["particular",{"_index":558,"title":{},"name":{},"text":{"6":{},"18":{},"19":{},"32":{},"33":{},"47":{},"53":{}},"component":{}}],["pass",{"_index":547,"title":{},"name":{},"text":{"6":{},"10":{},"14":{},"16":{},"27":{},"28":{},"32":{},"33":{},"42":{},"55":{}},"component":{}}],["password",{"_index":1348,"title":{},"name":{},"text":{"16":{},"21":{},"27":{},"29":{},"31":{},"32":{},"47":{},"58":{}},"component":{}}],["password=bar",{"_index":2033,"title":{},"name":{},"text":{"31":{}},"component":{}}],["past",{"_index":3359,"title":{},"name":{},"text":{"67":{}},"component":{}}],["patch",{"_index":2819,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["path",{"_index":633,"title":{"62-3":{}},"name":{},"text":{"6":{},"7":{},"10":{},"14":{},"17":{},"25":{},"26":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"46":{},"53":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"73":{}},"component":{}}],["path(\"id",{"_index":1991,"title":{},"name":{},"text":{"29":{}},"component":{}}],["path=/token",{"_index":2106,"title":{},"name":{},"text":{"32":{}},"component":{}}],["path=http://localhost:8281/auth/realms/kogito/protocol/openid",{"_index":2197,"title":{},"name":{},"text":{"33":{}},"component":{}}],["pattern",{"_index":176,"title":{"45-1":{},"45-2":{},"45-3":{}},"name":{"45":{}},"text":{"1":{},"11":{},"45":{},"49":{},"60":{},"73":{}},"component":{}}],["patternfli",{"_index":273,"title":{},"name":{},"text":{"2":{}},"component":{}}],["paus",{"_index":797,"title":{},"name":{},"text":{"8":{},"30":{}},"component":{}}],["pay",{"_index":3165,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["payload",{"_index":638,"title":{},"name":{},"text":{"6":{},"11":{},"17":{},"19":{},"20":{},"23":{},"24":{},"35":{},"36":{},"43":{},"46":{}},"component":{}}],["payment",{"_index":2672,"title":{},"name":{},"text":{"45":{}},"component":{}}],["paymentrespons",{"_index":2728,"title":{},"name":{},"text":{"45":{}},"component":{}}],["paymentservice.java",{"_index":2700,"title":{},"name":{},"text":{"45":{}},"component":{}}],["pbuild",{"_index":3097,"title":{},"name":{},"text":{"55":{}},"component":{}}],["peform",{"_index":1014,"title":{},"name":{},"text":{"12":{}},"component":{}}],["pencil",{"_index":3397,"title":{},"name":{},"text":{"71":{}},"component":{}}],["per",{"_index":344,"title":{},"name":{},"text":{"4":{},"13":{},"18":{},"27":{},"47":{}},"component":{}}],["percentag",{"_index":2299,"title":{},"name":{},"text":{"34":{}},"component":{}}],["perform",{"_index":563,"title":{},"name":{},"text":{"6":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"25":{},"29":{},"36":{},"37":{},"38":{},"42":{},"43":{},"45":{},"47":{},"49":{},"60":{},"70":{},"72":{},"73":{}},"component":{}}],["period",{"_index":1858,"title":{},"name":{},"text":{"27":{},"34":{}},"component":{}}],["periodsecond",{"_index":3198,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["perman",{"_index":1867,"title":{},"name":{},"text":{"27":{}},"component":{}}],["permiss",{"_index":2522,"title":{},"name":{},"text":{"41":{},"53":{},"60":{},"67":{},"68":{}},"component":{}}],["persist",{"_index":12,"title":{"1-8":{},"27-8":{},"29-2":{},"30-1":{}},"name":{"30":{}},"text":{"1":{},"5":{},"14":{},"15":{},"16":{},"19":{},"27":{},"29":{},"30":{},"31":{},"45":{},"69":{}},"component":{}}],["person",{"_index":2970,"title":{},"name":{},"text":{"49":{},"66":{}},"component":{}}],["perspect",{"_index":1016,"title":{},"name":{},"text":{"12":{},"37":{},"53":{}},"component":{}}],["pet",{"_index":2412,"title":{},"name":{},"text":{"36":{}},"component":{}}],["pet/{petid",{"_index":2411,"title":{},"name":{},"text":{"36":{}},"component":{}}],["petid",{"_index":2414,"title":{},"name":{},"text":{"36":{}},"component":{}}],["petstor",{"_index":2390,"title":{},"name":{},"text":{"36":{}},"component":{}}],["phase",{"_index":700,"title":{"47-6":{}},"name":{},"text":{"6":{},"47":{},"54":{}},"component":{}}],["php",{"_index":2397,"title":{},"name":{},"text":{"36":{}},"component":{}}],["pick",{"_index":2021,"title":{},"name":{},"text":{"31":{}},"component":{}}],["pid",{"_index":3221,"title":{},"name":{},"text":{"58":{}},"component":{}}],["place",{"_index":776,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"66":{}},"component":{}}],["placehold",{"_index":3016,"title":{},"name":{},"text":{"50":{}},"component":{}}],["plain",{"_index":3175,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["plainjsonknativefunct",{"_index":1752,"title":{},"name":{},"text":{"24":{}},"component":{}}],["plan",{"_index":1409,"title":{},"name":{},"text":{"17":{}},"component":{}}],["platform",{"_index":276,"title":{},"name":{},"text":{"3":{},"14":{},"17":{},"21":{},"47":{},"52":{},"57":{},"58":{},"68":{}},"component":{}}],["platform.spec.platform.baseimag",{"_index":210,"title":{},"name":{},"text":{"2":{}},"component":{}}],["platform/4.13/networking/routes/rout",{"_index":2915,"title":{},"name":{},"text":{"47":{}},"component":{}}],["play",{"_index":1486,"title":{},"name":{},"text":{"19":{},"45":{},"49":{}},"component":{}}],["pleas",{"_index":405,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["plug",{"_index":129,"title":{"41":{},"41-1":{}},"name":{},"text":{"1":{},"17":{},"21":{},"22":{},"24":{},"29":{},"41":{},"42":{},"57":{},"58":{},"63":{}},"component":{}}],["plugin",{"_index":1980,"title":{},"name":{"41":{}},"text":{"29":{},"41":{},"42":{},"59":{}},"component":{}}],["plugin:2.16.8.final:cr",{"_index":1592,"title":{},"name":{},"text":{"21":{}},"component":{}}],["plugin:2.16.8.final:dev",{"_index":1611,"title":{},"name":{},"text":{"21":{}},"component":{}}],["plugin:2.4:jar",{"_index":2507,"title":{},"name":{},"text":{"38":{}},"component":{}}],["plugin:2.6:resourc",{"_index":1613,"title":{},"name":{},"text":{"21":{}},"component":{}}],["plugin:2.9.2.final:build",{"_index":2511,"title":{},"name":{},"text":{"38":{}},"component":{}}],["pndtnhnmn.n",{"_index":836,"title":{},"name":{},"text":{"9":{}},"component":{}}],["pod",{"_index":219,"title":{},"name":{},"text":{"2":{},"17":{},"36":{},"47":{},"49":{},"50":{},"54":{},"60":{}},"component":{}}],["podman",{"_index":2518,"title":{},"name":{},"text":{"41":{},"50":{},"59":{}},"component":{}}],["pods.v1",{"_index":3276,"title":{},"name":{},"text":{"60":{}},"component":{}}],["point",{"_index":1282,"title":{},"name":{},"text":{"16":{},"20":{},"27":{},"34":{},"36":{},"49":{}},"component":{}}],["pojo",{"_index":2172,"title":{},"name":{},"text":{"33":{}},"component":{}}],["polici",{"_index":2528,"title":{},"name":{},"text":{"41":{},"47":{},"49":{}},"component":{}}],["policy=ifnotpres",{"_index":3150,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["pom",{"_index":2344,"title":{},"name":{},"text":{"35":{}},"component":{}}],["pom.xml",{"_index":1226,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"18":{},"23":{},"25":{},"26":{},"29":{},"30":{},"35":{},"38":{},"42":{},"43":{},"55":{},"57":{},"58":{},"59":{},"63":{},"65":{},"66":{}},"component":{}}],["pool",{"_index":482,"title":{},"name":{},"text":{"5":{}},"component":{}}],["pop",{"_index":3350,"title":{},"name":{},"text":{"66":{}},"component":{}}],["popul",{"_index":1008,"title":{},"name":{},"text":{"11":{}},"component":{}}],["port",{"_index":498,"title":{},"name":{},"text":{"5":{},"16":{},"21":{},"27":{},"35":{},"42":{},"43":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["port(",{"_index":3117,"title":{},"name":{},"text":{"57":{}},"component":{}}],["portabl",{"_index":517,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["portfolio",{"_index":2257,"title":{},"name":{},"text":{"34":{}},"component":{}}],["possibl",{"_index":194,"title":{"49-9":{}},"name":{},"text":{"2":{},"5":{},"6":{},"16":{},"18":{},"19":{},"33":{},"34":{},"35":{},"45":{},"46":{},"54":{}},"component":{}}],["post",{"_index":630,"title":{},"name":{},"text":{"6":{},"10":{},"13":{},"17":{},"21":{},"24":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"42":{},"45":{},"47":{},"49":{},"55":{},"57":{},"58":{},"59":{},"64":{}},"component":{}}],["post(\"/callback",{"_index":1989,"title":{},"name":{},"text":{"29":{}},"component":{}}],["post(\"/hello",{"_index":2469,"title":{},"name":{},"text":{"38":{}},"component":{}}],["postconstruct",{"_index":766,"title":{},"name":{},"text":{"6":{}},"component":{}}],["postgr",{"_index":1289,"title":{},"name":{},"text":{"16":{},"21":{},"27":{}},"component":{}}],["postgres:5432/postgres?currentschema=data",{"_index":1328,"title":{},"name":{},"text":{"16":{}},"component":{}}],["postgres:pid(90",{"_index":1655,"title":{},"name":{},"text":{"21":{}},"component":{}}],["postgresql",{"_index":142,"title":{"29":{},"30":{},"31":{},"27-9":{},"29-2":{}},"name":{"29":{},"30":{},"31":{}},"text":{"1":{},"5":{},"14":{},"15":{},"16":{},"19":{},"21":{},"27":{},"29":{},"30":{},"31":{},"38":{},"46":{}},"component":{}}],["postgresql://timeout",{"_index":1879,"title":{},"name":{},"text":{"27":{}},"component":{}}],["postgresql:latest",{"_index":1286,"title":{},"name":{},"text":{"16":{}},"component":{}}],["postgressql",{"_index":143,"title":{},"name":{},"text":{"1":{},"27":{}},"component":{}}],["postmast",{"_index":1669,"title":{},"name":{},"text":{"21":{}},"component":{}}],["postrequestedfor(urlequalto(\"/\")).withrequestbody(containing(\"\\\"type\\\":\\\"domesticshipping\\\"\").and(containing(\"\\\"id",{"_index":2597,"title":{},"name":{},"text":{"42":{}},"component":{}}],["postrequestedfor(urlequalto(\"/\")).withrequestbody(containing(\"\\\"type\\\":\\\"fraudevaluation\\\"\").and(containing(\"\\\"id",{"_index":2596,"title":{},"name":{},"text":{"42":{}},"component":{}}],["postrequestedfor(urlequalto(\"/\")).withrequestbody(containing(order.getid",{"_index":2594,"title":{},"name":{},"text":{"42":{}},"component":{}}],["postresql",{"_index":2804,"title":{},"name":{},"text":{"46":{}},"component":{}}],["potenti",{"_index":969,"title":{},"name":{},"text":{"11":{},"33":{}},"component":{}}],["power",{"_index":1126,"title":{},"name":{},"text":{"14":{},"21":{},"38":{},"55":{}},"component":{}}],["practic",{"_index":1490,"title":{},"name":{},"text":{"19":{}},"component":{}}],["pre",{"_index":3348,"title":{},"name":{},"text":{"66":{}},"component":{}}],["preced",{"_index":3257,"title":{"60-3":{}},"name":{},"text":{},"component":{}}],["precis",{"_index":3282,"title":{},"name":{},"text":{"60":{}},"component":{}}],["predefin",{"_index":679,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["prefer",{"_index":2328,"title":{},"name":{},"text":{"35":{},"41":{},"48":{},"57":{},"73":{}},"component":{}}],["prefix",{"_index":681,"title":{},"name":{},"text":{"6":{},"23":{},"34":{}},"component":{}}],["prepar",{"_index":1275,"title":{"50-1":{},"59-3":{}},"name":{},"text":{"15":{},"27":{},"58":{},"59":{}},"component":{}}],["prerequisit",{"_index":1069,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"21":{},"23":{},"24":{},"25":{},"26":{},"29":{},"30":{},"33":{},"34":{},"36":{},"38":{},"41":{},"42":{},"43":{},"47":{},"49":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"63":{},"66":{},"67":{},"68":{},"70":{},"71":{},"73":{}},"component":{}}],["present",{"_index":496,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"17":{},"20":{},"28":{},"29":{},"65":{},"67":{}},"component":{}}],["preserv",{"_index":2935,"title":{},"name":{},"text":{"48":{}},"component":{}}],["press",{"_index":1709,"title":{},"name":{},"text":{"21":{},"73":{}},"component":{}}],["prevent",{"_index":1588,"title":{},"name":{},"text":{"21":{},"43":{},"49":{}},"component":{}}],["preview",{"_index":3387,"title":{},"name":{},"text":{"69":{}},"component":{}}],["previou",{"_index":586,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"10":{},"13":{},"17":{},"18":{},"21":{},"24":{},"25":{},"26":{},"32":{},"33":{},"34":{},"35":{},"36":{},"41":{},"42":{},"45":{},"55":{},"58":{},"59":{},"60":{},"63":{},"70":{}},"component":{}}],["previous",{"_index":1786,"title":{},"name":{},"text":{"25":{},"58":{},"59":{}},"component":{}}],["price",{"_index":2282,"title":{},"name":{},"text":{"34":{}},"component":{}}],["price/{symbol",{"_index":2266,"title":{},"name":{},"text":{"34":{}},"component":{}}],["primit",{"_index":573,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["print",{"_index":781,"title":{},"name":{},"text":{"7":{},"37":{},"41":{},"47":{}},"component":{}}],["printact",{"_index":528,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["printafterevent1",{"_index":896,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["printafterevent2",{"_index":899,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["printexitmessag",{"_index":900,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["printmessag",{"_index":1011,"title":{},"name":{},"text":{"11":{}},"component":{}}],["printwaitmessag",{"_index":853,"title":{},"name":{},"text":{"9":{}},"component":{}}],["priorit",{"_index":2972,"title":{},"name":{},"text":{"49":{},"51":{}},"component":{}}],["prioriti",{"_index":1149,"title":{},"name":{},"text":{"14":{}},"component":{}}],["privaci",{"_index":2529,"title":{},"name":{},"text":{"41":{}},"component":{}}],["privat",{"_index":1030,"title":{},"name":{},"text":{"12":{},"33":{},"42":{},"43":{},"57":{},"67":{}},"component":{}}],["privileg",{"_index":2979,"title":{},"name":{},"text":{"50":{}},"component":{}}],["probe",{"_index":1368,"title":{},"name":{},"text":{"17":{},"49":{}},"component":{}}],["problem",{"_index":2133,"title":{},"name":{},"text":{"33":{},"41":{},"49":{},"54":{},"73":{}},"component":{}}],["proce",{"_index":3235,"title":{},"name":{},"text":{"59":{}},"component":{}}],["procedur",{"_index":1060,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"33":{},"34":{},"36":{},"38":{},"41":{},"42":{},"43":{},"47":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"63":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{}},"component":{}}],["proceed",{"_index":3115,"title":{},"name":{},"text":{"57":{},"59":{}},"component":{}}],["process",{"_index":198,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"12":{},"14":{},"15":{},"16":{},"19":{},"21":{},"25":{},"26":{},"27":{},"29":{},"30":{},"33":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"47":{},"54":{},"57":{},"58":{},"59":{},"65":{},"66":{},"67":{}},"component":{}}],["process/correl",{"_index":1525,"title":{},"name":{},"text":{"19":{}},"component":{}}],["process_id",{"_index":1814,"title":{},"name":{},"text":{"26":{}},"component":{}}],["process_id=\".*?\"/).match",{"_index":1816,"title":{},"name":{},"text":{"26":{}},"component":{}}],["processdomesticorderunderfraudev",{"_index":2577,"title":{},"name":{},"text":{"42":{}},"component":{}}],["processid",{"_index":1145,"title":{},"name":{},"text":{"14":{},"25":{},"26":{}},"component":{}}],["processinst",{"_index":1144,"title":{},"name":{},"text":{"14":{},"16":{},"26":{}},"component":{}}],["processinstanceabort",{"_index":1181,"title":{},"name":{},"text":{"14":{}},"component":{}}],["processinstanceev",{"_index":1252,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["processinstanceid",{"_index":1150,"title":{},"name":{},"text":{"14":{},"19":{},"37":{}},"component":{}}],["processinstancelisten",{"_index":1800,"title":{},"name":{},"text":{"26":{}},"component":{}}],["processinstanceretri",{"_index":1187,"title":{},"name":{},"text":{"14":{}},"component":{}}],["processinstances(wher",{"_index":1152,"title":{},"name":{},"text":{"14":{}},"component":{}}],["processinstanceskip",{"_index":1188,"title":{},"name":{},"text":{"14":{}},"component":{}}],["processinstanceupdatevari",{"_index":1196,"title":{},"name":{},"text":{"14":{}},"component":{}}],["processnam",{"_index":1153,"title":{},"name":{},"text":{"14":{},"25":{},"26":{}},"component":{}}],["processor",{"_index":3237,"title":{},"name":{},"text":{"59":{}},"component":{}}],["processpay",{"_index":2691,"title":{},"name":{},"text":{"45":{}},"component":{}}],["processpaymentact",{"_index":2692,"title":{},"name":{},"text":{"45":{}},"component":{}}],["prod",{"_index":1691,"title":{},"name":{},"text":{"21":{},"34":{},"51":{}},"component":{}}],["produc",{"_index":35,"title":{"17":{},"18":{}},"name":{"17":{},"18":{}},"text":{"1":{},"6":{},"8":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"23":{},"27":{},"28":{},"29":{},"33":{},"37":{},"41":{},"42":{}},"component":{}}],["product",{"_index":1862,"title":{"34-7":{},"51-3":{},"54-3":{}},"name":{},"text":{"27":{},"28":{},"34":{},"36":{},"46":{},"49":{},"51":{},"54":{},"66":{}},"component":{}}],["product_id",{"_index":639,"title":{},"name":{},"text":{"6":{}},"component":{}}],["profil",{"_index":824,"title":{"9-7":{},"46-5":{},"49-1":{},"51-3":{},"54-2":{},"54-3":{}},"name":{},"text":{"9":{},"21":{},"27":{},"34":{},"38":{},"46":{},"47":{},"48":{},"49":{},"51":{},"54":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["profit",{"_index":2281,"title":{},"name":{},"text":{"34":{}},"component":{}}],["program",{"_index":2562,"title":{},"name":{},"text":{"42":{},"46":{}},"component":{}}],["progress",{"_index":3066,"title":{},"name":{},"text":{"54":{}},"component":{}}],["project",{"_index":72,"title":{"21":{},"66":{},"67":{},"68":{},"9-8":{},"21-1":{},"23-4":{},"41-2":{},"41-3":{},"41-4":{},"41-5":{},"46-6":{},"46-7":{},"66-1":{},"66-2":{}},"name":{"66":{}},"text":{"1":{},"3":{},"5":{},"6":{},"7":{},"9":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"41":{},"43":{},"46":{},"55":{},"57":{},"58":{},"59":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"73":{}},"component":{}}],["project.basedir}/../serverless",{"_index":2345,"title":{},"name":{},"text":{"35":{}},"component":{}}],["project/namespac",{"_index":3249,"title":{},"name":{},"text":{"59":{}},"component":{}}],["project/target/quarku",{"_index":2849,"title":{},"name":{},"text":{"47":{}},"component":{}}],["project:1.0.0",{"_index":2557,"title":{},"name":{},"text":{"41":{}},"component":{}}],["project:1.0.1",{"_index":2556,"title":{},"name":{},"text":{"41":{}},"component":{}}],["project\\ncopi",{"_index":2832,"title":{},"name":{},"text":{"47":{}},"component":{}}],["project’",{"_index":293,"title":{},"name":{},"text":{"3":{},"6":{}},"component":{}}],["prometheu",{"_index":157,"title":{"25":{},"25-4":{}},"name":{"25":{}},"text":{"1":{},"25":{},"26":{}},"component":{}}],["prompt",{"_index":2029,"title":{},"name":{},"text":{"31":{}},"component":{}}],["promql",{"_index":1839,"title":{},"name":{},"text":{"26":{}},"component":{}}],["prop",{"_index":2927,"title":{},"name":{},"text":{"48":{},"49":{}},"component":{}}],["propag",{"_index":1636,"title":{"32-6":{}},"name":{},"text":{"21":{},"27":{},"32":{},"38":{},"46":{}},"component":{}}],["propagation=[true,fals",{"_index":2117,"title":{},"name":{},"text":{"32":{}},"component":{}}],["propagation=tru",{"_index":2119,"title":{},"name":{},"text":{"32":{}},"component":{}}],["proper",{"_index":187,"title":{},"name":{},"text":{"2":{},"6":{},"73":{}},"component":{}}],["properli",{"_index":236,"title":{},"name":{},"text":{"2":{},"27":{},"28":{},"33":{},"59":{}},"component":{}}],["properti",{"_index":85,"title":{"5":{},"16-7":{},"27-6":{},"48-2":{}},"name":{"5":{}},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"42":{},"43":{},"46":{},"48":{},"49":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"65":{},"73":{}},"component":{}}],["protect",{"_index":730,"title":{},"name":{},"text":{"6":{}},"component":{}}],["proto",{"_index":2329,"title":{},"name":{},"text":{"35":{}},"component":{}}],["protobuff",{"_index":1678,"title":{},"name":{},"text":{"21":{}},"component":{}}],["protocol",{"_index":715,"title":{},"name":{},"text":{"6":{},"16":{},"20":{},"24":{},"27":{},"53":{},"57":{},"58":{},"59":{}},"component":{}}],["protocolvers",{"_index":1552,"title":{},"name":{},"text":{"20":{}},"component":{}}],["prototyp",{"_index":2614,"title":{},"name":{},"text":{"43":{}},"component":{}}],["provid",{"_index":169,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"9":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"27":{},"28":{},"29":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"41":{},"46":{},"50":{},"51":{},"54":{},"55":{},"57":{},"58":{},"60":{},"63":{},"64":{},"65":{},"66":{},"69":{},"72":{},"73":{}},"component":{}}],["provis",{"_index":904,"title":{},"name":{},"text":{"9":{},"14":{},"16":{},"46":{}},"component":{}}],["proxi",{"_index":3364,"title":{},"name":{},"text":{"68":{}},"component":{}}],["psql",{"_index":2040,"title":{},"name":{},"text":{"31":{}},"component":{}}],["pt15m",{"_index":841,"title":{},"name":{},"text":{"9":{}},"component":{}}],["pt1h",{"_index":854,"title":{},"name":{},"text":{"9":{}},"component":{}}],["pt30",{"_index":876,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["pt5",{"_index":890,"title":{},"name":{},"text":{"9":{}},"component":{}}],["public",{"_index":550,"title":{},"name":{},"text":{"6":{},"12":{},"33":{},"37":{},"42":{},"43":{},"45":{},"47":{},"67":{}},"component":{}}],["publish",{"_index":1019,"title":{"20-2":{}},"name":{},"text":{"12":{},"18":{},"19":{},"20":{},"37":{},"47":{},"57":{}},"component":{}}],["publishact",{"_index":1028,"title":{},"name":{},"text":{"12":{}},"component":{}}],["pull",{"_index":3141,"title":{},"name":{},"text":{"57":{},"58":{},"59":{},"67":{},"71":{}},"component":{}}],["purpos",{"_index":167,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"14":{},"15":{},"19":{},"23":{},"27":{},"33":{},"46":{},"66":{}},"component":{}}],["push",{"_index":2545,"title":{},"name":{},"text":{"41":{},"47":{},"55":{},"57":{},"58":{},"59":{},"67":{},"71":{}},"component":{}}],["put",{"_index":1824,"title":{},"name":{},"text":{"26":{}},"component":{}}],["python",{"_index":240,"title":{},"name":{},"text":{"2":{},"36":{}},"component":{}}],["q/health/liv",{"_index":3196,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["q/health/readi",{"_index":3203,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["q/metric",{"_index":1764,"title":{},"name":{},"text":{"25":{},"26":{}},"component":{}}],["qualifi",{"_index":541,"title":{},"name":{},"text":{"6":{},"11":{},"45":{}},"component":{}}],["quarantin",{"_index":3370,"title":{},"name":{},"text":{"68":{}},"component":{}}],["quarkivers",{"_index":1545,"title":{},"name":{},"text":{"20":{}},"component":{}}],["quarku",{"_index":71,"title":{"15":{},"17":{},"18":{},"21":{},"28":{},"30":{},"38":{},"55":{},"63":{},"3-2":{},"9-8":{},"14-4":{},"14-5":{},"14-14":{},"16-6":{},"23-1":{},"31-6":{},"33-2":{},"46-6":{},"46-7":{},"57-5":{},"58-5":{},"59-6":{}},"name":{"15":{},"28":{},"55":{},"62":{},"63":{},"64":{},"65":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"49":{},"55":{},"57":{},"58":{},"59":{},"60":{},"63":{},"65":{},"66":{},"67":{}},"component":{}}],["quarkus.10.103.94.37.sslip.io",{"_index":3164,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["quarkus.10.103.94.37.sslip.io/jsongreet",{"_index":3169,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["quarkus.contain",{"_index":3078,"title":{},"name":{},"text":{"55":{},"57":{},"58":{},"59":{}},"component":{}}],["quarkus.datasource.db",{"_index":2006,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["quarkus.datasource.jdbc.url",{"_index":1885,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgr",{"_index":2010,"title":{},"name":{},"text":{"30":{}},"component":{}}],["quarkus.datasource.password",{"_index":1905,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["quarkus.datasource.password=pass",{"_index":2009,"title":{},"name":{},"text":{"30":{}},"component":{}}],["quarkus.datasource.reactive.url",{"_index":1906,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["quarkus.datasource.usernam",{"_index":1904,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["quarkus.datasource.username=postgr",{"_index":2008,"title":{},"name":{},"text":{"30":{}},"component":{}}],["quarkus.flyway.baselin",{"_index":2045,"title":{},"name":{},"text":{"31":{}},"component":{}}],["quarkus.flyway.migr",{"_index":2011,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["quarkus.grpc.clients.greeter.host=localhost",{"_index":2349,"title":{},"name":{},"text":{"35":{}},"component":{}}],["quarkus.grpc.clients.greeter.port=50051",{"_index":2350,"title":{},"name":{},"text":{"35":{}},"component":{}}],["quarkus.http.host",{"_index":2932,"title":{},"name":{},"text":{"48":{}},"component":{}}],["quarkus.http.non",{"_index":1242,"title":{},"name":{},"text":{"14":{}},"component":{}}],["quarkus.http.port",{"_index":2931,"title":{},"name":{},"text":{"48":{}},"component":{}}],["quarkus.http.root",{"_index":1241,"title":{},"name":{},"text":{"14":{}},"component":{}}],["quarkus.infinispan",{"_index":1922,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus.knative.name=hello",{"_index":3182,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["quarkus.kogito",{"_index":3311,"title":{},"name":{},"text":{"62":{}},"component":{}}],["quarkus.kogito.data",{"_index":1238,"title":{},"name":{},"text":{"14":{},"15":{}},"component":{}}],["quarkus.kogito.devservices.en",{"_index":494,"title":{},"name":{},"text":{"5":{},"15":{},"16":{}},"component":{}}],["quarkus.kogito.devservices.enabled=fals",{"_index":1276,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{}}],["quarkus.kogito.devservices.imag",{"_index":501,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["quarkus.kogito.devservices.imagename=quay.io/kiegroup/kogito",{"_index":1343,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus.kogito.devservices.port",{"_index":497,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["quarkus.kogito.devservices.port=8180",{"_index":1342,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus.kogito.devservices.servic",{"_index":506,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["quarkus.kogito.devservices.shar",{"_index":504,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["quarkus.kogito.devservices.shared=fals",{"_index":1345,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus.kogito.logger.alway",{"_index":490,"title":{},"name":{},"text":{"5":{}},"component":{}}],["quarkus.kubernetes.deploy",{"_index":1415,"title":{},"name":{},"text":{"17":{},"57":{},"58":{},"59":{}},"component":{}}],["quarkus.kubernetes.deploy=tru",{"_index":3205,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["quarkus.log.category.\"okhttp3.okhttpclient\".level=info",{"_index":3304,"title":{},"name":{},"text":{"60":{}},"component":{}}],["quarkus.oidc",{"_index":2102,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["quarkus.openapi",{"_index":2058,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["quarkus.profil",{"_index":1952,"title":{},"name":{},"text":{"27":{},"34":{}},"component":{}}],["quarkus.rest",{"_index":2191,"title":{},"name":{},"text":{"33":{},"34":{},"36":{},"43":{}},"component":{}}],["quarkus/acm",{"_index":2215,"title":{},"name":{},"text":{"33":{}},"component":{}}],["quarkus/curr",{"_index":2219,"title":{},"name":{},"text":{"33":{}},"component":{}}],["quarkus/dock",{"_index":2214,"title":{},"name":{},"text":{"33":{}},"component":{}}],["quarkus/greet",{"_index":3307,"title":{},"name":{},"text":{"60":{}},"component":{}}],["quarkus/script",{"_index":2212,"title":{},"name":{},"text":{"33":{}},"component":{}}],["quarkus/src/main/proto",{"_index":2346,"title":{},"name":{},"text":{"35":{}},"component":{}}],["quarkus:1.0",{"_index":3096,"title":{},"name":{},"text":{"55":{},"57":{},"58":{},"59":{}},"component":{}}],["quarkus:add",{"_index":1352,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{}}],["quarkus:dev",{"_index":1093,"title":{},"name":{},"text":{"13":{},"21":{},"34":{},"35":{}},"component":{}}],["quarkus_datasource_db_kind",{"_index":1329,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_datasource_jdbc_url",{"_index":1294,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["quarkus_datasource_password",{"_index":1297,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["quarkus_datasource_reactive_url",{"_index":1878,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus_datasource_usernam",{"_index":1296,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["quarkus_flyway_migrate_at_start",{"_index":1299,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_flyway_migrate_at_start=tru",{"_index":1283,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_hibernate_orm_database_gener",{"_index":1300,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_http_cor",{"_index":1331,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_http_cors_origin",{"_index":1298,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_http_port",{"_index":1332,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_infinispan_client_auth_realm",{"_index":1918,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus_infinispan_client_host",{"_index":1908,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus_infinispan_client_password",{"_index":1921,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus_infinispan_client_sasl_mechan",{"_index":1914,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus_infinispan_client_use_auth",{"_index":1913,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus_infinispan_client_usernam",{"_index":1920,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkus_kafka_health_en",{"_index":1330,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quarkus_profil",{"_index":1943,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarkusintegrationtest",{"_index":1974,"title":{},"name":{},"text":{"29":{}},"component":{}}],["quarkustest",{"_index":2464,"title":{},"name":{},"text":{"38":{},"42":{},"43":{}},"component":{}}],["quarkustest(1",{"_index":2567,"title":{},"name":{},"text":{"42":{}},"component":{}}],["quarkustestresourc",{"_index":2612,"title":{"43-2":{}},"name":{},"text":{"43":{}},"component":{}}],["quarkustestresource(restcountriesmockserver.class",{"_index":2655,"title":{},"name":{},"text":{"43":{}},"component":{}}],["quarkustestresourcelifecyclemanag",{"_index":2645,"title":{},"name":{},"text":{"43":{}},"component":{}}],["quay.io",{"_index":2553,"title":{},"name":{},"text":{"41":{},"55":{},"57":{}},"component":{}}],["quay.io/johndoe/myworkflow:latest",{"_index":3037,"title":{},"name":{},"text":{"52":{}},"component":{}}],["quay.io/kiegroup",{"_index":1281,"title":{},"name":{},"text":{"16":{},"47":{},"52":{}},"component":{}}],["quay.io/kiegroup/kogito",{"_index":502,"title":{},"name":{},"text":{"5":{},"16":{},"27":{},"47":{},"50":{}},"component":{}}],["quay.io/kiegroup/serverless",{"_index":3192,"title":{},"name":{},"text":{"57":{}},"component":{}}],["quay.io/kogito/serverless",{"_index":3095,"title":{},"name":{},"text":{"55":{}},"component":{}}],["quay.io/oth",{"_index":2554,"title":{},"name":{},"text":{"41":{}},"component":{}}],["queri",{"_index":426,"title":{"14-8":{}},"name":{},"text":{"5":{},"6":{},"10":{},"14":{},"15":{},"16":{},"26":{},"27":{},"32":{},"33":{},"59":{},"60":{}},"component":{}}],["queue",{"_index":485,"title":{},"name":{},"text":{"5":{}},"component":{}}],["quick",{"_index":86,"title":{"30-1":{}},"name":{},"text":{"1":{},"5":{},"16":{},"30":{}},"component":{}}],["quickli",{"_index":2517,"title":{},"name":{},"text":{"41":{}},"component":{}}],["quickstart",{"_index":3212,"title":{},"name":{},"text":{"58":{}},"component":{}}],["quot",{"_index":1395,"title":{},"name":{},"text":{"17":{}},"component":{}}],["random",{"_index":2284,"title":{},"name":{},"text":{"34":{}},"component":{}}],["rang",{"_index":1168,"title":{},"name":{},"text":{"14":{}},"component":{}}],["rate",{"_index":1398,"title":{},"name":{},"text":{"17":{},"33":{}},"component":{}}],["raw",{"_index":2708,"title":{},"name":{},"text":{"45":{}},"component":{}}],["rbac.authorization.k8s.io",{"_index":3298,"title":{},"name":{},"text":{"60":{}},"component":{}}],["rbac.authorization.k8s.io/v1",{"_index":3287,"title":{},"name":{},"text":{"60":{}},"component":{}}],["re",{"_index":2844,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["re)build",{"_index":2806,"title":{},"name":{},"text":{"47":{}},"component":{}}],["reach",{"_index":818,"title":{},"name":{},"text":{"8":{},"19":{},"20":{},"21":{},"27":{},"30":{},"32":{},"46":{}},"component":{}}],["react",{"_index":2607,"title":{},"name":{},"text":{"42":{}},"component":{}}],["reactiv",{"_index":38,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"18":{},"21":{},"27":{},"28":{},"29":{},"38":{}},"component":{}}],["read",{"_index":1930,"title":{},"name":{},"text":{"27":{},"28":{},"32":{},"42":{},"47":{},"57":{},"58":{},"59":{},"60":{},"65":{},"70":{},"71":{}},"component":{}}],["readi",{"_index":33,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"15":{},"16":{},"24":{},"49":{},"50":{},"54":{},"57":{},"58":{},"59":{},"66":{},"68":{}},"component":{}}],["readinessprob",{"_index":3202,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["readm",{"_index":2001,"title":{},"name":{},"text":{"30":{}},"component":{}}],["real",{"_index":950,"title":{},"name":{},"text":{"10":{},"34":{}},"component":{}}],["realli",{"_index":410,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["realm",{"_index":1919,"title":{},"name":{},"text":{"27":{}},"component":{}}],["reason",{"_index":620,"title":{},"name":{},"text":{"6":{},"24":{},"35":{},"49":{},"51":{},"54":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["rebuild",{"_index":1763,"title":{},"name":{},"text":{"25":{},"41":{},"55":{}},"component":{}}],["receiv",{"_index":798,"title":{},"name":{},"text":{"8":{},"9":{},"12":{},"14":{},"17":{},"18":{},"19":{},"20":{},"23":{},"27":{},"33":{},"37":{},"42":{},"45":{},"46":{},"47":{},"49":{},"65":{}},"component":{}}],["recent",{"_index":719,"title":{},"name":{},"text":{"6":{}},"component":{}}],["recept",{"_index":795,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["recipi",{"_index":1859,"title":{},"name":{},"text":{"27":{}},"component":{}}],["recommend",{"_index":394,"title":{},"name":{},"text":{"4":{},"27":{},"28":{},"30":{},"46":{}},"component":{}}],["reconcil",{"_index":3157,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["record",{"_index":2024,"title":{},"name":{},"text":{"31":{}},"component":{}}],["recov",{"_index":3059,"title":{},"name":{},"text":{"54":{}},"component":{}}],["recoverfailureattempt",{"_index":3058,"title":{},"name":{},"text":{"54":{}},"component":{}}],["recreat",{"_index":1907,"title":{},"name":{},"text":{"27":{},"50":{}},"component":{}}],["recurs",{"_index":575,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["red",{"_index":1581,"title":{"70":{},"70-1":{},"70-2":{}},"name":{},"text":{"21":{},"47":{},"59":{},"66":{},"68":{},"69":{},"70":{},"73":{}},"component":{}}],["redhat",{"_index":3388,"title":{},"name":{"70":{}},"text":{},"component":{}}],["redirect",{"_index":2425,"title":{},"name":{},"text":{"36":{},"64":{},"73":{}},"component":{}}],["reduc",{"_index":674,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ref",{"_index":1254,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"27":{},"33":{},"36":{}},"component":{}}],["refer",{"_index":87,"title":{"30-1":{}},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"16":{},"17":{},"19":{},"23":{},"24":{},"25":{},"27":{},"30":{},"32":{},"33":{},"34":{},"36":{},"37":{},"42":{},"45":{},"49":{},"53":{},"57":{},"59":{},"62":{},"65":{},"73":{}},"component":{}}],["referenc",{"_index":306,"title":{"53":{},"23-3":{},"49-5":{}},"name":{"53":{}},"text":{"3":{},"8":{},"14":{},"16":{},"23":{},"26":{},"32":{},"36":{},"49":{},"53":{}},"component":{}}],["reflect",{"_index":3011,"title":{},"name":{},"text":{"50":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["refnam",{"_index":530,"title":{},"name":{},"text":{"6":{},"9":{},"10":{},"11":{},"23":{},"24":{},"33":{},"34":{},"35":{},"36":{},"37":{},"46":{},"47":{},"49":{},"53":{}},"component":{}}],["refname\":\"divis",{"_index":761,"title":{},"name":{},"text":{"6":{}},"component":{}}],["refname\":\"processpay",{"_index":2683,"title":{},"name":{},"text":{"45":{}},"component":{}}],["refresh",{"_index":2205,"title":{},"name":{},"text":{"33":{},"64":{},"65":{},"73":{}},"component":{}}],["regard",{"_index":1273,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{}}],["regardless",{"_index":827,"title":{},"name":{},"text":{"9":{},"10":{},"17":{},"42":{}},"component":{}}],["regcr",{"_index":2878,"title":{},"name":{},"text":{"47":{},"52":{}},"component":{}}],["regex",{"_index":983,"title":{},"name":{},"text":{"11":{}},"component":{}}],["regist",{"_index":301,"title":{},"name":{},"text":{"3":{},"6":{},"21":{},"27":{},"38":{}},"component":{}}],["register(handler.getname(),handl",{"_index":768,"title":{},"name":{},"text":{"6":{}},"component":{}}],["registri",{"_index":2546,"title":{"47-7":{},"47-8":{},"53-2":{},"59-3":{},"70-2":{},"73-5":{},"73-6":{}},"name":{},"text":{"41":{},"47":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"66":{},"70":{},"73":{}},"component":{}}],["registry.access.redhat.com/ubi8/openjdk",{"_index":2839,"title":{},"name":{},"text":{"47":{}},"component":{}}],["registry.openshift",{"_index":3251,"title":{},"name":{},"text":{"59":{}},"component":{}}],["registry.svc:5000",{"_index":3252,"title":{},"name":{},"text":{"59":{}},"component":{}}],["registry.svc:5000/kogito",{"_index":3253,"title":{},"name":{},"text":{"59":{}},"component":{}}],["registry}/apis/registry/v2",{"_index":3419,"title":{},"name":{},"text":{"73":{}},"component":{}}],["regular",{"_index":515,"title":{"6-15":{}},"name":{},"text":{"6":{},"11":{},"20":{},"33":{}},"component":{}}],["rel",{"_index":2203,"title":{},"name":{},"text":{"33":{}},"component":{}}],["relat",{"_index":1013,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"17":{},"26":{},"30":{},"32":{},"33":{},"36":{},"37":{},"41":{},"45":{},"58":{},"59":{},"65":{}},"component":{}}],["releas",{"_index":358,"title":{},"name":{},"text":{"4":{},"19":{},"30":{},"36":{},"41":{},"45":{},"71":{},"73":{}},"component":{}}],["release_not",{"_index":183,"title":{},"name":{"2":{}},"text":{},"component":{}}],["relev",{"_index":698,"title":{},"name":{},"text":{"6":{},"18":{},"35":{}},"component":{}}],["reli",{"_index":683,"title":{},"name":{},"text":{"6":{},"15":{},"30":{},"32":{}},"component":{}}],["reload",{"_index":201,"title":{},"name":{},"text":{"2":{},"72":{},"73":{}},"component":{}}],["remain",{"_index":2343,"title":{},"name":{},"text":{"35":{},"46":{},"54":{}},"component":{}}],["rememb",{"_index":1560,"title":{},"name":{},"text":{"20":{},"35":{},"60":{}},"component":{}}],["remot",{"_index":738,"title":{"73-5":{}},"name":{},"text":{"6":{},"14":{},"33":{},"35":{},"36":{},"53":{},"55":{},"58":{},"67":{},"73":{}},"component":{}}],["remotecatalog",{"_index":2272,"title":{},"name":{},"text":{"34":{}},"component":{}}],["remotecatalog#operation1",{"_index":2274,"title":{},"name":{},"text":{"34":{}},"component":{}}],["remotecatalog#operation2",{"_index":2276,"title":{},"name":{},"text":{"34":{}},"component":{}}],["remov",{"_index":191,"title":{"49-4":{}},"name":{},"text":{"2":{},"8":{},"25":{},"27":{},"30":{},"31":{},"47":{},"49":{},"53":{},"59":{}},"component":{}}],["renam",{"_index":3386,"title":{},"name":{},"text":{"69":{}},"component":{}}],["replac",{"_index":1731,"title":{},"name":{},"text":{"23":{},"24":{},"25":{},"32":{},"43":{},"47":{},"48":{},"49":{},"50":{},"53":{}},"component":{}}],["replace($match($l[1",{"_index":1815,"title":{},"name":{},"text":{"26":{}},"component":{}}],["replic",{"_index":1139,"title":{},"name":{},"text":{"14":{},"16":{},"42":{}},"component":{}}],["replica",{"_index":1314,"title":{},"name":{},"text":{"16":{}},"component":{}}],["repo",{"_index":3357,"title":{},"name":{},"text":{"67":{}},"component":{}}],["report",{"_index":408,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["repositori",{"_index":1023,"title":{},"name":{},"text":{"12":{},"13":{},"21":{},"27":{},"30":{},"33":{},"34":{},"35":{},"37":{},"38":{},"41":{},"45":{},"46":{},"49":{},"55":{},"67":{}},"component":{}}],["repres",{"_index":1421,"title":{},"name":{},"text":{"17":{},"27":{},"35":{},"45":{}},"component":{}}],["represent",{"_index":1723,"title":{},"name":{},"text":{"23":{}},"component":{}}],["request",{"_index":137,"title":{"6-18":{},"36-2":{}},"name":{},"text":{"1":{},"6":{},"9":{},"10":{},"13":{},"14":{},"17":{},"19":{},"21":{},"24":{},"25":{},"27":{},"28":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"42":{},"45":{},"47":{},"49":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"68":{},"71":{}},"component":{}}],["requestbodi",{"_index":2403,"title":{},"name":{},"text":{"36":{}},"component":{}}],["requestquot",{"_index":1427,"title":{},"name":{},"text":{"17":{}},"component":{}}],["requir",{"_index":55,"title":{"47-4":{},"60-1":{}},"name":{},"text":{"1":{},"6":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"35":{},"36":{},"41":{},"42":{},"43":{},"47":{},"49":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"67":{},"68":{},"70":{},"73":{}},"component":{}}],["reschedul",{"_index":1228,"title":{},"name":{},"text":{"14":{}},"component":{}}],["reserv",{"_index":537,"title":{},"name":{},"text":{"6":{},"45":{}},"component":{}}],["reset",{"_index":2603,"title":{},"name":{},"text":{"42":{},"64":{},"65":{}},"component":{}}],["resiz",{"_index":1830,"title":{},"name":{},"text":{"26":{}},"component":{}}],["resolut",{"_index":3148,"title":{},"name":{},"text":{"57":{}},"component":{}}],["resolv",{"_index":437,"title":{},"name":{},"text":{"5":{},"10":{},"33":{},"46":{},"67":{}},"component":{}}],["resourc",{"_index":302,"title":{"4-12":{},"6-21":{},"7-5":{},"8-2":{},"9-10":{},"10-4":{},"11-3":{},"12-2":{},"13-4":{},"14-15":{},"15-3":{},"16-4":{},"16-5":{},"16-8":{},"17-6":{},"18-4":{},"19-2":{},"21-6":{},"23-5":{},"24-2":{},"26-4":{},"27-14":{},"29-3":{},"30-2":{},"32-7":{},"33-4":{},"34-9":{},"36-6":{},"37-3":{},"38-1":{},"41-6":{},"42-4":{},"43-4":{},"45-4":{},"46-10":{},"47-4":{},"47-13":{},"48-3":{},"49-5":{},"49-13":{},"50-4":{},"53-3":{},"54-4":{},"55-5":{},"60-7":{},"69-2":{},"72-2":{}},"name":{"53":{}},"text":{"3":{},"7":{},"14":{},"16":{},"21":{},"27":{},"29":{},"33":{},"35":{},"42":{},"43":{},"47":{},"49":{},"50":{},"52":{},"53":{},"54":{},"60":{}},"component":{}}],["resourceid\":\"03e6cf79",{"_index":2741,"title":{},"name":{},"text":{"45":{}},"component":{}}],["resourceid\":\"2114cc5b",{"_index":2765,"title":{},"name":{},"text":{"45":{}},"component":{}}],["resourceid\":\"505259d9",{"_index":2729,"title":{},"name":{},"text":{"45":{}},"component":{}}],["resourceid\":\"6ab362c6",{"_index":2760,"title":{},"name":{},"text":{"45":{}},"component":{}}],["resourceid\":\"d6e2d538",{"_index":2735,"title":{},"name":{},"text":{"45":{}},"component":{}}],["resourceid\":\"dc32abe6",{"_index":2723,"title":{},"name":{},"text":{"45":{}},"component":{}}],["resourcenam",{"_index":3265,"title":{},"name":{},"text":{"60":{}},"component":{}}],["resources/\\n\\nrun",{"_index":2833,"title":{},"name":{},"text":{"47":{}},"component":{}}],["resources\\n",{"_index":2836,"title":{},"name":{},"text":{"47":{}},"component":{}}],["respect",{"_index":1009,"title":{},"name":{},"text":{"11":{},"19":{},"21":{},"25":{},"35":{},"41":{},"48":{},"70":{}},"component":{}}],["respond",{"_index":671,"title":{},"name":{},"text":{"6":{},"45":{},"49":{}},"component":{}}],["respons",{"_index":470,"title":{},"name":{},"text":{"5":{},"6":{},"9":{},"10":{},"11":{},"13":{},"15":{},"17":{},"21":{},"23":{},"26":{},"27":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"42":{},"43":{},"45":{},"47":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["responsedefinitionbuilder#withbodi",{"_index":2629,"title":{},"name":{},"text":{"43":{}},"component":{}}],["rest",{"_index":42,"title":{"38":{},"28-3":{},"36-2":{},"64-3":{}},"name":{},"text":{"1":{},"4":{},"10":{},"11":{},"20":{},"21":{},"26":{},"28":{},"29":{},"33":{},"34":{},"35":{},"36":{},"38":{},"42":{},"43":{},"45":{},"46":{},"49":{},"53":{},"64":{},"73":{}},"component":{}}],["rest/v2/name/greec",{"_index":2631,"title":{},"name":{},"text":{"43":{}},"component":{}}],["restart",{"_index":1543,"title":{},"name":{},"text":{"19":{},"21":{},"27":{},"50":{}},"component":{}}],["restassur",{"_index":141,"title":{},"name":{"38":{}},"text":{"1":{}},"component":{}}],["restassured.enableloggingofrequestandresponseifvalidationfail",{"_index":2466,"title":{},"name":{},"text":{"38":{},"42":{}},"component":{}}],["restassured.enableloggingofrequestandresponseifvalidationfails();(3",{"_index":1985,"title":{},"name":{},"text":{"29":{}},"component":{}}],["restcountriesmockserv",{"_index":2644,"title":{},"name":{},"text":{"43":{}},"component":{}}],["resteasi",{"_index":1585,"title":{},"name":{},"text":{"21":{},"38":{}},"component":{}}],["result",{"_index":577,"title":{},"name":{},"text":{"6":{},"10":{},"11":{},"12":{},"13":{},"14":{},"23":{},"26":{},"33":{},"34":{},"37":{},"38":{},"41":{},"45":{},"49":{},"55":{},"66":{}},"component":{}}],["result\":\"abc",{"_index":1103,"title":{},"name":{},"text":{"13":{}},"component":{}}],["result\":\"bc",{"_index":1113,"title":{},"name":{},"text":{"13":{}},"component":{}}],["resulteventref",{"_index":372,"title":{},"name":{},"text":{"4":{}},"component":{}}],["result|=.+\\\"a",{"_index":1076,"title":{},"name":{},"text":{"13":{}},"component":{}}],["result|=.+\\\"b",{"_index":1078,"title":{},"name":{},"text":{"13":{}},"component":{}}],["result|=.+\\\"c",{"_index":1080,"title":{},"name":{},"text":{"13":{}},"component":{}}],["resum",{"_index":819,"title":{},"name":{},"text":{"8":{},"12":{},"13":{},"18":{},"20":{},"30":{},"32":{},"37":{}},"component":{}}],["resumeev",{"_index":1027,"title":{},"name":{},"text":{"12":{}},"component":{}}],["retri",{"_index":323,"title":{"4-7":{}},"name":{},"text":{"4":{},"14":{},"27":{},"29":{},"42":{}},"component":{}}],["retriev",{"_index":1143,"title":{},"name":{},"text":{"14":{},"26":{},"33":{},"34":{},"59":{}},"component":{}}],["retrigg",{"_index":1216,"title":{},"name":{},"text":{"14":{}},"component":{}}],["return",{"_index":510,"title":{"6-5":{},"6-10":{}},"name":{},"text":{"6":{},"10":{},"11":{},"12":{},"13":{},"21":{},"23":{},"26":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"43":{},"58":{},"59":{}},"component":{}}],["reus",{"_index":2871,"title":{},"name":{},"text":{"47":{},"53":{}},"component":{}}],["revers",{"_index":2704,"title":{},"name":{},"text":{"45":{}},"component":{}}],["review",{"_index":3026,"title":{},"name":{},"text":{"51":{},"52":{}},"component":{}}],["revis",{"_index":3154,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["right",{"_index":941,"title":{},"name":{},"text":{"10":{},"14":{},"16":{},"65":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{}},"component":{}}],["rightel",{"_index":937,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["roadmap",{"_index":294,"title":{"51":{},"51-1":{}},"name":{},"text":{"3":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{}},"component":{}}],["role",{"_index":686,"title":{"60-1":{}},"name":{},"text":{"6":{},"19":{},"45":{},"60":{},"70":{}},"component":{}}],["rolebind",{"_index":3296,"title":{},"name":{},"text":{"60":{}},"component":{}}],["roleref",{"_index":3297,"title":{},"name":{},"text":{"60":{}},"component":{}}],["roll",{"_index":3072,"title":{},"name":{},"text":{"54":{}},"component":{}}],["rollout",{"_index":3064,"title":{},"name":{},"text":{"54":{}},"component":{}}],["root",{"_index":634,"title":{},"name":{},"text":{"6":{},"14":{},"17":{},"33":{}},"component":{}}],["rootprocessid",{"_index":1147,"title":{},"name":{},"text":{"14":{}},"component":{}}],["rootprocessinstanceid",{"_index":1148,"title":{},"name":{},"text":{"14":{}},"component":{}}],["rout",{"_index":153,"title":{"23":{},"23-2":{}},"name":{"23":{}},"text":{"1":{},"6":{},"21":{},"23":{},"38":{},"47":{},"49":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["route.openshift.io",{"_index":3293,"title":{},"name":{},"text":{"60":{}},"component":{}}],["route/greet",{"_index":2919,"title":{},"name":{},"text":{"47":{}},"component":{}}],["route_rout",{"_index":2917,"title":{},"name":{},"text":{"47":{}},"component":{}}],["router",{"_index":3225,"title":{},"name":{},"text":{"58":{}},"component":{}}],["routes.v1.route.openshift.io",{"_index":3280,"title":{},"name":{},"text":{"60":{}},"component":{}}],["row",{"_index":1826,"title":{},"name":{},"text":{"26":{}},"component":{}}],["rpc",{"_index":364,"title":{},"name":{},"text":{"4":{},"6":{},"20":{},"35":{}},"component":{}}],["rpc:divis",{"_index":722,"title":{},"name":{},"text":{"6":{}},"component":{}}],["rpccustomtypehandl",{"_index":729,"title":{},"name":{},"text":{"6":{}},"component":{}}],["rpccustomworkitemhandl",{"_index":740,"title":{},"name":{},"text":{"6":{}},"component":{}}],["rpccustomworkitemhandlerconfig",{"_index":764,"title":{},"name":{},"text":{"6":{}},"component":{}}],["rule",{"_index":376,"title":{},"name":{},"text":{"4":{},"7":{},"19":{},"32":{},"33":{},"34":{},"36":{},"60":{}},"component":{}}],["run",{"_index":62,"title":{"30":{},"13-2":{},"13-3":{},"21-4":{},"33-3":{},"34-5":{},"34-6":{},"34-7":{},"35-2":{},"45-3":{},"46-9":{},"47-12":{},"49-3":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"13":{},"14":{},"15":{},"16":{},"19":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"33":{},"34":{},"35":{},"36":{},"38":{},"41":{},"42":{},"43":{},"45":{},"47":{},"49":{},"50":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"66":{},"68":{},"73":{}},"component":{}}],["run.jar",{"_index":2218,"title":{},"name":{},"text":{"33":{},"34":{},"60":{}},"component":{}}],["run.jar\\\"\\n",{"_index":2863,"title":{},"name":{},"text":{"47":{}},"component":{}}],["run\\n",{"_index":2837,"title":{},"name":{},"text":{"47":{}},"component":{}}],["runtim",{"_index":159,"title":{},"name":{"26":{},"39":{}},"text":{"1":{},"2":{},"5":{},"6":{},"11":{},"14":{},"16":{},"21":{},"23":{},"27":{},"28":{},"30":{},"36":{},"41":{},"47":{},"48":{},"53":{},"62":{}},"component":{}}],["runtimeexcept",{"_index":1007,"title":{},"name":{},"text":{"11":{}},"component":{}}],["s",{"_index":2476,"title":{},"name":{},"text":{"38":{},"49":{}},"component":{}}],["s2i",{"_index":3075,"title":{},"name":{},"text":{"55":{}},"component":{}}],["safe",{"_index":2980,"title":{},"name":{},"text":{"50":{}},"component":{}}],["safeti",{"_index":2050,"title":{},"name":{},"text":{"31":{}},"component":{}}],["saga",{"_index":174,"title":{"45":{},"45-1":{},"45-2":{},"45-3":{}},"name":{"45":{}},"text":{"1":{},"4":{},"45":{}},"component":{}}],["saludo",{"_index":919,"title":{},"name":{},"text":{"10":{},"47":{},"49":{}},"component":{}}],["same",{"_index":60,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"23":{},"25":{},"27":{},"28":{},"30":{},"32":{},"34":{},"35":{},"36":{},"42":{},"46":{},"47":{},"49":{},"50":{},"53":{},"60":{},"70":{}},"component":{}}],["sampl",{"_index":1780,"title":{},"name":{},"text":{"25":{},"69":{}},"component":{}}],["sandbox",{"_index":3374,"title":{},"name":{},"text":{"68":{}},"component":{}}],["sanit",{"_index":2064,"title":{},"name":{},"text":{"32":{},"36":{}},"component":{}}],["sasl",{"_index":1915,"title":{},"name":{},"text":{"27":{}},"component":{}}],["save",{"_index":925,"title":{},"name":{},"text":{"10":{},"24":{},"41":{},"47":{},"49":{},"53":{},"69":{},"70":{},"72":{},"73":{}},"component":{}}],["sayhello",{"_index":2331,"title":{},"name":{},"text":{"35":{}},"component":{}}],["sayhelloalllanguag",{"_index":2332,"title":{},"name":{},"text":{"35":{}},"component":{}}],["sayhelloapikey",{"_index":2086,"title":{},"name":{},"text":{"32":{}},"component":{}}],["sayhellobas",{"_index":2073,"title":{},"name":{},"text":{"32":{}},"component":{}}],["sayhellobear",{"_index":2082,"title":{},"name":{},"text":{"32":{}},"component":{}}],["sayhellomultiplelanguag",{"_index":2336,"title":{},"name":{},"text":{"35":{}},"component":{}}],["sayhellomultiplelanguagesatonc",{"_index":2333,"title":{},"name":{},"text":{"35":{}},"component":{}}],["sayhellooauth2",{"_index":2092,"title":{},"name":{},"text":{"32":{}},"component":{}}],["sb",{"_index":1433,"title":{},"name":{},"text":{"17":{},"27":{}},"component":{}}],["scaffold",{"_index":2538,"title":{},"name":{},"text":{"41":{}},"component":{}}],["scale",{"_index":1864,"title":{},"name":{},"text":{"27":{}},"component":{}}],["scan",{"_index":3259,"title":{},"name":{},"text":{"60":{}},"component":{}}],["scenario",{"_index":381,"title":{"14-2":{},"49-9":{}},"name":{},"text":{"4":{},"8":{},"9":{},"14":{},"17":{},"27":{},"28":{},"29":{},"35":{},"45":{},"46":{},"47":{},"49":{},"54":{}},"component":{}}],["schedul",{"_index":1856,"title":{},"name":{},"text":{"27":{},"45":{}},"component":{}}],["schema",{"_index":90,"title":{"7":{},"7-1":{},"7-2":{}},"name":{"7":{}},"text":{"1":{},"2":{},"7":{},"14":{},"16":{},"20":{},"27":{},"30":{},"31":{},"32":{},"33":{},"36":{},"53":{},"64":{},"72":{},"73":{}},"component":{}}],["schema.json",{"_index":2140,"title":{},"name":{},"text":{"33":{},"53":{}},"component":{}}],["scheme",{"_index":1770,"title":{},"name":{},"text":{"25":{},"32":{},"33":{},"35":{},"36":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["scope",{"_index":828,"title":{},"name":{},"text":{"9":{},"32":{},"33":{}},"component":{}}],["score",{"_index":1392,"title":{},"name":{},"text":{"17":{}},"component":{}}],["scrap_interv",{"_index":1779,"title":{},"name":{},"text":{"25":{}},"component":{}}],["scrape_interv",{"_index":1775,"title":{},"name":{},"text":{"25":{}},"component":{}}],["scratch",{"_index":3384,"title":{},"name":{},"text":{"69":{}},"component":{}}],["screen",{"_index":3324,"title":{},"name":{},"text":{"64":{},"65":{},"67":{},"70":{},"71":{}},"component":{}}],["script",{"_index":1903,"title":{"31-4":{}},"name":{},"text":{"27":{},"31":{},"41":{}},"component":{}}],["script_debug",{"_index":1870,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sdk",{"_index":246,"title":{},"name":{},"text":{"2":{}},"component":{}}],["search",{"_index":1122,"title":{},"name":{},"text":{"14":{},"18":{},"60":{},"64":{},"73":{}},"component":{}}],["sec",{"_index":2677,"title":{},"name":{},"text":{"45":{}},"component":{}}],["second",{"_index":473,"title":{},"name":{},"text":{"5":{},"6":{},"25":{},"29":{},"42":{},"46":{},"49":{}},"component":{}}],["secret",{"_index":326,"title":{"4-11":{},"47-7":{},"47-8":{}},"name":{},"text":{"4":{},"32":{},"33":{},"47":{},"52":{},"57":{},"70":{}},"component":{}}],["secret.method=bas",{"_index":2113,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["secret.value=secret",{"_index":2114,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["section",{"_index":383,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"14":{},"16":{},"17":{},"18":{},"19":{},"23":{},"24":{},"26":{},"27":{},"29":{},"33":{},"36":{},"41":{},"42":{},"43":{},"47":{},"49":{},"50":{},"54":{},"57":{},"58":{},"59":{},"64":{},"69":{},"73":{}},"component":{}}],["secur",{"_index":8,"title":{"1-6":{}},"name":{},"text":{"21":{},"32":{},"33":{},"41":{},"47":{},"49":{},"60":{},"68":{}},"component":{}}],["security_example_json",{"_index":2065,"title":{},"name":{},"text":{"32":{}},"component":{}}],["security_scheme_nam",{"_index":2066,"title":{},"name":{},"text":{"32":{}},"component":{}}],["securityschem",{"_index":2056,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["sed",{"_index":2891,"title":{},"name":{},"text":{"47":{}},"component":{}}],["see",{"_index":370,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"49":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["select",{"_index":914,"title":{},"name":{},"text":{"10":{},"18":{},"25":{},"27":{},"28":{},"33":{},"43":{},"45":{},"57":{},"58":{},"65":{},"67":{},"68":{},"69":{},"70":{},"73":{}},"component":{}}],["selector",{"_index":1311,"title":{},"name":{},"text":{"16":{},"25":{},"27":{},"60":{}},"component":{}}],["self",{"_index":3376,"title":{},"name":{},"text":{"68":{}},"component":{}}],["semant",{"_index":2352,"title":{},"name":{},"text":{"35":{},"46":{}},"component":{}}],["semicolon",{"_index":1911,"title":{},"name":{},"text":{"27":{},"60":{}},"component":{}}],["send",{"_index":514,"title":{"6-15":{},"6-16":{},"17-3":{},"24-1":{},"36-2":{},"65-2":{}},"name":{},"text":{"6":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"25":{},"28":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"45":{},"47":{},"57":{},"58":{},"59":{},"65":{},"66":{}},"component":{}}],["sendev",{"_index":1565,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sendresum",{"_index":1563,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sendtolog",{"_index":1739,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sensit",{"_index":986,"title":{},"name":{},"text":{"11":{}},"component":{}}],["sent",{"_index":1301,"title":{},"name":{},"text":{"16":{},"24":{},"42":{},"46":{},"65":{}},"component":{}}],["separ",{"_index":810,"title":{},"name":{},"text":{"8":{},"11":{},"14":{},"15":{},"27":{},"33":{},"34":{},"35":{},"41":{},"53":{},"58":{}},"component":{}}],["sequenc",{"_index":968,"title":{},"name":{},"text":{"11":{},"45":{}},"component":{}}],["sequenti",{"_index":2294,"title":{},"name":{},"text":{"34":{},"36":{}},"component":{}}],["seri",{"_index":1068,"title":{},"name":{},"text":{"13":{},"50":{}},"component":{}}],["serial",{"_index":609,"title":{},"name":{},"text":{"6":{},"13":{},"23":{}},"component":{}}],["serv",{"_index":412,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"17":{},"21":{},"24":{},"30":{},"57":{},"58":{},"59":{}},"component":{}}],["server",{"_index":475,"title":{"35-4":{},"43-2":{},"43-3":{}},"name":{},"text":{"5":{},"6":{},"20":{},"25":{},"27":{},"32":{},"33":{},"35":{},"42":{},"43":{},"47":{},"50":{},"68":{}},"component":{}}],["serverless",{"_index":21,"title":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"19":{},"22":{},"24":{},"29":{},"32":{},"37":{},"41":{},"45":{},"46":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"4-4":{},"14-1":{},"23-1":{},"23-2":{},"25-1":{},"25-2":{},"25-5":{},"33-2":{},"41-1":{},"46-5":{},"50-2":{},"60-4":{},"63-1":{},"66-1":{},"67-1":{},"68-2":{},"69-1":{},"71-1":{},"71-2":{},"72-1":{},"73-1":{},"73-2":{},"73-3":{},"73-4":{}},"name":{"4":{},"26":{},"50":{},"66":{},"67":{},"68":{},"69":{},"70":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"55":{},"57":{},"58":{},"59":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["serverless/serverless",{"_index":3248,"title":{},"name":{},"text":{"59":{}},"component":{}}],["serverless_workflow_vscode_extension_version.vsix",{"_index":3402,"title":{},"name":{},"text":{"73":{}},"component":{}}],["serverlessworkflow",{"_index":178,"title":{},"name":{},"text":{},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}}}],["servic",{"_index":5,"title":{"6":{},"16":{},"20":{},"24":{},"28":{},"32":{},"33":{},"34":{},"35":{},"36":{},"43":{},"48":{},"54":{},"60":{},"70":{},"1-4":{},"1-11":{},"1-12":{},"14-1":{},"14-3":{},"14-4":{},"14-5":{},"14-9":{},"14-11":{},"16-1":{},"16-3":{},"16-6":{},"16-7":{},"28-4":{},"32-1":{},"34-3":{},"34-4":{},"34-5":{},"34-8":{},"36-5":{},"43-1":{},"46-6":{},"46-7":{},"53-2":{},"60-2":{},"60-3":{},"60-4":{},"60-5":{},"60-6":{},"68-1":{},"70-1":{},"70-2":{},"73-5":{},"73-6":{}},"name":{"16":{},"20":{},"21":{},"32":{},"33":{},"34":{},"35":{},"36":{},"43":{},"60":{},"70":{}},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"68":{},"69":{},"70":{},"73":{}},"component":{}}],["service(",{"_index":2400,"title":{},"name":{},"text":{"36":{}},"component":{}}],["service.backoffretrymilli",{"_index":1893,"title":{},"name":{},"text":{"27":{}},"component":{}}],["service.default.10.109.169.193.sslip.io",{"_index":622,"title":{},"name":{},"text":{"6":{},"24":{}},"component":{}}],["service.default.10.109.169.193.sslip.io/plainjsonfunct",{"_index":631,"title":{},"name":{},"text":{"6":{}},"component":{}}],["service.http.job",{"_index":1937,"title":{},"name":{},"text":{"27":{}},"component":{}}],["service.kafka.job",{"_index":1953,"title":{},"name":{},"text":{"27":{}},"component":{}}],["service.maxintervallimittoretrymilli",{"_index":1894,"title":{},"name":{},"text":{"27":{}},"component":{}}],["service.url=http://localhost:8280",{"_index":1971,"title":{},"name":{},"text":{"28":{}},"component":{}}],["service.yml",{"_index":2177,"title":{},"name":{},"text":{"33":{}},"component":{}}],["service.yml#exchanger",{"_index":2145,"title":{},"name":{},"text":{"33":{}},"component":{}}],["service/exchang",{"_index":2181,"title":{},"name":{},"text":{"33":{}},"component":{}}],["service:java:com.acme.myinterfaceorclass::mymethod",{"_index":536,"title":{},"name":{},"text":{"6":{}},"component":{}}],["service:java:org.kie.kogito.examples.evenservice::iseven",{"_index":1005,"title":{},"name":{},"text":{"11":{}},"component":{}}],["service:org.kie.kogito.examples.exchangeworkflowhelper::validateinput",{"_index":2142,"title":{},"name":{},"text":{"33":{}},"component":{}}],["service?path=/funct",{"_index":1749,"title":{},"name":{},"text":{"24":{}},"component":{}}],["service?path=/plainjsonfunct",{"_index":628,"title":{},"name":{},"text":{"6":{}},"component":{}}],["service?path=/plainjsonfunction&ascloudevent=tru",{"_index":650,"title":{},"name":{},"text":{"6":{}},"component":{}}],["service_api",{"_index":2269,"title":{},"name":{},"text":{"34":{}},"component":{}}],["service_api.url=http://localhost:8282",{"_index":2268,"title":{},"name":{},"text":{"34":{}},"component":{}}],["service_error",{"_index":2149,"title":{},"name":{},"text":{"33":{}},"component":{}}],["service_healthi",{"_index":1290,"title":{},"name":{},"text":{"16":{}},"component":{}}],["serviceaccount",{"_index":3299,"title":{},"name":{},"text":{"60":{}},"component":{}}],["servicemonitor",{"_index":1767,"title":{},"name":{},"text":{"25":{}},"component":{}}],["services.app",{"_index":3375,"title":{},"name":{},"text":{"68":{}},"component":{}}],["services.serving.knative.dev",{"_index":3167,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["services.v1",{"_index":3274,"title":{},"name":{},"text":{"60":{}},"component":{}}],["services.v1.serving.knative.dev",{"_index":3275,"title":{},"name":{},"text":{"60":{}},"component":{}}],["serving.knative.dev",{"_index":3292,"title":{},"name":{},"text":{"60":{}},"component":{}}],["serving.knative.dev/v1",{"_index":1435,"title":{},"name":{},"text":{"17":{},"57":{},"58":{},"59":{}},"component":{}}],["serving.request",{"_index":673,"title":{},"name":{},"text":{"6":{}},"component":{}}],["set",{"_index":350,"title":{"64-5":{},"67-1":{},"68-1":{},"73-4":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"22":{},"26":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"41":{},"43":{},"46":{},"47":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"73":{}},"component":{}}],["setbodi",{"_index":1726,"title":{},"name":{},"text":{"23":{}},"component":{}}],["setconst",{"_index":942,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["setter",{"_index":2176,"title":{},"name":{},"text":{"33":{}},"component":{}}],["setting.json",{"_index":3408,"title":{},"name":{},"text":{"73":{}},"component":{}}],["settings.json",{"_index":3410,"title":{},"name":{},"text":{"73":{}},"component":{}}],["setup",{"_index":697,"title":{},"name":{},"text":{"6":{},"12":{},"19":{},"27":{},"30":{},"31":{},"41":{},"64":{},"68":{},"73":{}},"component":{}}],["setup.j",{"_index":1804,"title":{},"name":{},"text":{"26":{}},"component":{}}],["sever",{"_index":825,"title":{},"name":{},"text":{"9":{},"10":{},"16":{},"18":{},"41":{}},"component":{}}],["share",{"_index":505,"title":{},"name":{},"text":{"5":{},"10":{},"15":{},"16":{},"30":{},"35":{},"67":{}},"component":{}}],["shell",{"_index":2536,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ship",{"_index":1897,"title":{},"name":{},"text":{"27":{},"42":{},"45":{}},"component":{}}],["shippingrespons",{"_index":2734,"title":{},"name":{},"text":{"45":{}},"component":{}}],["shippingservic",{"_index":2752,"title":{},"name":{},"text":{"45":{}},"component":{}}],["short",{"_index":973,"title":{},"name":{},"text":{"11":{},"70":{}},"component":{}}],["shortli",{"_index":3351,"title":{},"name":{},"text":{"66":{}},"component":{}}],["show",{"_index":334,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"13":{},"16":{},"17":{},"19":{},"26":{},"27":{},"32":{},"33":{},"37":{},"42":{},"45":{},"46":{},"64":{},"66":{}},"component":{}}],["showcas",{"_index":177,"title":{"46":{},"9-9":{}},"name":{"46":{}},"text":{"1":{},"2":{},"9":{},"14":{},"27":{},"46":{}},"component":{}}],["shown",{"_index":389,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"13":{},"17":{},"25":{},"26":{},"27":{},"29":{},"32":{},"33":{},"34":{},"36":{},"37":{},"41":{},"42":{},"43":{},"45":{},"60":{},"67":{},"68":{},"70":{},"73":{}},"component":{}}],["shut",{"_index":1961,"title":{},"name":{},"text":{"27":{}},"component":{}}],["side",{"_index":1025,"title":{"35-4":{},"35-5":{}},"name":{},"text":{"12":{},"26":{},"35":{},"69":{},"73":{}},"component":{}}],["sign",{"_index":3360,"title":{},"name":{},"text":{"67":{},"68":{}},"component":{}}],["signal",{"_index":2599,"title":{},"name":{},"text":{"42":{},"51":{}},"component":{}}],["signatur",{"_index":545,"title":{},"name":{},"text":{"6":{}},"component":{}}],["signific",{"_index":1487,"title":{},"name":{},"text":{"19":{}},"component":{}}],["silent",{"_index":806,"title":{},"name":{},"text":{"8":{}},"component":{}}],["silentev",{"_index":809,"title":{},"name":{},"text":{"8":{}},"component":{}}],["similar",{"_index":786,"title":{},"name":{},"text":{"7":{},"8":{},"10":{},"14":{},"25":{},"32":{},"33":{},"36":{},"38":{},"46":{},"49":{},"53":{},"60":{}},"component":{}}],["simpl",{"_index":710,"title":{"35-3":{}},"name":{},"text":{"6":{},"15":{},"23":{},"32":{},"35":{},"37":{},"46":{},"53":{}},"component":{}}],["simpli",{"_index":1268,"title":{},"name":{},"text":{"15":{},"23":{},"28":{},"49":{}},"component":{}}],["simplif",{"_index":2805,"title":{},"name":{},"text":{"46":{}},"component":{}}],["simplifi",{"_index":608,"title":{},"name":{},"text":{"6":{},"14":{},"60":{}},"component":{}}],["simul",{"_index":346,"title":{},"name":{},"text":{"4":{},"12":{},"34":{}},"component":{}}],["simultan",{"_index":1062,"title":{},"name":{},"text":{"13":{},"42":{}},"component":{}}],["singl",{"_index":342,"title":{},"name":{},"text":{"4":{},"8":{},"14":{},"27":{},"35":{},"36":{},"45":{},"46":{},"66":{},"69":{}},"component":{}}],["singleton",{"_index":1958,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sink",{"_index":133,"title":{"42":{},"17-2":{}},"name":{},"text":{"1":{},"16":{},"17":{},"27":{},"38":{},"42":{}},"component":{}}],["sink.start",{"_index":2572,"title":{},"name":{},"text":{"42":{}},"component":{}}],["sink.stop",{"_index":2576,"title":{},"name":{},"text":{"42":{}},"component":{}}],["sink.stubfor(post(\"/\").willreturn(aresponse().withbody(\"ok\").withstatus(200",{"_index":2573,"title":{},"name":{},"text":{"42":{}},"component":{}}],["sink.verify(1",{"_index":2595,"title":{},"name":{},"text":{"42":{}},"component":{}}],["sink.verify(2",{"_index":2593,"title":{},"name":{},"text":{"42":{}},"component":{}}],["sinkbind",{"_index":1362,"title":{"42-2":{}},"name":{},"text":{"17":{},"27":{},"28":{},"42":{}},"component":{}}],["situat",{"_index":557,"title":{},"name":{},"text":{"6":{},"9":{},"45":{}},"component":{}}],["size",{"_index":486,"title":{},"name":{},"text":{"5":{},"18":{},"27":{},"55":{}},"component":{}}],["size=100",{"_index":1481,"title":{},"name":{},"text":{"18":{}},"component":{}}],["skeleton",{"_index":2831,"title":{},"name":{},"text":{"47":{}},"component":{}}],["skip",{"_index":927,"title":{},"name":{},"text":{"10":{},"14":{},"38":{},"46":{},"47":{},"50":{},"55":{},"59":{},"70":{}},"component":{}}],["sleep",{"_index":336,"title":{},"name":{},"text":{"4":{}},"component":{}}],["slider",{"_index":3337,"title":{},"name":{},"text":{"65":{}},"component":{}}],["slightli",{"_index":2864,"title":{},"name":{},"text":{"47":{}},"component":{}}],["small",{"_index":3098,"title":{},"name":{},"text":{"55":{}},"component":{}}],["smallry",{"_index":1262,"title":{"18-1":{},"18-2":{}},"name":{},"text":{"14":{},"16":{},"17":{},"18":{},"20":{},"21":{},"28":{},"38":{},"41":{}},"component":{}}],["snapshot",{"_index":1307,"title":{},"name":{},"text":{"16":{},"21":{},"25":{},"27":{},"30":{},"34":{},"50":{},"57":{},"58":{},"59":{}},"component":{}}],["snippet",{"_index":1938,"title":{},"name":{},"text":{"27":{},"35":{}},"component":{}}],["solut",{"_index":2135,"title":{},"name":{},"text":{"33":{}},"component":{}}],["someon",{"_index":3362,"title":{},"name":{},"text":{"67":{}},"component":{}}],["someth",{"_index":1141,"title":{},"name":{},"text":{"14":{},"49":{},"54":{}},"component":{}}],["sometim",{"_index":1359,"title":{},"name":{},"text":{"17":{},"49":{}},"component":{}}],["sonataflow",{"_index":280,"title":{"50":{},"51":{},"9-7":{},"47-8":{}},"name":{},"text":{"3":{},"9":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{}},"component":{}}],["sonataflow.org/descript",{"_index":2900,"title":{},"name":{},"text":{"47":{},"49":{},"53":{}},"component":{}}],["sonataflow.org/profil",{"_index":2938,"title":{},"name":{},"text":{"49":{},"53":{}},"component":{}}],["sonataflow.org/v1alpha08",{"_index":2865,"title":{},"name":{},"text":{"47":{},"49":{},"52":{},"53":{}},"component":{}}],["sonataflow.org/vers",{"_index":2901,"title":{},"name":{},"text":{"47":{},"49":{},"53":{}},"component":{}}],["sonataflowbuild",{"_index":2875,"title":{},"name":{},"text":{"47":{},"50":{},"54":{}},"component":{}}],["sonataflowbuilds.sonataflow.org",{"_index":3003,"title":{},"name":{},"text":{"50":{}},"component":{}}],["sonataflowplatform",{"_index":2818,"title":{},"name":{},"text":{"47":{},"49":{},"50":{},"52":{},"54":{}},"component":{}}],["sonataflowplatform.yaml",{"_index":2888,"title":{},"name":{},"text":{"47":{}},"component":{}}],["sonataflowplatforms.sonataflow.org",{"_index":3006,"title":{},"name":{},"text":{"50":{}},"component":{}}],["sonataflows.sonataflow.org",{"_index":3007,"title":{},"name":{},"text":{"50":{}},"component":{}}],["soon",{"_index":2799,"title":{},"name":{},"text":{"46":{}},"component":{}}],["sort",{"_index":1170,"title":{},"name":{},"text":{"14":{},"26":{},"65":{}},"component":{}}],["sortord",{"_index":1833,"title":{},"name":{},"text":{"26":{}},"component":{}}],["sourc",{"_index":654,"title":{"17-1":{}},"name":{},"text":{"6":{},"8":{},"12":{},"14":{},"15":{},"17":{},"19":{},"26":{},"29":{},"30":{},"33":{},"35":{},"37":{},"42":{},"43":{},"46":{},"63":{},"64":{},"65":{},"71":{}},"component":{}}],["sources.knative.dev/v1",{"_index":1432,"title":{},"name":{},"text":{"17":{},"27":{}},"component":{}}],["space",{"_index":3047,"title":{},"name":{},"text":{"53":{}},"component":{}}],["span",{"_index":1827,"title":{"27-2":{}},"name":{},"text":{"26":{}},"component":{}}],["spanish",{"_index":916,"title":{},"name":{},"text":{"10":{},"35":{},"47":{},"49":{}},"component":{}}],["spec",{"_index":1251,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"25":{},"27":{},"47":{},"49":{},"52":{},"53":{},"57":{},"58":{},"59":{},"66":{},"73":{}},"component":{}}],["spec.build",{"_index":3032,"title":{},"name":{},"text":{"52":{}},"component":{}}],["spec.build.config",{"_index":3031,"title":{},"name":{},"text":{"52":{}},"component":{}}],["spec.build.config.strategyoptions.kanikobuildcacheen",{"_index":2886,"title":{},"name":{},"text":{"47":{}},"component":{}}],["spec.build.templ",{"_index":3033,"title":{},"name":{},"text":{"52":{}},"component":{}}],["spec.devmode.baseimag",{"_index":3035,"title":{},"name":{},"text":{"52":{}},"component":{}}],["spec.devmodebaseimag",{"_index":3034,"title":{},"name":{},"text":{"52":{}},"component":{}}],["spec.host",{"_index":3239,"title":{},"name":{},"text":{"59":{}},"component":{}}],["spec.platform",{"_index":3030,"title":{},"name":{},"text":{"52":{}},"component":{}}],["spec.resourc",{"_index":3050,"title":{},"name":{},"text":{"53":{}},"component":{}}],["spec:\\n",{"_index":2820,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["spec_titl",{"_index":461,"title":{},"name":{},"text":{"5":{},"34":{}},"component":{}}],["special",{"_index":1722,"title":{},"name":{},"text":{"23":{}},"component":{}}],["specif",{"_index":74,"title":{"4":{},"36-2":{},"43-3":{},"51-2":{}},"name":{"4":{}},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"25":{},"26":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"41":{},"42":{},"43":{},"45":{},"47":{},"49":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"64":{},"66":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["specifi",{"_index":354,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"10":{},"11":{},"14":{},"15":{},"18":{},"29":{},"30":{},"31":{},"33":{},"37":{},"38":{},"41":{},"42":{},"47":{},"55":{},"73":{}},"component":{}}],["specs/acm",{"_index":2144,"title":{},"name":{},"text":{"33":{}},"component":{}}],["specs/multiplication.yaml#dooper",{"_index":2406,"title":{},"name":{},"text":{"36":{}},"component":{}}],["specs/subtraction.yaml#dooper",{"_index":935,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["specs/workflow",{"_index":3039,"title":{},"name":{},"text":{"53":{}},"component":{}}],["specvers",{"_index":652,"title":{},"name":{},"text":{"6":{},"13":{},"17":{},"19":{},"21":{},"34":{},"42":{}},"component":{}}],["specversion\":\"1.0\",\"id\":\"41495513",{"_index":1384,"title":{},"name":{},"text":{"17":{}},"component":{}}],["speed",{"_index":2887,"title":{},"name":{},"text":{"47":{},"50":{},"55":{}},"component":{}}],["spring",{"_index":2391,"title":{},"name":{},"text":{"36":{}},"component":{}}],["sql",{"_index":2036,"title":{},"name":{},"text":{"31":{}},"component":{}}],["squarest",{"_index":955,"title":{},"name":{},"text":{"10":{}},"component":{}}],["sr2j2",{"_index":2992,"title":{},"name":{},"text":{"50":{}},"component":{}}],["src/main/resourc",{"_index":1072,"title":{},"name":{},"text":{"13":{},"21":{},"34":{},"35":{},"36":{},"41":{},"66":{},"67":{}},"component":{}}],["src/main/resources/application.properti",{"_index":414,"title":{},"name":{},"text":{"5":{}},"component":{}}],["src/main/resources/dashboard",{"_index":3310,"title":{},"name":{},"text":{"62":{}},"component":{}}],["src/main/resources/myopenapifile.yaml",{"_index":2388,"title":{},"name":{},"text":{"36":{}},"component":{}}],["src/main/resources/openapi/stock",{"_index":2256,"title":{},"name":{},"text":{"34":{}},"component":{}}],["src/main/resources/rout",{"_index":1721,"title":{},"name":{},"text":{"23":{}},"component":{}}],["src/main/resources/spec",{"_index":2178,"title":{},"name":{},"text":{"33":{},"36":{}},"component":{}}],["src/test/java/org/kie/kogito/exampl",{"_index":2455,"title":{},"name":{},"text":{"38":{}},"component":{}}],["sso",{"_index":3421,"title":{},"name":{},"text":{"73":{}},"component":{}}],["stage",{"_index":962,"title":{},"name":{},"text":{"10":{},"28":{},"50":{},"54":{}},"component":{}}],["standalon",{"_index":170,"title":{"16":{},"14-3":{},"16-3":{},"46-7":{}},"name":{},"text":{"1":{},"9":{},"14":{},"16":{},"27":{},"28":{},"46":{}},"component":{}}],["standard",{"_index":835,"title":{},"name":{},"text":{"9":{},"32":{},"42":{},"47":{}},"component":{}}],["start",{"_index":1,"title":{"1-1":{},"43-2":{},"43-3":{},"64-2":{},"64-3":{},"64-6":{},"64-7":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"21":{},"22":{},"25":{},"26":{},"27":{},"29":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"42":{},"43":{},"45":{},"47":{},"49":{},"50":{},"53":{},"54":{},"55":{},"58":{},"60":{},"63":{},"64":{},"65":{},"66":{},"69":{}},"component":{}}],["start\":\"waitforev",{"_index":817,"title":{},"name":{},"text":{"8":{}},"component":{}}],["start=tru",{"_index":2012,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["startkeycloak.sh",{"_index":2213,"title":{},"name":{},"text":{"33":{}},"component":{}}],["startsink",{"_index":2570,"title":{},"name":{},"text":{"42":{}},"component":{}}],["startup",{"_index":1660,"title":{},"name":{},"text":{"21":{},"27":{},"30":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["startwiremockserverforfeaturea",{"_index":2660,"title":{},"name":{},"text":{"43":{}},"component":{}}],["startwiremockserverforfeatureb",{"_index":2661,"title":{},"name":{},"text":{"43":{}},"component":{}}],["state",{"_index":77,"title":{"4-1":{},"9-3":{},"9-4":{},"9-5":{},"12-1":{},"36-4":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"45":{},"46":{},"47":{},"49":{},"53":{},"54":{},"65":{},"66":{}},"component":{}}],["state[ev",{"_index":353,"title":{},"name":{},"text":{"4":{}},"component":{}}],["statedatafilt",{"_index":961,"title":{},"name":{},"text":{"10":{},"35":{}},"component":{}}],["statefulset",{"_index":3290,"title":{},"name":{},"text":{"60":{}},"component":{}}],["statefulsets.v1.app",{"_index":3279,"title":{},"name":{},"text":{"60":{}},"component":{}}],["static",{"_index":614,"title":{"53-2":{}},"name":{},"text":{"6":{},"21":{},"29":{},"33":{},"38":{},"42":{},"43":{},"53":{},"60":{}},"component":{}}],["static_config",{"_index":1778,"title":{},"name":{},"text":{"25":{}},"component":{}}],["static_init",{"_index":3305,"title":{},"name":{},"text":{"60":{}},"component":{}}],["statu",{"_index":308,"title":{"54":{},"54-1":{},"66-2":{}},"name":{"54":{}},"text":{"3":{},"4":{},"11":{},"14":{},"27":{},"33":{},"38":{},"43":{},"46":{},"49":{},"50":{},"54":{},"58":{},"65":{},"66":{}},"component":{}}],["statuscode(200",{"_index":2591,"title":{},"name":{},"text":{"42":{}},"component":{}}],["statuscode(201",{"_index":1990,"title":{},"name":{},"text":{"29":{},"38":{}},"component":{}}],["statuscode(404",{"_index":1998,"title":{},"name":{},"text":{"29":{}},"component":{}}],["stay",{"_index":1959,"title":{},"name":{},"text":{"27":{}},"component":{}}],["stdout",{"_index":1641,"title":{},"name":{},"text":{"21":{}},"component":{}}],["step",{"_index":1725,"title":{},"name":{},"text":{"23":{},"24":{},"26":{},"28":{},"41":{},"45":{},"46":{},"47":{},"55":{},"57":{},"58":{},"59":{},"70":{}},"component":{}}],["still",{"_index":1933,"title":{},"name":{},"text":{"27":{},"47":{},"57":{},"58":{},"59":{}},"component":{}}],["stock",{"_index":2265,"title":{},"name":{},"text":{"34":{},"45":{}},"component":{}}],["stock_portfolio_svc_yaml",{"_index":2255,"title":{},"name":{},"text":{"34":{}},"component":{}}],["stockprofit",{"_index":2286,"title":{},"name":{},"text":{"34":{}},"component":{}}],["stockrespons",{"_index":2721,"title":{},"name":{},"text":{"45":{}},"component":{}}],["stop",{"_index":1561,"title":{},"name":{},"text":{"20":{},"21":{},"33":{},"38":{},"42":{},"43":{},"49":{}},"component":{}}],["stopsink",{"_index":2575,"title":{},"name":{},"text":{"42":{}},"component":{}}],["storag",{"_index":150,"title":{"14-6":{},"62-3":{}},"name":{},"text":{"1":{},"62":{},"73":{}},"component":{}}],["store",{"_index":963,"title":{},"name":{},"text":{"10":{},"14":{},"15":{},"16":{},"18":{},"19":{},"27":{},"30":{},"35":{},"36":{},"46":{},"48":{},"58":{},"59":{},"71":{},"73":{}},"component":{}}],["straight",{"_index":2705,"title":{},"name":{},"text":{"45":{}},"component":{}}],["straightforward",{"_index":2560,"title":{},"name":{},"text":{"41":{}},"component":{}}],["strategi",{"_index":436,"title":{"41-4":{}},"name":{},"text":{"5":{},"11":{},"18":{},"30":{},"34":{},"41":{},"46":{}},"component":{}}],["strategy=buff",{"_index":1479,"title":{},"name":{},"text":{"18":{}},"component":{}}],["strategy=none|unbounded|fail|drop",{"_index":1485,"title":{},"name":{},"text":{"18":{}},"component":{}}],["strategy=project",{"_index":2016,"title":{},"name":{},"text":{"30":{}},"component":{}}],["strategyopt",{"_index":2884,"title":{},"name":{},"text":{"47":{}},"component":{}}],["stream",{"_index":476,"title":{"35-4":{},"35-5":{},"35-6":{}},"name":{},"text":{"5":{},"21":{},"35":{}},"component":{}}],["strict",{"_index":2814,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["string",{"_index":423,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"23":{},"29":{},"30":{},"32":{},"33":{},"35":{},"36":{},"43":{},"60":{},"73":{}},"component":{}}],["structur",{"_index":595,"title":{},"name":{},"text":{"6":{},"14":{},"17":{},"31":{},"36":{},"54":{},"66":{},"72":{},"73":{}},"component":{}}],["stub",{"_index":2600,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["studio",{"_index":1580,"title":{},"name":{},"text":{"21":{},"22":{},"73":{}},"component":{}}],["stunner",{"_index":3334,"title":{},"name":{},"text":{"65":{}},"component":{}}],["sub",{"_index":861,"title":{},"name":{},"text":{"9":{},"27":{}},"component":{}}],["subcommand",{"_index":2534,"title":{},"name":{},"text":{"41":{}},"component":{}}],["subflow",{"_index":3038,"title":{},"name":{},"text":{"53":{}},"component":{}}],["subject",{"_index":656,"title":{},"name":{},"text":{"6":{},"17":{},"27":{},"60":{}},"component":{}}],["submit",{"_index":1751,"title":{},"name":{},"text":{"24":{}},"component":{}}],["subscrib",{"_index":1253,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"27":{}},"component":{}}],["subscript",{"_index":1436,"title":{},"name":{},"text":{"17":{},"20":{}},"component":{}}],["substitut",{"_index":2422,"title":{},"name":{},"text":{"36":{}},"component":{}}],["subtract",{"_index":934,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["subtraction.yaml",{"_index":2418,"title":{},"name":{},"text":{"36":{}},"component":{}}],["subtraction_url",{"_index":2424,"title":{},"name":{},"text":{"36":{}},"component":{}}],["subtraction_yaml",{"_index":2419,"title":{},"name":{},"text":{"36":{}},"component":{}}],["subtractvalu",{"_index":938,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["succeed",{"_index":3246,"title":{},"name":{},"text":{"59":{}},"component":{}}],["success",{"_index":985,"title":{},"name":{},"text":{"11":{},"33":{},"38":{},"45":{},"50":{},"64":{},"65":{},"66":{}},"component":{}}],["successfulli",{"_index":1026,"title":{},"name":{},"text":{"12":{},"37":{},"38":{},"41":{},"42":{},"54":{},"64":{},"65":{},"66":{},"71":{}},"component":{}}],["successthreshold",{"_index":3199,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["such",{"_index":261,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"10":{},"11":{},"12":{},"19":{},"21":{},"25":{},"26":{},"27":{},"28":{},"29":{},"32":{},"33":{},"34":{},"35":{},"36":{},"41":{},"42":{},"45":{},"47":{},"49":{},"55":{},"57":{},"58":{},"59":{},"63":{},"65":{},"69":{},"73":{}},"component":{}}],["suffix",{"_index":1736,"title":{},"name":{},"text":{"23":{},"32":{},"48":{}},"component":{}}],["suggest",{"_index":1455,"title":{},"name":{},"text":{"18":{}},"component":{}}],["suit",{"_index":1863,"title":{},"name":{},"text":{"27":{}},"component":{}}],["suitabl",{"_index":1015,"title":{},"name":{},"text":{"12":{},"18":{},"37":{},"43":{}},"component":{}}],["summari",{"_index":1555,"title":{},"name":{},"text":{"20":{},"36":{}},"component":{}}],["support",{"_index":53,"title":{"27-14":{},"49-10":{},"73-3":{}},"name":{"4":{},"6":{},"9":{},"32":{}},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"41":{},"46":{},"47":{},"51":{},"59":{},"60":{},"73":{}},"component":{}}],["support.adoc#send",{"_index":1759,"title":{},"name":{},"text":{"24":{}},"component":{}}],["suppos",{"_index":2129,"title":{},"name":{},"text":{"33":{}},"component":{}}],["sure",{"_index":1225,"title":{},"name":{},"text":{"14":{},"27":{},"28":{},"49":{},"57":{},"59":{},"65":{}},"component":{}}],["suspend",{"_index":1064,"title":{},"name":{},"text":{"13":{},"65":{}},"component":{}}],["svc",{"_index":2911,"title":{},"name":{},"text":{"47":{}},"component":{}}],["svc.yaml",{"_index":2258,"title":{},"name":{},"text":{"34":{}},"component":{}}],["svc.yaml#getstockpric",{"_index":2290,"title":{},"name":{},"text":{"34":{}},"component":{}}],["svc.yaml#getstockprofit",{"_index":2292,"title":{},"name":{},"text":{"34":{}},"component":{}}],["svg",{"_index":266,"title":{},"name":{},"text":{"2":{},"72":{},"73":{}},"component":{}}],["sw",{"_index":223,"title":{},"name":{},"text":{"2":{},"19":{},"33":{}},"component":{}}],["sw.json",{"_index":2829,"title":{},"name":{},"text":{"47":{},"69":{},"71":{}},"component":{}}],["sw.yaml",{"_index":3396,"title":{},"name":{},"text":{"71":{}},"component":{}}],["sw.yaml|yml",{"_index":3380,"title":{},"name":{},"text":{"69":{}},"component":{}}],["swagger",{"_index":188,"title":{"7-4":{}},"name":{},"text":{"2":{},"7":{},"21":{},"36":{},"49":{},"66":{}},"component":{}}],["swagger/openapi",{"_index":2395,"title":{},"name":{},"text":{"36":{}},"component":{}}],["swaggerui",{"_index":1589,"title":{},"name":{},"text":{"21":{}},"component":{}}],["swf",{"_index":204,"title":{},"name":{"71":{},"72":{},"73":{}},"text":{"2":{},"47":{}},"component":{}}],["swf_metric",{"_index":1809,"title":{},"name":{},"text":{"26":{}},"component":{}}],["switch",{"_index":360,"title":{"9-4":{},"10-1":{}},"name":{},"text":{"4":{},"9":{},"10":{},"27":{},"33":{},"46":{},"47":{},"49":{},"71":{}},"component":{}}],["switch_state_timeout",{"_index":2790,"title":{"46-2":{}},"name":{},"text":{"46":{}},"component":{}}],["symbol",{"_index":2295,"title":{},"name":{},"text":{"34":{}},"component":{}}],["sync",{"_index":40,"title":{},"name":{},"text":{"1":{},"67":{}},"component":{}}],["synchron",{"_index":3353,"title":{"67-2":{}},"name":{},"text":{"67":{},"69":{}},"component":{}}],["syntax",{"_index":1127,"title":{},"name":{},"text":{"14":{},"34":{}},"component":{}}],["sysout",{"_index":369,"title":{"6-1":{}},"name":{},"text":{"4":{},"6":{},"47":{},"49":{}},"component":{}}],["sysout:info",{"_index":520,"title":{},"name":{},"text":{"6":{}},"component":{}}],["system",{"_index":967,"title":{"27-6":{},"47-1":{}},"name":{},"text":{"11":{},"14":{},"21":{},"27":{},"28":{},"29":{},"34":{},"35":{},"36":{},"41":{},"42":{},"45":{},"46":{},"47":{},"50":{},"53":{},"55":{},"57":{},"58":{},"59":{},"68":{}},"component":{}}],["system_username}/{project_artifactid}:{project_vers",{"_index":3082,"title":{},"name":{},"text":{"55":{}},"component":{}}],["systemout",{"_index":897,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["s|address",{"_index":2892,"title":{},"name":{},"text":{"47":{}},"component":{}}],["t",{"_index":2475,"title":{},"name":{},"text":{"38":{},"59":{}},"component":{}}],["tab",{"_index":2530,"title":{},"name":{},"text":{"41":{},"66":{},"67":{},"68":{},"70":{},"73":{}},"component":{}}],["tabl",{"_index":333,"title":{"64-1":{}},"name":{},"text":{"4":{},"5":{},"11":{},"14":{},"15":{},"16":{},"17":{},"26":{},"27":{},"30":{},"31":{},"32":{},"48":{},"54":{},"62":{},"64":{},"65":{},"73":{}},"component":{}}],["tag",{"_index":2182,"title":{},"name":{},"text":{"33":{},"36":{},"41":{},"57":{},"58":{},"59":{}},"component":{}}],["tailor",{"_index":2812,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["take",{"_index":877,"title":{},"name":{},"text":{"9":{},"12":{},"16":{},"17":{},"30":{},"41":{},"57":{},"64":{},"66":{}},"component":{}}],["taken",{"_index":912,"title":{},"name":{},"text":{"10":{}},"component":{}}],["target",{"_index":959,"title":{},"name":{},"text":{"10":{},"17":{},"25":{},"34":{},"47":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{}},"component":{}}],["target/classes/meta",{"_index":1292,"title":{},"name":{},"text":{"16":{}},"component":{}}],["target/knative.yml",{"_index":1426,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{}}],["target/kogito.yml",{"_index":1425,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{}}],["target/kubernet",{"_index":1418,"title":{},"name":{},"text":{"17":{},"28":{},"41":{},"57":{},"58":{},"59":{}},"component":{}}],["target/kubernetes/knative.yml",{"_index":3204,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["target/lib",{"_index":3092,"title":{},"name":{},"text":{"55":{}},"component":{}}],["target/quarku",{"_index":2216,"title":{},"name":{},"text":{"33":{},"34":{},"60":{}},"component":{}}],["target=kn",{"_index":1416,"title":{},"name":{},"text":{"17":{},"57":{},"58":{},"59":{}},"component":{}}],["targetport",{"_index":1309,"title":{},"name":{},"text":{"16":{},"25":{}},"component":{}}],["task",{"_index":488,"title":{},"name":{},"text":{"5":{},"13":{},"25":{},"27":{}},"component":{}}],["tcp",{"_index":1320,"title":{},"name":{},"text":{"16":{},"27":{},"57":{},"58":{},"59":{}},"component":{}}],["tekton",{"_index":3114,"title":{},"name":{"56":{}},"text":{},"component":{}}],["tell",{"_index":644,"title":{},"name":{},"text":{"6":{},"49":{},"53":{}},"component":{}}],["temperatur",{"_index":930,"title":{},"name":{},"text":{"10":{},"36":{}},"component":{}}],["templat",{"_index":1316,"title":{},"name":{},"text":{"16":{},"47":{},"52":{},"57":{},"58":{},"59":{},"66":{},"73":{}},"component":{}}],["template='{{.spec.host",{"_index":2920,"title":{},"name":{},"text":{"47":{}},"component":{}}],["temporari",{"_index":1138,"title":{},"name":{},"text":{"14":{},"15":{},"16":{}},"component":{}}],["term",{"_index":1119,"title":{},"name":{},"text":{"14":{},"17":{},"31":{}},"component":{}}],["termin",{"_index":1012,"title":{},"name":{},"text":{"11":{},"13":{},"21":{},"24":{},"33":{},"34":{},"35":{},"36":{},"45":{},"46":{},"55":{},"57":{},"58":{},"59":{},"63":{}},"component":{}}],["test",{"_index":10,"title":{"29":{},"38":{},"1-7":{},"21-5":{},"29-2":{},"42-2":{},"42-3":{},"43-1":{},"43-3":{},"45-3":{},"55-4":{}},"name":{"29":{},"38":{}},"text":{"1":{},"2":{},"3":{},"5":{},"13":{},"17":{},"19":{},"21":{},"26":{},"27":{},"28":{},"29":{},"30":{},"34":{},"38":{},"42":{},"43":{},"45":{},"47":{},"49":{},"50":{},"55":{},"66":{},"68":{},"69":{}},"component":{}}],["test@test.com",{"_index":1518,"title":{},"name":{},"text":{"19":{}},"component":{}}],["testcallbackrest",{"_index":1986,"title":{},"name":{},"text":{"29":{}},"component":{}}],["testcontain",{"_index":1337,"title":{},"name":{},"text":{"16":{}},"component":{}}],["testfeaturea",{"_index":2657,"title":{},"name":{},"text":{"43":{}},"component":{}}],["testfeatureb",{"_index":2658,"title":{},"name":{},"text":{"43":{}},"component":{}}],["testhello",{"_index":2467,"title":{},"name":{},"text":{"38":{}},"component":{}}],["text",{"_index":2335,"title":{},"name":{},"text":{"35":{},"64":{},"73":{}},"component":{}}],["text/plain",{"_index":2077,"title":{},"name":{},"text":{"32":{}},"component":{}}],["text/xml",{"_index":665,"title":{},"name":{},"text":{"6":{}},"component":{}}],["that’",{"_index":1382,"title":{},"name":{},"text":{"17":{},"23":{}},"component":{}}],["the*view",{"_index":3326,"title":{},"name":{},"text":{"64":{}},"component":{}}],["therefor",{"_index":399,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"16":{},"18":{},"19":{},"20":{},"25":{},"26":{},"30":{},"32":{},"34":{},"35":{},"36":{},"37":{},"45":{},"58":{},"60":{},"66":{},"67":{},"68":{}},"component":{}}],["there’",{"_index":3060,"title":{},"name":{},"text":{"54":{}},"component":{}}],["thing",{"_index":1280,"title":{},"name":{},"text":{"16":{}},"component":{}}],["third",{"_index":122,"title":{"33":{}},"name":{"33":{}},"text":{"1":{},"32":{},"43":{},"45":{}},"component":{}}],["those",{"_index":1244,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["though",{"_index":1445,"title":{},"name":{},"text":{"18":{},"30":{}},"component":{}}],["thought",{"_index":1132,"title":{},"name":{},"text":{"14":{}},"component":{}}],["thread",{"_index":61,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"21":{},"38":{},"45":{}},"component":{}}],["threadpoolexecutor",{"_index":480,"title":{},"name":{},"text":{"5":{}},"component":{}}],["three",{"_index":1066,"title":{},"name":{},"text":{"13":{},"35":{},"42":{},"54":{},"69":{}},"component":{}}],["through",{"_index":613,"title":{},"name":{},"text":{"6":{},"9":{},"10":{},"14":{},"15":{},"17":{},"18":{},"45":{},"65":{}},"component":{}}],["throughout",{"_index":3220,"title":{},"name":{},"text":{"58":{}},"component":{}}],["throw",{"_index":555,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"37":{},"42":{},"43":{},"45":{}},"component":{}}],["thrown",{"_index":779,"title":{},"name":{},"text":{"7":{},"23":{},"45":{}},"component":{}}],["thu",{"_index":908,"title":{},"name":{},"text":{"9":{},"27":{},"28":{},"46":{}},"component":{}}],["ti",{"_index":3051,"title":{},"name":{},"text":{"53":{}},"component":{}}],["till",{"_index":978,"title":{},"name":{},"text":{"11":{},"32":{}},"component":{}}],["time",{"_index":378,"title":{"9-6":{},"17-4":{}},"name":{},"text":{"4":{},"6":{},"9":{},"10":{},"14":{},"17":{},"19":{},"21":{},"27":{},"29":{},"30":{},"33":{},"34":{},"36":{},"38":{},"41":{},"42":{},"46":{},"47":{},"50":{},"53":{},"54":{},"60":{},"62":{},"65":{},"73":{}},"component":{}}],["timelin",{"_index":3333,"title":{},"name":{},"text":{"65":{}},"component":{}}],["timeout",{"_index":97,"title":{"9":{},"46":{},"4-8":{},"6-18":{},"9-1":{},"9-2":{},"9-3":{},"9-4":{},"9-5":{},"9-9":{}},"name":{"9":{},"46":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"9":{},"14":{},"16":{},"27":{},"28":{},"46":{}},"component":{}}],["timeout=5000",{"_index":676,"title":{},"name":{},"text":{"6":{}},"component":{}}],["timeouts_showcase_embed",{"_index":1269,"title":{},"name":{},"text":{"15":{}},"component":{}}],["timeoutsecond",{"_index":3200,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["timer",{"_index":163,"title":{},"name":{},"text":{"1":{},"9":{},"27":{},"28":{},"46":{}},"component":{}}],["timestamp",{"_index":3187,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["titl",{"_index":2075,"title":{},"name":{},"text":{"32":{},"33":{},"34":{},"36":{}},"component":{}}],["tl",{"_index":3244,"title":{},"name":{},"text":{"59":{}},"component":{}}],["togeth",{"_index":1519,"title":{},"name":{},"text":{"19":{},"46":{}},"component":{}}],["toggl",{"_index":3023,"title":{},"name":{},"text":{"51":{},"65":{}},"component":{}}],["token",{"_index":2054,"title":{"32-3":{},"32-6":{},"67-1":{}},"name":{},"text":{"32":{},"33":{},"35":{},"59":{},"67":{},"68":{}},"component":{}}],["token=my_token",{"_index":2085,"title":{},"name":{},"text":{"32":{}},"component":{}}],["tokenurl",{"_index":2096,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["tool",{"_index":4,"title":{"22":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"1-3":{},"63-1":{},"67-1":{},"68-2":{},"69-1":{}},"name":{"22":{},"40":{},"44":{},"66":{},"67":{},"68":{},"69":{},"70":{}},"text":{"1":{},"4":{},"17":{},"21":{},"22":{},"24":{},"25":{},"29":{},"31":{},"36":{},"41":{},"43":{},"50":{},"55":{},"57":{},"58":{},"59":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["toolbar",{"_index":3316,"title":{},"name":{},"text":{"64":{}},"component":{}}],["tools.custom.dashboard.fold",{"_index":3312,"title":{},"name":{},"text":{"62":{}},"component":{}}],["top",{"_index":3323,"title":{},"name":{},"text":{"64":{},"65":{},"67":{},"68":{},"70":{},"71":{}},"component":{}}],["topic",{"_index":224,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"16":{},"18":{},"20":{},"27":{},"57":{},"58":{},"59":{}},"component":{}}],["topolog",{"_index":1134,"title":{},"name":{},"text":{"14":{},"68":{}},"component":{}}],["tostatedata",{"_index":894,"title":{},"name":{},"text":{"9":{},"10":{},"12":{},"46":{}},"component":{}}],["tostatedata\":\".paymentrespons",{"_index":2686,"title":{},"name":{},"text":{"45":{}},"component":{}}],["total",{"_index":1785,"title":{},"name":{},"text":{"25":{},"26":{},"38":{},"42":{},"53":{}},"component":{}}],["toward",{"_index":3369,"title":{},"name":{},"text":{"68":{}},"component":{}}],["trace",{"_index":522,"title":{},"name":{},"text":{"6":{}},"component":{}}],["track",{"_index":2023,"title":{},"name":{},"text":{"31":{},"45":{}},"component":{}}],["traffic",{"_index":2399,"title":{},"name":{},"text":{"36":{}},"component":{}}],["transact",{"_index":2665,"title":{},"name":{},"text":{"45":{}},"component":{}}],["transfer",{"_index":2563,"title":{},"name":{},"text":{"42":{}},"component":{}}],["transform",{"_index":1840,"title":{},"name":{},"text":{"26":{},"33":{}},"component":{}}],["transit",{"_index":859,"title":{},"name":{},"text":{"9":{},"10":{},"11":{},"12":{},"19":{},"21":{},"33":{},"34":{},"36":{},"37":{},"45":{},"46":{},"47":{},"49":{},"54":{}},"component":{}}],["transition\":\"scheduleship",{"_index":2687,"title":{},"name":{},"text":{"45":{}},"component":{}}],["transition\":\"serviceerror",{"_index":2690,"title":{},"name":{},"text":{"45":{}},"component":{}}],["translat",{"_index":615,"title":{},"name":{},"text":{"6":{}},"component":{}}],["transmit",{"_index":1274,"title":{},"name":{},"text":{"15":{}},"component":{}}],["transpar",{"_index":1137,"title":{},"name":{},"text":{"14":{},"46":{}},"component":{}}],["transport",{"_index":1360,"title":{"37-2":{}},"name":{},"text":{"17":{},"27":{}},"component":{}}],["travel",{"_index":1160,"title":{},"name":{},"text":{"14":{}},"component":{}}],["tri",{"_index":742,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"22":{},"27":{},"35":{},"43":{},"47":{},"48":{},"49":{},"50":{},"54":{},"66":{},"72":{}},"component":{}}],["trigger",{"_index":116,"title":{},"name":{},"text":{"1":{},"8":{},"14":{},"16":{},"17":{},"19":{},"20":{},"27":{},"37":{},"42":{},"45":{},"55":{},"64":{},"65":{},"73":{}},"component":{}}],["triggereventref",{"_index":1029,"title":{},"name":{},"text":{"12":{},"19":{}},"component":{}}],["trimcustomoperation(functiondef",{"_index":736,"title":{},"name":{},"text":{"6":{}},"component":{}}],["troubleshoot",{"_index":11,"title":{"1-7":{},"49-7":{},"49-8":{}},"name":{"40":{}},"text":{"49":{},"54":{}},"component":{}}],["true",{"_index":356,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"26":{},"27":{},"33":{},"34":{},"35":{},"36":{},"46":{},"47":{},"49":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"65":{}},"component":{}}],["tune",{"_index":2874,"title":{},"name":{},"text":{"47":{}},"component":{}}],["tunnel",{"_index":3219,"title":{},"name":{},"text":{"58":{}},"component":{}}],["turn",{"_index":921,"title":{},"name":{},"text":{"10":{}},"component":{}}],["tutori",{"_index":3145,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["two",{"_index":278,"title":{},"name":{},"text":{"3":{},"6":{},"8":{},"10":{},"12":{},"13":{},"17":{},"18":{},"21":{},"35":{},"42":{},"46":{},"53":{},"60":{},"65":{},"73":{}},"component":{}}],["type",{"_index":368,"title":{"6-19":{},"6-20":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"42":{},"43":{},"45":{},"46":{},"47":{},"49":{},"53":{},"57":{},"58":{},"59":{},"64":{},"65":{},"69":{},"73":{}},"component":{}}],["type\":\"custom",{"_index":2702,"title":{},"name":{},"text":{"45":{}},"component":{}}],["type\":\"error",{"_index":2772,"title":{},"name":{},"text":{"45":{}},"component":{}}],["type\":\"oper",{"_index":2681,"title":{},"name":{},"text":{"45":{}},"component":{}}],["type\":\"success",{"_index":2722,"title":{},"name":{},"text":{"45":{}},"component":{}}],["type:application/json",{"_index":1700,"title":{},"name":{},"text":{"21":{},"35":{},"47":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["type=kubernetes.io/dockerconfigjson",{"_index":2880,"title":{},"name":{},"text":{"47":{}},"component":{}}],["types.proto",{"_index":1682,"title":{},"name":{},"text":{"21":{}},"component":{}}],["typescript",{"_index":2396,"title":{},"name":{},"text":{"36":{}},"component":{}}],["tzdb.dat",{"_index":260,"title":{},"name":{},"text":{"2":{}},"component":{}}],["u",{"_index":2041,"title":{},"name":{},"text":{"31":{},"59":{}},"component":{}}],["ui",{"_index":128,"title":{"63":{},"14-10":{}},"name":{"62":{},"63":{},"64":{},"65":{}},"text":{"1":{},"2":{},"14":{},"15":{},"16":{},"21":{},"22":{},"36":{},"49":{},"63":{},"66":{}},"component":{}}],["unbound",{"_index":1473,"title":{},"name":{},"text":{"18":{}},"component":{}}],["unchang",{"_index":2793,"title":{},"name":{},"text":{"46":{}},"component":{}}],["uncheck",{"_index":3349,"title":{},"name":{},"text":{"66":{}},"component":{}}],["uncheckedioexception(",{"_index":2651,"title":{},"name":{},"text":{"43":{}},"component":{}}],["uncheckedioexception(io",{"_index":756,"title":{},"name":{},"text":{"6":{}},"component":{}}],["uncommon",{"_index":716,"title":{},"name":{},"text":{"6":{}},"component":{}}],["uncompress",{"_index":1802,"title":{},"name":{},"text":{"26":{}},"component":{}}],["under",{"_index":1071,"title":{},"name":{},"text":{"13":{},"25":{},"35":{},"47":{},"49":{},"50":{},"51":{},"60":{}},"component":{}}],["underli",{"_index":996,"title":{},"name":{},"text":{"11":{},"27":{},"46":{},"48":{},"54":{}},"component":{}}],["underneath",{"_index":1544,"title":{},"name":{},"text":{"20":{}},"component":{}}],["underscor",{"_index":2072,"title":{},"name":{},"text":{"32":{},"34":{}},"component":{}}],["understand",{"_index":166,"title":{"54":{}},"name":{"10":{},"11":{}},"text":{"1":{},"3":{},"6":{},"12":{},"23":{},"33":{},"37":{},"45":{},"46":{},"49":{},"54":{}},"component":{}}],["undo",{"_index":2667,"title":{},"name":{},"text":{"45":{}},"component":{}}],["unexpect",{"_index":2245,"title":{},"name":{},"text":{"33":{}},"component":{}}],["unidentifi",{"_index":2533,"title":{},"name":{},"text":{"41":{}},"component":{}}],["unidirect",{"_index":1444,"title":{},"name":{},"text":{"18":{}},"component":{}}],["uninstal",{"_index":2975,"title":{"50-3":{}},"name":{},"text":{"50":{}},"component":{}}],["uniqu",{"_index":669,"title":{},"name":{},"text":{"6":{},"12":{},"21":{},"37":{},"65":{}},"component":{}}],["unit",{"_index":140,"title":{},"name":{},"text":{"1":{},"14":{},"42":{},"43":{}},"component":{}}],["unknown",{"_index":990,"title":{},"name":{},"text":{"11":{},"35":{},"54":{}},"component":{}}],["unless",{"_index":495,"title":{},"name":{},"text":{"5":{},"16":{},"18":{}},"component":{}}],["unlik",{"_index":2098,"title":{},"name":{},"text":{"32":{},"46":{}},"component":{}}],["unpack",{"_index":3393,"title":{},"name":{},"text":{"71":{}},"component":{}}],["unpredict",{"_index":1105,"title":{},"name":{},"text":{"13":{}},"component":{}}],["unrespons",{"_index":1960,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unselect",{"_index":3331,"title":{},"name":{},"text":{"65":{}},"component":{}}],["unsuccess",{"_index":2137,"title":{},"name":{},"text":{"33":{}},"component":{}}],["unsuccessfulli",{"_index":3342,"title":{},"name":{},"text":{"65":{}},"component":{}}],["unsupport",{"_index":2230,"title":{},"name":{},"text":{"33":{}},"component":{}}],["until",{"_index":782,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"20":{},"29":{},"42":{},"54":{},"66":{}},"component":{}}],["untilassert",{"_index":1996,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["untitl",{"_index":3385,"title":{},"name":{},"text":{"69":{}},"component":{}}],["up",{"_index":693,"title":{"64-4":{},"64-5":{}},"name":{},"text":{"6":{},"13":{},"14":{},"16":{},"18":{},"22":{},"27":{},"31":{},"33":{},"41":{},"47":{},"49":{},"50":{},"55":{},"66":{}},"component":{}}],["upcom",{"_index":943,"title":{},"name":{},"text":{"10":{}},"component":{}}],["updat",{"_index":211,"title":{},"name":{},"text":{"2":{},"6":{},"10":{},"14":{},"16":{},"21":{},"27":{},"30":{},"31":{},"36":{},"47":{},"49":{},"53":{},"59":{},"62":{},"65":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{}},"component":{}}],["upgrad",{"_index":148,"title":{},"name":{},"text":{"1":{},"2":{},"30":{},"31":{}},"component":{}}],["upload",{"_index":197,"title":{},"name":{},"text":{"2":{},"66":{},"70":{}},"component":{}}],["upon",{"_index":794,"title":{},"name":{},"text":{"8":{},"27":{},"42":{}},"component":{}}],["upper",{"_index":3394,"title":{},"name":{},"text":{"71":{}},"component":{}}],["upstream",{"_index":2817,"title":{},"name":{},"text":{"47":{},"49":{}},"component":{}}],["uri",{"_index":594,"title":{"34-2":{}},"name":{},"text":{"6":{},"7":{},"14":{},"16":{},"20":{},"23":{},"27":{},"34":{},"35":{},"36":{},"37":{},"60":{},"73":{}},"component":{}}],["url",{"_index":439,"title":{"34-4":{},"34-8":{},"36-5":{}},"name":{},"text":{"5":{},"6":{},"7":{},"14":{},"16":{},"20":{},"24":{},"26":{},"27":{},"28":{},"33":{},"34":{},"36":{},"37":{},"38":{},"42":{},"43":{},"47":{},"49":{},"50":{},"57":{},"58":{},"59":{},"60":{},"64":{},"67":{},"73":{}},"component":{}}],["url=http://localhost:8281/auth/realms/kogito/protocol/openid",{"_index":2195,"title":{},"name":{},"text":{"33":{}},"component":{}}],["url=https://example.com/oauth",{"_index":2104,"title":{},"name":{},"text":{"32":{}},"component":{}}],["url=jdbc:postgresql://localhost:5432/foobardb",{"_index":2031,"title":{},"name":{},"text":{"31":{}},"component":{}}],["url_to_json_schema",{"_index":773,"title":{},"name":{},"text":{"7":{}},"component":{}}],["us",{"_index":18,"title":{"18":{},"29":{},"30":{},"33":{},"38":{},"42":{},"43":{},"55":{},"66":{},"67":{},"68":{},"1-13":{},"16-4":{},"16-5":{},"26-2":{},"26-3":{},"27-5":{},"27-6":{},"29-2":{},"31-2":{},"31-3":{},"31-6":{},"31-7":{},"34-2":{},"34-8":{},"41-2":{},"41-3":{},"41-5":{},"42-2":{},"47-2":{},"49-6":{},"55-1":{},"55-3":{},"57-3":{},"57-4":{},"57-5":{},"58-3":{},"58-4":{},"58-5":{},"59-4":{},"59-5":{},"59-6":{},"64-3":{},"64-7":{},"68-2":{},"71-2":{},"73-6":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}},"component":{}}],["usag",{"_index":913,"title":{},"name":{},"text":{"10":{},"11":{},"19":{},"28":{},"32":{},"41":{},"47":{},"49":{}},"component":{}}],["usd",{"_index":2221,"title":{},"name":{},"text":{"33":{},"42":{}},"component":{}}],["usecloudevents=tru",{"_index":2490,"title":{},"name":{},"text":{"38":{}},"component":{}}],["used\\ncopi",{"_index":2845,"title":{},"name":{},"text":{"47":{}},"component":{}}],["useeventdrivendecisions=fals",{"_index":2493,"title":{},"name":{},"text":{"38":{}},"component":{}}],["useeventdrivenrules=fals",{"_index":2494,"title":{},"name":{},"text":{"38":{}},"component":{}}],["useexplainability=fals",{"_index":2491,"title":{},"name":{},"text":{"38":{}},"component":{}}],["usemonitoring=fals",{"_index":2488,"title":{},"name":{},"text":{"38":{}},"component":{}}],["useprocesssvg=fals",{"_index":2492,"title":{},"name":{},"text":{"38":{}},"component":{}}],["useprometheusmonitoring=fals",{"_index":2489,"title":{},"name":{},"text":{"38":{}},"component":{}}],["user",{"_index":1117,"title":{},"name":{},"text":{"14":{},"16":{},"19":{},"21":{},"25":{},"29":{},"35":{},"41":{},"45":{},"58":{}},"component":{}}],["user'",{"_index":2339,"title":{},"name":{},"text":{"35":{}},"component":{}}],["user/mi",{"_index":2555,"title":{},"name":{},"text":{"41":{}},"component":{}}],["user=foo",{"_index":2032,"title":{},"name":{},"text":{"31":{}},"component":{}}],["userid",{"_index":1497,"title":{},"name":{},"text":{"19":{}},"component":{}}],["usernam",{"_index":1347,"title":{},"name":{},"text":{"16":{},"27":{},"31":{},"32":{},"47":{},"68":{}},"component":{}}],["usetracing=fals",{"_index":2487,"title":{},"name":{},"text":{"38":{}},"component":{}}],["usr/local/bin",{"_index":2520,"title":{},"name":{},"text":{"41":{}},"component":{}}],["usr/local/bin/kn",{"_index":2524,"title":{},"name":{},"text":{"41":{}},"component":{}}],["usual",{"_index":1120,"title":{},"name":{},"text":{"14":{},"16":{},"36":{},"48":{},"60":{}},"component":{}}],["utc",{"_index":1657,"title":{},"name":{},"text":{"21":{}},"component":{}}],["utf",{"_index":1614,"title":{},"name":{},"text":{"21":{}},"component":{}}],["uuid",{"_index":1808,"title":{},"name":{},"text":{"26":{}},"component":{}}],["v",{"_index":2537,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v0.8",{"_index":3019,"title":{"51-2":{}},"name":{},"text":{},"component":{}}],["v1",{"_index":1255,"title":{},"name":{},"text":{"14":{},"16":{},"27":{},"47":{},"48":{},"53":{}},"component":{}}],["v2",{"_index":1950,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["v2.topic",{"_index":1956,"title":{},"name":{},"text":{"27":{}},"component":{}}],["v2/jobs/ev",{"_index":1941,"title":{},"name":{},"text":{"27":{}},"component":{}}],["valid",{"_index":92,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"11":{},"17":{},"19":{},"23":{},"29":{},"33":{},"35":{},"36":{},"42":{},"49":{},"51":{},"58":{},"64":{},"72":{},"73":{}},"component":{}}],["validateaccountemail",{"_index":1499,"title":{},"name":{},"text":{"19":{}},"component":{}}],["validateaccountemailev",{"_index":1498,"title":{},"name":{},"text":{"19":{}},"component":{}}],["validatedaccountemail",{"_index":1501,"title":{},"name":{},"text":{"19":{}},"component":{}}],["validatedaccountemailev",{"_index":1500,"title":{},"name":{},"text":{"19":{}},"component":{}}],["validateinput",{"_index":2141,"title":{},"name":{},"text":{"33":{}},"component":{}}],["validateinputs(str",{"_index":2170,"title":{},"name":{},"text":{"33":{}},"component":{}}],["validateinputsact",{"_index":2151,"title":{},"name":{},"text":{"33":{}},"component":{}}],["validateintpu",{"_index":2162,"title":{},"name":{},"text":{"33":{}},"component":{}}],["validationresult",{"_index":2169,"title":{},"name":{},"text":{"33":{}},"component":{}}],["validationresult(\"error",{"_index":2174,"title":{},"name":{},"text":{"33":{}},"component":{}}],["valu",{"_index":416,"title":{"6-5":{},"6-10":{},"35-1":{}},"name":{},"text":{"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"19":{},"21":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"41":{},"45":{},"46":{},"48":{},"55":{},"58":{},"59":{},"60":{},"64":{},"65":{},"68":{},"70":{},"72":{},"73":{}},"component":{}}],["value.deseri",{"_index":1447,"title":{},"name":{},"text":{"18":{}},"component":{}}],["value.seri",{"_index":1451,"title":{},"name":{},"text":{"18":{}},"component":{}}],["value1",{"_index":1730,"title":{},"name":{},"text":{"23":{}},"component":{}}],["value;oth",{"_index":3272,"title":{},"name":{},"text":{"60":{}},"component":{}}],["valuefrom",{"_index":1323,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["vari",{"_index":2798,"title":{},"name":{},"text":{"46":{},"54":{}},"component":{}}],["variabl",{"_index":464,"title":{"27-4":{},"27-5":{},"34-8":{}},"name":{},"text":{"5":{},"6":{},"14":{},"16":{},"17":{},"27":{},"28":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"43":{},"59":{},"65":{}},"component":{}}],["variable_name=valu",{"_index":1873,"title":{},"name":{},"text":{"27":{}},"component":{}}],["variables:\"{\\\"it_approval\\\":true,\\\"candidate\\\":{\\\"name\\\":\\\"joe\\\",\\\"email\\\":\\\"jdoe@ts.com\\\",\\\"salary\\\":30000,\\\"skills\\\":\\\"java\\\"},\\\"hr_approval\\\":tru",{"_index":1202,"title":{},"name":{},"text":{"14":{}},"component":{}}],["variou",{"_index":396,"title":{},"name":{},"text":{"4":{},"36":{},"65":{},"66":{}},"component":{}}],["vendor",{"_index":2132,"title":{},"name":{},"text":{"33":{}},"component":{}}],["verb",{"_index":3289,"title":{},"name":{},"text":{"60":{}},"component":{}}],["verbos",{"_index":1608,"title":{},"name":{},"text":{"21":{},"41":{}},"component":{}}],["veri",{"_index":1966,"title":{},"name":{},"text":{"28":{},"47":{}},"component":{}}],["verif",{"_index":1999,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["verifi",{"_index":771,"title":{"57-1":{},"66-2":{}},"name":{},"text":{"7":{},"11":{},"17":{},"21":{},"29":{},"38":{},"41":{},"42":{},"45":{},"55":{},"57":{},"58":{},"59":{},"66":{}},"component":{}}],["verify=fals",{"_index":3245,"title":{},"name":{},"text":{"59":{}},"component":{}}],["verifyworkflowexecutionit",{"_index":2568,"title":{},"name":{},"text":{"42":{}},"component":{}}],["versa",{"_index":3025,"title":{},"name":{},"text":{"51":{}},"component":{}}],["version",{"_index":230,"title":{"52-1":{}},"name":{"61":{}},"text":{"2":{},"4":{},"5":{},"7":{},"9":{},"13":{},"17":{},"21":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"38":{},"43":{},"47":{},"49":{},"50":{},"51":{},"52":{},"55":{},"58":{},"59":{},"60":{},"63":{},"67":{},"68":{}},"component":{}}],["version.failsafe.plugin",{"_index":1981,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["version=1.32.0",{"_index":2047,"title":{},"name":{},"text":{"31":{}},"component":{}}],["version=2.16.8.fin",{"_index":1603,"title":{},"name":{},"text":{"21":{}},"component":{}}],["vert.x",{"_index":1129,"title":{},"name":{},"text":{"14":{}},"component":{}}],["vertx",{"_index":1637,"title":{},"name":{},"text":{"21":{},"38":{}},"component":{}}],["via",{"_index":44,"title":{},"name":{},"text":{"1":{},"14":{},"23":{},"27":{},"31":{},"46":{},"47":{},"49":{},"53":{},"60":{},"64":{}},"component":{}}],["vice",{"_index":3024,"title":{},"name":{},"text":{"51":{}},"component":{}}],["view",{"_index":110,"title":{},"name":{},"text":{"1":{},"22":{},"57":{},"58":{},"63":{},"64":{},"65":{},"66":{},"71":{},"72":{},"73":{}},"component":{}}],["viewer",{"_index":265,"title":{},"name":{},"text":{"2":{}},"component":{}}],["visaapprovedev",{"_index":885,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["visadeniedev",{"_index":887,"title":{},"name":{},"text":{"9":{},"46":{}},"component":{}}],["visit",{"_index":1939,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{}}],["visual",{"_index":1579,"title":{},"name":{},"text":{"21":{},"22":{},"25":{},"26":{},"62":{},"72":{},"73":{}},"component":{}}],["void",{"_index":552,"title":{},"name":{},"text":{"6":{},"29":{},"37":{},"38":{},"42":{},"43":{}},"component":{}}],["volum",{"_index":1291,"title":{},"name":{},"text":{"16":{}},"component":{}}],["vs",{"_index":101,"title":{"73":{},"73-1":{},"73-3":{},"73-5":{}},"name":{},"text":{"1":{},"22":{},"72":{},"73":{}},"component":{}}],["vscode",{"_index":1720,"title":{},"name":{"73":{}},"text":{"23":{},"49":{}},"component":{}}],["vsix",{"_index":3401,"title":{},"name":{},"text":{"73":{}},"component":{}}],["w",{"_index":2942,"title":{},"name":{},"text":{"49":{}},"component":{}}],["wait",{"_index":474,"title":{},"name":{},"text":{"5":{},"9":{},"12":{},"13":{},"18":{},"19":{},"20":{},"27":{},"30":{},"32":{},"37":{},"42":{},"45":{},"46":{},"54":{},"57":{},"58":{},"59":{},"65":{}},"component":{}}],["wait&fir",{"_index":823,"title":{},"name":{},"text":{"8":{}},"component":{}}],["wait(eventinput",{"_index":2435,"title":{},"name":{},"text":{"37":{}},"component":{}}],["waitev",{"_index":964,"title":{},"name":{},"text":{"10":{},"12":{},"37":{}},"component":{}}],["waitforev",{"_index":813,"title":{},"name":{},"text":{"8":{},"9":{},"12":{},"20":{},"37":{},"46":{}},"component":{}}],["waitingforbuildreason",{"_index":3071,"title":{},"name":{},"text":{"54":{}},"component":{}}],["waitingfordeploy",{"_index":216,"title":{},"name":{},"text":{"2":{},"49":{},"54":{}},"component":{}}],["waitingforplatform",{"_index":3069,"title":{},"name":{},"text":{"54":{}},"component":{}}],["want",{"_index":386,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"13":{},"15":{},"18":{},"23":{},"24":{},"27":{},"28":{},"31":{},"33":{},"35":{},"36":{},"41":{},"42":{},"43":{},"47":{},"49":{},"53":{},"60":{},"64":{},"69":{}},"component":{}}],["warn",{"_index":524,"title":{},"name":{},"text":{"6":{},"7":{},"21":{},"73":{}},"component":{}}],["watch",{"_index":2968,"title":{},"name":{},"text":{"49":{},"50":{}},"component":{}}],["way",{"_index":39,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"12":{},"14":{},"15":{},"16":{},"27":{},"35":{},"37":{},"41":{},"49":{},"53":{},"60":{},"65":{}},"component":{}}],["web",{"_index":105,"title":{"66":{},"67":{},"68":{},"69":{},"67-1":{},"68-2":{},"69-1":{}},"name":{"66":{},"67":{},"68":{},"69":{},"70":{}},"text":{"1":{},"22":{},"36":{},"58":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{}},"component":{}}],["webapp",{"_index":208,"title":{},"name":{},"text":{"2":{}},"component":{}}],["webclient.postabs(eventinput.geturi()).sendjson(builder.build()).tocompletionstag",{"_index":2443,"title":{},"name":{},"text":{"37":{}},"component":{}}],["webhook",{"_index":3022,"title":{},"name":{},"text":{"51":{},"57":{}},"component":{}}],["websit",{"_index":1773,"title":{},"name":{},"text":{"25":{},"26":{},"29":{},"31":{},"42":{}},"component":{}}],["welcom",{"_index":1073,"title":{},"name":{},"text":{"13":{}},"component":{}}],["well",{"_index":907,"title":{},"name":{},"text":{"9":{},"31":{},"35":{},"46":{}},"component":{}}],["weren’t",{"_index":1302,"title":{},"name":{},"text":{"16":{}},"component":{}}],["whatev",{"_index":566,"title":{},"name":{},"text":{"6":{}},"component":{}}],["whether",{"_index":910,"title":{},"name":{},"text":{"10":{},"11":{},"18":{},"20":{},"57":{},"58":{},"59":{},"73":{}},"component":{}}],["whoami",{"_index":3243,"title":{},"name":{},"text":{"59":{}},"component":{}}],["whole",{"_index":2877,"title":{},"name":{},"text":{"47":{}},"component":{}}],["width",{"_index":1831,"title":{},"name":{},"text":{"26":{}},"component":{}}],["willreturn(arespons",{"_index":2653,"title":{},"name":{},"text":{"43":{}},"component":{}}],["willreturn(aresponse().withstatus(404",{"_index":2663,"title":{},"name":{},"text":{"43":{}},"component":{}}],["willreturn(wiremock.arespons",{"_index":2625,"title":{},"name":{},"text":{"43":{}},"component":{}}],["window",{"_index":1748,"title":{},"name":{},"text":{"24":{},"33":{},"34":{},"58":{},"67":{},"68":{},"70":{}},"component":{}}],["wiremock",{"_index":134,"title":{"42":{},"43":{},"43-2":{},"43-3":{}},"name":{"42":{},"43":{}},"text":{"1":{},"17":{},"38":{},"42":{},"43":{}},"component":{}}],["wiremock.vers",{"_index":2615,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockconfigur",{"_index":2616,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockconfiguration#port(int",{"_index":2621,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockconfiguration.wiremockconfig().dynamicport",{"_index":2617,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockserv",{"_index":2569,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["wiremockserver(config",{"_index":2618,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockserver(options().port(8181",{"_index":2571,"title":{},"name":{},"text":{"42":{}},"component":{}}],["wiremockserver(wiremockconfiguration.wiremockconfig().dynamicport",{"_index":2650,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockserver.baseurl",{"_index":2649,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockserver.start",{"_index":2619,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockserver.stop",{"_index":2632,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockserver.stubfor(get(urlequalto(\"/rest/v2/name/greec",{"_index":2652,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wiremockserver.stubfor(wiremock.get(wiremock.urlequalto(\"/rest/v2/name/greec",{"_index":2624,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wish",{"_index":2809,"title":{},"name":{},"text":{"47":{},"60":{},"69":{}},"component":{}}],["with().pollinterval(1",{"_index":1995,"title":{},"name":{},"text":{"29":{},"42":{}},"component":{}}],["withdata(objectmapper.writevalueasbytes(collections.singletonmap(\"messag",{"_index":2442,"title":{},"name":{},"text":{"37":{}},"component":{}}],["withdata(objectmapper.writevalueasbytes(eventbodi",{"_index":1042,"title":{},"name":{},"text":{"12":{}},"component":{}}],["withextension(cloudeventextensionconstants.process_reference_id",{"_index":1041,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["withheader(\"cont",{"_index":2627,"title":{},"name":{},"text":{"43":{}},"component":{}}],["withid(uuid.randomuuid().tostr",{"_index":1037,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["within",{"_index":65,"title":{},"name":{},"text":{"1":{},"6":{},"10":{},"11":{},"17":{},"20":{},"34":{},"35":{},"42":{},"48":{},"53":{}},"component":{}}],["withjsonbody(greecepayload",{"_index":2628,"title":{},"name":{},"text":{"43":{}},"component":{}}],["without",{"_index":599,"title":{},"name":{},"text":{"6":{},"9":{},"12":{},"13":{},"15":{},"21":{},"27":{},"32":{},"37":{},"41":{},"73":{}},"component":{}}],["withsource(uri.cr",{"_index":1038,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["withstatus(200",{"_index":2626,"title":{},"name":{},"text":{"43":{}},"component":{}}],["withtime(offsetdatetime.now",{"_index":1040,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["withtype(\"wait",{"_index":1039,"title":{},"name":{},"text":{"12":{},"37":{}},"component":{}}],["won’t",{"_index":2020,"title":{},"name":{},"text":{"31":{},"47":{},"53":{}},"component":{}}],["word",{"_index":1061,"title":{},"name":{},"text":{"13":{},"53":{}},"component":{}}],["worflow",{"_index":3046,"title":{},"name":{},"text":{"53":{}},"component":{}}],["work",{"_index":36,"title":{},"name":{"12":{},"13":{},"37":{}},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"9":{},"14":{},"15":{},"17":{},"20":{},"27":{},"28":{},"29":{},"31":{},"35":{},"42":{},"46":{},"47":{},"49":{},"50":{},"57":{},"58":{},"59":{},"60":{},"67":{},"72":{},"73":{}},"component":{}}],["workflow",{"_index":22,"title":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"19":{},"21":{},"22":{},"24":{},"25":{},"26":{},"29":{},"30":{},"32":{},"37":{},"38":{},"41":{},"45":{},"46":{},"47":{},"48":{},"49":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"71":{},"72":{},"73":{},"4-4":{},"9-1":{},"9-6":{},"9-8":{},"13-1":{},"13-2":{},"13-3":{},"14-1":{},"14-8":{},"15-2":{},"17-5":{},"18-1":{},"19-1":{},"21-2":{},"21-3":{},"21-4":{},"21-5":{},"23-1":{},"23-2":{},"23-3":{},"25-1":{},"25-2":{},"25-5":{},"26-1":{},"27-1":{},"29-2":{},"33-1":{},"33-2":{},"34-6":{},"34-7":{},"35-2":{},"36-3":{},"36-4":{},"41-1":{},"41-2":{},"41-3":{},"41-4":{},"41-5":{},"42-2":{},"45-2":{},"45-3":{},"46-1":{},"46-2":{},"46-3":{},"46-4":{},"46-5":{},"46-6":{},"46-7":{},"47-2":{},"47-8":{},"47-11":{},"47-12":{},"48-1":{},"49-2":{},"49-3":{},"49-4":{},"49-5":{},"49-6":{},"49-7":{},"49-11":{},"49-12":{},"50-2":{},"51-3":{},"53-1":{},"55-2":{},"55-3":{},"55-4":{},"57-2":{},"57-3":{},"57-4":{},"57-5":{},"58-2":{},"58-3":{},"58-4":{},"58-5":{},"59-2":{},"59-4":{},"59-5":{},"59-6":{},"60-4":{},"63-1":{},"64-1":{},"64-2":{},"64-3":{},"64-4":{},"64-6":{},"64-7":{},"65-1":{},"65-2":{},"66-1":{},"69-1":{},"71-1":{},"71-2":{},"72-1":{},"73-1":{},"73-2":{},"73-3":{},"73-4":{}},"name":{"4":{},"7":{},"8":{},"11":{},"19":{},"21":{},"39":{},"41":{},"47":{},"48":{},"49":{},"54":{},"55":{},"56":{},"61":{},"64":{},"65":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["workflow,quarku",{"_index":1595,"title":{},"name":{},"text":{"21":{}},"component":{}}],["workflow.instanceid",{"_index":869,"title":{},"name":{},"text":{"9":{},"23":{},"37":{},"46":{}},"component":{}}],["workflow.serverless",{"_index":3163,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["workflow.sw.json",{"_index":2138,"title":{},"name":{},"text":{"33":{},"41":{}},"component":{}}],["workflow.yaml",{"_index":2908,"title":{},"name":{},"text":{"47":{}},"component":{}}],["workflow/greet",{"_index":2945,"title":{},"name":{},"text":{"49":{}},"component":{}}],["workflow_devmode.yaml",{"_index":2947,"title":{},"name":{},"text":{"49":{}},"component":{}}],["workflow_timeout",{"_index":852,"title":{},"name":{},"text":{"9":{}},"component":{}}],["workflowdata",{"_index":565,"title":{},"name":{},"text":{"6":{},"33":{},"35":{},"38":{},"45":{},"49":{},"55":{}},"component":{}}],["workflowdata.greet",{"_index":2474,"title":{},"name":{},"text":{"38":{}},"component":{}}],["workflowexectimeout",{"_index":847,"title":{},"name":{},"text":{"9":{}},"component":{}}],["workflowid",{"_index":1732,"title":{},"name":{},"text":{"23":{}},"component":{}}],["workflowpath",{"_index":3049,"title":{},"name":{},"text":{"53":{}},"component":{}}],["workflowworkitemhandl",{"_index":699,"title":{},"name":{},"text":{"6":{}},"component":{}}],["workflow’",{"_index":1272,"title":{},"name":{},"text":{"15":{},"46":{},"64":{}},"component":{}}],["workitem",{"_index":704,"title":{},"name":{},"text":{"6":{}},"component":{}}],["workitem.getnodeinstance().getnode().getmetadata",{"_index":744,"title":{},"name":{},"text":{"6":{}},"component":{}}],["workitemhandlerconfig",{"_index":701,"title":{},"name":{},"text":{"6":{}},"component":{}}],["workitemnodefactori",{"_index":694,"title":{},"name":{},"text":{"6":{}},"component":{}}],["workitemtypehandl",{"_index":691,"title":{},"name":{},"text":{"6":{}},"component":{}}],["workspac",{"_index":3347,"title":{"67-2":{},"67-3":{}},"name":{},"text":{"66":{},"67":{},"69":{},"72":{},"73":{}},"component":{}}],["world",{"_index":1570,"title":{},"name":{},"text":{"21":{},"41":{}},"component":{}}],["world\",\"mantra\":\"serverless",{"_index":1707,"title":{},"name":{},"text":{"21":{}},"component":{}}],["world:1.0.0",{"_index":1587,"title":{},"name":{},"text":{"21":{}},"component":{}}],["world:latest",{"_index":1607,"title":{},"name":{},"text":{"21":{}},"component":{}}],["wrap",{"_index":2659,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wrapper",{"_index":574,"title":{},"name":{},"text":{"6":{}},"component":{}}],["write",{"_index":720,"title":{},"name":{},"text":{"6":{},"29":{},"70":{}},"component":{}}],["wrong",{"_index":975,"title":{"49-11":{},"49-12":{}},"name":{},"text":{"11":{},"31":{},"49":{},"54":{}},"component":{}}],["x",{"_index":949,"title":{},"name":{},"text":{"10":{},"13":{},"17":{},"21":{},"24":{},"33":{},"34":{},"35":{},"41":{},"45":{},"47":{},"55":{},"57":{},"58":{},"59":{}},"component":{}}],["x86_64",{"_index":1648,"title":{},"name":{},"text":{"21":{}},"component":{}}],["x=kogito",{"_index":1583,"title":{},"name":{},"text":{"21":{}},"component":{}}],["x=quarku",{"_index":1584,"title":{},"name":{},"text":{"21":{}},"component":{}}],["xattr",{"_index":3371,"title":{},"name":{},"text":{"68":{}},"component":{}}],["xml",{"_index":1717,"title":{},"name":{},"text":{"23":{}},"component":{}}],["y",{"_index":951,"title":{},"name":{},"text":{"10":{}},"component":{}}],["yaml",{"_index":300,"title":{},"name":{},"text":{"3":{},"10":{},"23":{},"26":{},"37":{},"49":{},"62":{},"65":{},"69":{},"72":{},"73":{}},"component":{}}],["yamlgreet",{"_index":1788,"title":{},"name":{},"text":{"25":{},"26":{}},"component":{}}],["yaml|json",{"_index":3176,"title":{},"name":{},"text":{"57":{},"58":{},"59":{}},"component":{}}],["yard.json",{"_index":3381,"title":{},"name":{},"text":{"69":{}},"component":{}}],["yard.yaml|yml",{"_index":3382,"title":{},"name":{},"text":{"69":{}},"component":{}}],["ye",{"_index":424,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["yml",{"_index":2202,"title":{},"name":{},"text":{"33":{}},"component":{}}],["yourself",{"_index":1410,"title":{},"name":{},"text":{"17":{}},"component":{}}],["you’ll",{"_index":3319,"title":{},"name":{},"text":{"64":{}},"component":{}}],["you’r",{"_index":2808,"title":{},"name":{},"text":{"47":{},"49":{},"50":{},"68":{}},"component":{}}],["z0",{"_index":3413,"title":{},"name":{},"text":{"73":{}},"component":{}}],["za",{"_index":3412,"title":{},"name":{},"text":{"73":{}},"component":{}}],["zero",{"_index":1865,"title":{},"name":{},"text":{"27":{}},"component":{}}],["zip",{"_index":2034,"title":{},"name":{},"text":{"31":{},"71":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"Kogito Serverless Workflow is a tool for building cloud-native workflow applications. You can use it to do the services and events orchestration and choreography. Currently, with Kogito Serverless Workflow you can integrate with services and events in your architecture using: CloudEvents. Ideal for an Event-Driven architecture where the services are ready to consume and produce events working in a more reactive way. Sync or Async REST services invocations via OpenAPI/Async API. There are options even to directly call a REST service in the architecture or ecosystem. Either async or sync methods are supported depending on your requirements. Internal Service execution or invocation. Kogito Serverless Workflow is also a workflow framework to build applications. You can use it to create custom services in the same thread to run a lightweight workflow-based application within the same instance. You can learn how to create, manage, and deploy your workflow applications with the following guides. Creating a Quarkus Workflow Project Learn how to create your first Quarkus Workflow Project Serverless Workflow Specification Learn about the CNCF Serverless Workflow Specification implementation Events in Kogito Serverless Workflow Learn how to use the Event state in your workflow application Callbacks in Kogito Serverless Workflow Learn how to use the Callback state in your workflow application jq Expressions Learn how to create jq expressions to manipulate data within a workflow execution Error handling in Kogito Serverless Workflow Learn how to handle errors in your workflow application Configuration properties in Kogito Serverless Workflow Quick reference of configuration properties in workflow Input and Output schema definition for Kogito Serverless Workflow Learn about the input schema definition used to validate the workflow data input against a defined JSON Schema Custom functions for your Kogito Serverless Workflow service Learn about the custom functions supported by Serverless Workflow Timeouts in Kogito Serverless Workflow Learn how to configure timeouts in the workflow Parallelism in Kogito Serverless Workflow Working with parallelism in your workflow project Serverless Workflow editor Learn how to install and use the Serverless Workflow editor VS Code extension for Serverless Workflow editor Learn how to install and use the VS Code extension for Serverless Workflow editor for creating workflows. Serverless Logic Web Tools Learn how to use Serverless Logic Web Tools for creating and managing workflows, decisions, and dashboards. Chrome extension for Serverless Workflow editor on GitHub Learn how to install and use the Chrome extension for Serverless Workflow editor to view and edit workflows directly in Github. Orchestrating OpenAPI Services Learn how to orchestrate REST services using OpenAPI specification descriptors OpenAPI Callback in Kogito Serverless Workflow Learn how to use the OpenAPI Callback in your workflow application Orchestrating gRPC based Services Learn about orchestrating gRPC services Orchestrating AsyncAPI Services Learn how to trigger and consume events using AsyncAPI specification descriptors Event correlation in Kogito Serverless Workflow Learn how to configure event correlation in your workflow application Consuming and producing events using Apache Kafka in Quarkus Learn how to configure your Quarkus Workflow Project to produce and consume events using Apache Kafka Consuming and producing events on Knative Eventing in Quarkus Learn how to configure your Quarkus Workflow Project to produce and consume events on Knative Eventing Authentication for OpenAPI services in Kogito Serverless Workflow Learn how to use authentication methods when calling REST services using OpenAPI specification Orchestration of third-party services using OAuth 2.0 authentication Learn about the OAuth2 method support when orchestrating REST services using your workflow application Kogito Serverless Workflow Tools extension in Quarkus Dev UI Learn how to use the Serverless Workflow extension in Quarkus Dev UI Kogito Serverless Workflow plug-in for Knative CLI Learn how to install the Kogito Serverless Workflow plug-in for Knative CLI Mocking HTTP CloudEvents sink using WireMock Testing Quarkus Workflow Project that uses HTTP CloudEvents and Knative Sink Binding Mocking OpenAPI services using WireMock Learn how to mock external REST requests when testing your Quarkus Workflow Project Testing your Quarkus Workflow Application using REST Assured Learn how to add unit tests in your Quarkus Workflow Project using RestAssured Running a Quarkus Workflow Application using PostgreSQL Running Quarkus Workflow Applications using PostgresSQL PostgreSQL Database Migration Migrating your existing PostgreSQL Database with changes from the Kogito Serverless Workflow upgrade using Flyway Kogito Serverless Workflow integration test using PostgreSQL Learn how to integrate tests on Quarkus Workflow Applications that use PostgreSQL as a persistence storage Kogito Serverless Workflow in the Cloud Learn about the options to deploy workflow applications in Kubernetes Integrating with Camel routes Learn how to use Camel Routes within your workflow application Invoking Knative services from Kogito Serverless Workflow Learn how to invoke Knative Services from Kogito Serverless Workflow custom functions Exposing Workflow base metrics to Prometheus Exposing the workflow base metrics to Prometheus Displaying Workflow Data in Dashboards Learn how to use dashboards to display the runtime data of your workflow application Introduction Details about Job Service to control timers in Kogito Serverless Workflow Job Service Quarkus Extensions Details about how to configure you Quarkus Workflow Project to interact with the Job Service in Kogito Serverless Workflow Data Index Core Concepts Learn Data Index core concepts, allowing to understand the purpose and the different deployment options that are provided. Data Index standalone service Go deeper in details about Data Index as standalone service deployment. Data Index Quarkus extension Explore Data Index as Quarkus extension in Kogito Serverless Workflow Saga orchestration example in Kogito Serverless Workflow Learn how and when to use the SAGA pattern in your workflow projects Timeouts Showcase in Kogito Serverless Workflow Learn how and when to use timeout in your workflow projects","title":"Kogito Serverless Workflow Guides","component":"serverlessworkflow","version":"1.42.0.Final","name":"index","url":"/serverlessworkflow/latest/index.html","titles":[{"text":"Getting started","hash":"_getting_started","id":1},{"text":"Core Concepts","hash":"_core_concepts","id":2},{"text":"Tooling","hash":"_tooling","id":3},{"text":"Service Orchestration","hash":"_service_orchestration","id":4},{"text":"Event Orchestration","hash":"_event_orchestration","id":5},{"text":"Security","hash":"_security","id":6},{"text":"Executing, Testing and Troubleshooting","hash":"_executing_testing_and_troubleshooting","id":7},{"text":"Persistence","hash":"_persistence","id":8},{"text":"Cloud","hash":"_cloud","id":9},{"text":"Integrations","hash":"_integrations","id":10},{"text":"Job Service","hash":"_job_service","id":11},{"text":"Data Index service","hash":"_data_index_service","id":12},{"text":"Use Cases","hash":"_use_cases","id":13}]},"2":{"id":2,"text":"KOGITO-9584 - Composed JSON Schema does not generate proper swagger documentation KOGITO-9568 - Remove dmn from kogito-apps and kogito-runtimes if possible KOGITO-9555 - Add generic endpoint for execution and uploading of process definitions KOGITO-9415 - Hot reload not working as expected KOGITO-9393 - [SWF Dev UI] Hot reload custom dashboards KOGITO-9166 - Gateway Api for management-console-webapp KOGITO-9244 - Platform.spec.platform.baseImage does not update the Dockerfile base image KOGITO-9653 - Fix how to handle WaitingForDeployment condition to avoid pod duplication KOGITO-9427 - Improvements in the SW guides for the Timeouts topic == Other changes and Bug fixes KOGITO-9567 - Align com.google.code.gson:gson versions KOGITO-9564 - NoSuchMethodException: com.networknt.schema.TypeValidator when running in native mode KOGITO-9525 - Swagger documentation is not properly generated if description is null KOGITO-9434 - Python modules should not be compiled by default KOGITO-9520 - Updating Java SDK to 4.0.4 KOGITO-9501 - Changing Everit to json-schema-validator KOGITO-9480 - Bump quarkus-reactive-messaging-http version to 1.1.5 KOGITO-9526 - Add the data-index to the timeouts-showcase extended KOGITO-9317 - Testing CLI + Operator using serverless-workflow-consuming-events-over-http-quarkus KOGITO-9633 - tzdb.dat (No such file or directory) KOGITO-8468 - SWF Viewer - Generated svg file doesn’t contain state images defined in icon metadata KOGITO-9490 - Testing CLI + Operator using serverless-workflow-parallel-execution KOGITO-9122 - Upgrade patternfly versions on the UI-packages","title":"New features on 1.42","component":"serverlessworkflow","version":"1.42.0.Final","name":"release_notes","url":"/serverlessworkflow/latest/release_notes.html","titles":[{"text":"Notable changes","hash":"_notable_changes","id":1}]},"3":{"id":3,"text":"Kogito Serverless Workflow is evolving as platform to build and deploy workflow applications in Kubernetes clusters. You have two options to deploy your workflow applications: either as a full Quarkus project or using the SonataFlow Operator. The cards below list all features included in the platform to deploy workflow applications either with Quarkus or the Operator. Eventually these two options will converge, the SonataFlow Operator will also be able to handle full Quarkus projects. So if you opt in to use Quarkus now and manually deploy your workflows, bear in mind that it’s on the project’s roadmap to integrate the Quarkus experience with the Operator. For developers that are looking for a native Kubernetes approach where you can model workflows using YAML definitions and directly deploy them, you can use the SonataFlow Operator. The operator registers a new Kubernetes resource in the cluster to manage your workflow development iteration cycle and composition of services and events. The application is managed by the operator. Install the SonataFlow Operator Learn how to install the SonataFlow Operator in a Kubernetes cluster Developing Workflow with the Operator Learn how to deploy a workflow for development purposes Referencing Additional Files in the Workflow Learn how to reference resource files to the workflow application Configuring Workflow Services Learn how to configure workflows deployed with SonataFlow Operator Understanding Workflow Services Status Conditions Learn to interpret the workflow resource status conditions Building and Deploying Workflows with the Operator Learn how to build and deploy workflow services with SonataFlow Operator SonataFlow Operator Known Issues, Limitations and Roadmap Learn about the known issues and feature roadmap of the SonataFlow Operator Migration Guide Migration guides For Java developers, you can use Quarkus and a few add-ons to help you build and deploy the application in a Kubernetes cluster. Kogito Serverless Workflow also generates basic Kubernetes objects YAML files to help you getting started. The application should be managed by a Kubernetes administrator. Building workflow images using Quarkus CLI Learn how to build images for your workflow applications using Quarkus CLI Kubernetes service discovery in Kogito Serverless Workflow Learn what is and how the Kubernetes service discovery for workflow application configuration works Deploying your Kogito Serverless Workflow application on OpenShift Learn how to deploy your workflow application on OpenShift cluster Deploying your Kogito Serverless Workflow application on Minikube Learn how to deploy your workflow application on Minikube for local tests and development Deploying your Kogito Serverless Workflow application on Kubernetes Learn how to deploy your workflow application on Kubernetes","title":"Kogito Serverless Workflow Applications in Cloud","component":"serverlessworkflow","version":"1.42.0.Final","name":"index","url":"/serverlessworkflow/latest/cloud/index.html","titles":[{"text":"Kubernetes with the Operator","hash":"_kubernetes_with_the_operator","id":1},{"text":"Kubernetes with Quarkus","hash":"_kubernetes_with_quarkus","id":2}]},"4":{"id":4,"text":"This document describes the information about the implementation of the Cloud Native Computing Foundation (CNCF) Serverless Workflow specification. Kogito Serverless Workflow implements version 0.8 of the Serverless Workflow specification. The following table shows the implementation status for each Serverless Workflow specification feature. Kogito Serverless Workflow does not support Retries, Sleep State, and has a limited support of Timeouts features of Serverless Workflow specification. Table 1. Implementation status icons Icon Description Fully implemented feature and compliant with the Serverless Workflow specification Partially implemented feature Not implemented Table 2. Implementation status of the Serverless Workflow specification features Feature Status Reference States Workflow States Functions Function Definition Events Event Definition Serverless Workflow data Workflow Data Expressions Workflow Expressions Error handling Workflow Error Handling Retries Retry Definition Timeouts Workflow Timeouts Compensation Workflow Compensation Constants Workflow Constants Secrets Workflow Secrets The Parallel State of the workflow states feature works in a single thread. This means that a Parallel State does not create one thread per branch, simulating an actual parallel behavior. If an exclusive property is set to `false`, you should not use the link:{spec_doc_url}#event-state[Event State] of the workflow states feature as the starting state. In case, if it is specified that way, then it will behave as if an exclusive property was set to `true`. Kogito Serverless Workflow does not support the Sleep State feature. However, this feature will be supported in a future release. The following table shows all the workflow states that Kogito Serverless Workflow supports in the Serverless Workflow specification 0.8 version: Table 3. Workflow States implementation status State Status Reference Event Event State Operation Operation State Switch Switch State Sleep Sleep State Parallel Parallel State Inject Inject State ForEach ForEach State Callback Callback State The following table shows the status of the workflow functions that Kogito Serverless Workflow supports: Table 4. Workflow Functions implementation status Function Status Reference REST Using Functions for RESTful Service Invocations RPC Using Functions for RPC Service Invocations Expression Using Functions for Expression Evaluation Async API Using Functions for Async API Service Invocations GraphQL Using Functions for GraphQL Service Invocations OData Using Functions for OData Service Invocations Custom Defining custom function types For additional functions, the Serverless Workflow specification support the custom function type, such as sysout and java. For more information about these custom function types, see Custom functions for your Kogito Serverless Workflow service. Kogito Serverless Workflow supports events of the workflow model as defined in the Serverless Workflow specification definition, except the following: resultEventRef property in EventRefDefinition is not implemented and, if specified, this property is ignored. The same functionality can be achieved by using Callback state. Correlation has limited support, that evaluates correlation rules matching a single event consumed per time with a workflow instance. The correlation among N different events to be consumed and matched with a workflow instance is not supported in Kogito Serverless Workflow. For more information about event correlation, see Event correlation in Kogito Serverless Workflow. Kogito Serverless Workflow supports the implementation of the data manipulation feature using jq (default) or jsonpath expressions. jsonpath expressions can have limitations in specific scenarios of complex data manipulation. For more information, see Workflow Data section in the Serverless Workflow specification documentation. Kogito Serverless Workflow also supports data filtering. For more information about the data filtering, see State data filters section in the Serverless Workflow specification documentation. Kogito Serverless Workflow supports jq or jsonpath to define the workflow expressions. jq is the default expression language, however, if you want to use jsonpath, set the expressionLang attribute in the workflow definition as shown in the following example: Example of changing the default expression language { \"id\": \"myworkflow\", \"version\": \"1.0\", \"expressionLang\": \"jsonpath\", \"name\": \"Workflow example\", \"description\": \"An example of how to use jsonpath expressions\" } jsonpath expression is not recommended because of the limitations of the language for data manipulation. Instead, you can use jq in various use cases. Kogito Serverless Workflow supports the error handling feature as described in the Serverless Workflow specification definition. For more information about error handling, see Error handling in Kogito Serverless Workflow. Kogito Serverless Workflow does not support Retries feature, however, it will be implemented in a future release. Alternatively, you can use Error handling in Kogito Serverless Workflow. Kogito Serverless Workflow has limited support for the timeouts feature, which covers only workflow and event timeouts. For start event state the exclusive property is not supported if set to false, therefore the timeout is not supported for the event state when starting a workflow. For more information about timeouts, see Timeouts on events for Kogito Serverless Workflow. Kogito Serverless Workflow supports workflow compensation as described in the Serverless Workflow specification definition. For more information about compensations, see Saga orchestration example in Kogito Serverless Workflow. Kogito Serverless Workflow supports workflow constants as described in the Serverless Workflow specification definition. Kogito Serverless Workflow supports workflow secrets as described in the Serverless Workflow specification definition. Secrets are associated with the Quarkus Configuration module. This means that any form of configuration that Quarkus supports is also supported in Kogito Serverless Workflow. Creating your first workflow service Getting familiar with Kogito Serverless Workflow tooling If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Serverless Workflow Specification","component":"serverlessworkflow","version":"1.42.0.Final","name":"cncf-serverless-workflow-specification-support","url":"/serverlessworkflow/latest/core/cncf-serverless-workflow-specification-support.html","titles":[{"text":"States","hash":"states","id":1},{"text":"Functions","hash":"functions","id":2},{"text":"Events","hash":"events","id":3},{"text":"Serverless Workflow data","hash":"workflow_data","id":4},{"text":"Expressions","hash":"expressions","id":5},{"text":"Error handling","hash":"error_handling","id":6},{"text":"Retries","hash":"retries","id":7},{"text":"Timeouts","hash":"timeouts","id":8},{"text":"Compensation","hash":"compensation","id":9},{"text":"Constants","hash":"constants","id":10},{"text":"Secrets","hash":"secrets","id":11},{"text":"Additional resources","hash":"_additional_resources","id":12},{"text":"Found an issue?","hash":"_found_an_issue","id":13}]},"5":{"id":5,"text":"The following table serves as a quick reference for commonly used configuration properties supported in Kogito Serverless Workflow. You can define the following properties in the src/main/resources/application.properties file of your project. Table 1. Common configuration properties Property Description Type Default value Override at runtime kogito.persistence.type Defines the type of persistence database. The possible values of this property include: jdbc mongodb filesystem kafka infinispan postgresql string Yes kogito.persistence.query.timeout.millis Defines timeout for a query execution. long 10000 Yes kogito.persistence.optimistic.lock Enables or disables the optimistic locking. boolean false Yes kogito.workflow.version-strategy Defines strategy to resolve a process version to use. The possible values of this property include: * workflow * project string workflow No kogito.service.url Defines the service URL needed to connect to the runtime endpoint from outside the service. string Yes kogito.messaging.as-cloudevents Enables a service to use CloudEvents. boolean true No kogito.addon.messaging.incoming.defaultName Defines the default name of the incoming channel. string kogito_incoming_stream No kogito.addon.messaging.outgoing.defaultName Defines the default name of the outgoing channel. string kogito_outgoing_stream No kogito.jackson.fail-on-empty-bean If this property is set as true, Jackson fails on an empty bean. boolean false No kogito.sw.operationIdStrategy Defines strategy to generate the configuration key of open API specifications. The possible values of this property include: file_name full_uri spec_title function_name string file_name No kogito.sw.states.foreach.outputVarName Defines the variable name for foreach loop. string _swf_eval_temp No kogito.grpc.enum.includeDefault Indicates if the default value of enumerations needs to be included in gRPC response. boolean false No kogito.grpc.stream.timeout Number of seconds to wait for a response from the server when using streams. int 20 No kogito.quarkus.events.threads.poolSize Defines the ThreadPoolExecutor maximum number of threads to allow in the pool. int 10 Yes kogito.quarkus.events.threads.queueSize Defines the ThreadPoolExecutor queue size to use for holding tasks before the tasks are executed. int 1 Yes quarkus.kogito.logger.always-include Enables you to include the workflow debug logger everytime. By default, this property is included in development and test mode. boolean false No quarkus.kogito.devservices.enabled Enables or disables the Dev Services for Kogito. By default, the Dev Services are enabled, unless an existing configuration is present. boolean true No quarkus.kogito.devservices.port Defines the optional fixed port that the Dev Services listen to. int 8180 No quarkus.kogito.devservices.image-name Defines the Data Index image to use. string quay.io/kiegroup/kogito-data-index-ephemeral:1.42.0.Final No quarkus.kogito.devservices.shared Indicates if the Data Index instance, which is managed by Quarkus Dev Services, is shared. boolean true No quarkus.kogito.devservices.service-name Defines the value of the label that is attached to the started container. This property is used when shared is set to true. string kogito-data-index No If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Configuration properties in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"configuration-properties","url":"/serverlessworkflow/latest/core/configuration-properties.html","titles":[{"text":"Found an issue?","hash":"_found_an_issue","id":1}]},"6":{"id":6,"text":"The Cloud Native Computing Foundation (CNCF) specification supports the custom function type, which enables the implementations to extend the function definition capability. Kogito Serverless Workflow supports the java and sysout custom types. The CNCF specification does not support java and sysout functions. Therefore, these functions might not be portable across other implementations. You can use the sysout function for logging as shown in the following example: Example of sysout function definition { \"functions\": [ { \"name\": \"logInfo\", \"type\": \"custom\", \"operation\": \"sysout:INFO\" } ] } The string after the : is optional and is used to indicate the log level. The possible values are TRACE, DEBUG, INFO, WARN, and ERROR. If not present, INFO is considered by default. In the state definition, you can call the same sysout function as shown in the following example: Example of a sysout function reference within a state { \"states\": [ { \"name\": \"myState\", \"type\": \"operation\", \"actions\": [ { \"name\": \"printAction\", \"functionRef\": { \"refName\": \"logInfo\", \"arguments\": { \"message\": \"\\\"Workflow model is \\\\(.)\\\"\" } } } ] } ] } message argument can be a jq expression or a jq string using interpolation, as in the example above Kogito Serverless Workflow supports the java functions within an Apache Maven project, in which you define your workflow service. The following example shows the declaration of a java function: Example of a java function declaration { \"functions\": [ { \"name\": \"myFunction\", (1) \"type\": \"custom\", (2) \"operation\": \"service:java:com.acme.MyInterfaceOrClass::myMethod\" (3) } ] } 1 myFunction is the function name 2 custom is the function type 3 service:java:com.acme.MyInterfaceOrClass::myMethod is the custom operation definition. In the custom operation definition, service is the reserved operation keyword followed by the java keyword. com.acme.MyInterfaceOrClass is the FQCN (Fully Qualified Class Name) of the interface or implementation class followed by the method name (myMethod). Your method interface signature must copy the arguments passed by the workflow. For example, if you invoke a function using one argument as follows, then your method signature assumes that the number model variable is an integer: Example of a java function reference with one argument { \"functionRef\": { \"refName\": \"myFunction\", \"arguments\": { \"number\": \"${.number}\" } } } Example of a java function implementation public class MyInterfaceOrClass { public void myMethod(int number) { if (number % 2 != 0) { throw new IllegalArgumentException(\"Odd situation\"); } } } As a particular case, if you provide no argument in the workflow definition, the signature of the Java method might include a Jackson’s JsonNode parameter. This means that the Java method expects the entire workflow model as input. When using the following example function reference with no arguments, and if the method signature contains a JsonNode parameter, the entire workflow model is passed when the method call is performed. Example of a java function reference with no arguments { \"functionRef\": { \"refName\": \"myFunction\" } } Example of a java function implementation public class MyInterfaceOrClass { public JsonNode myMethod(JsonNode workflowData) { // do whatever I want with the Workflow model ...... // return the modified content: return workflowData; } } If your method returns a JsonNode, the content of that node is merged into the workflow model (you can use an action data filter to control what is merged). The same occurs if your method returns any Java Object descendant that is not a primitive wrapper, the Java object is recursively converted to a JSON object and the result is merged into the workflow model (you can use an action data filter to control what is merged). If your method returns a primitive type or their corresponding wrapper object (int, boolean, long, and so on), then the primitive value is added to the workflow model with the name response (you can change that name using an action data filter). If your method returns Java collections, it is converted to a JSON array and added to the workflow model with the name response (you can change that name using an action data filter). If you need access to process contextual information (for example, Kogito process instance ID) inside your Java service, you can add a KogitoProcessContext parameter as the last one in the method signature. Therefore, if you need to do so, you can update the signature of methods from previous sections. Example of a function accessing Kogito context public class MyInterfaceOrClass { public JsonNode myMethod(JsonNode workflowData, KogitoProcessContext context ) { // do whatever I want with the JsonNode and the Kogito process context ...... // return the modified content: return workflowData; } } Example of a function accessing Kogito context public class MyInterfaceOrClass { public void myMethod(int number, KogitoProcessContext context) { if (number % 2 != 0) { throw new IllegalArgumentException(\"Odd situation\"); } } } Avoid using java functions to call the external services, instead, you can use the services orchestration features. Kogito supports the Camel Routes functions within an Apache Maven project, in which you define your workflow service. This section briefly exemplifies how to define and use Camel Routes within your workflow application. For more information, see the Integrating with Camel Routes. The following example shows the declaration of a Camel function: { \"functions\": [ { \"name\": \"myCamelEndpoint\", (1) \"type\": \"custom\", (2) \"operation\": \"camel:direct:myendpoint\" (3) } ] } 1 myCamelEndpoint is the function name 2 custom is the function type 3 camel:direct:myendpoint is the custom operation definition. In this definition, camel is the reserved keyword followed by the direct endpoint. Camel Direct is the only supported consumer by Kogito Serverless Workflow. Finally, myendpoint is the endpoint URI name found in the route within your project’s context. The Camel function arguments must follow a specific structure when passing data from the workflow state to the route. The body and headers are the only attributes supported in the function arguments. Both are optional if you need to call the Camel routes without arguments. The only constraint is that you can not call a Camel route with only headers. The following examples display valid argument structures for Camel function arguments: Example calling a Camel route using body and headers { \"functionRef\": { \"refName\": \"myCamelEndpoint\", \"arguments\": { \"body\": \"${ .my.body.data }\", (1) \"headers\": { (2) \"key1\": \"${ .my.value }\", \"key2\": \"${ .my.other.value }\" } } } } 1 jq expression filtering the state data for the body argument. 2 JSON key/value pair for the headers argument. A jq expression returning the same JSON object is also valid. Example calling a Camel route using body { \"functionRef\": { \"refName\": \"myCamelEndpoint\", \"arguments\": { \"body\": \"${ .my.body.data }\" } } } Example calling a Camel route without arguments { \"functionRef\": { \"refName\": \"myCamelEndpoint\" } } Example calling a Camel route with only one argument { \"functionRef\": { \"refName\": \"myCamelEndpoint\", \"arguments\": \"${ .my.body.data }\" } } In this last example, the jq expression result is used as the body argument in a way to simplify the definition. The Camel route is responsible to produce the return value in a way that the workflow can understand. The following are considered valid objects: A string that contains a valid JSON object A valid Java bean that can be serialized to JSON A Jackson’s JsonNode object Any primitive type (Integer, Float, Decimal, String, etc) Kogito Serverless Workflow provides an implementation of a custom function through the knative-serving add-on to invoke Knative services. It allows you to have a static URI, defining a Knative service, which is used to perform HTTP requests. The Knative service defined in the URI is queried in the current Knative cluster and translated to a valid URL. This section briefly exemplifies how to define and use Knative custom functions within your workflow application. For more information, see Invoking Knative services from Serverless Workflow. Given the following deployed Knative service: $ kn service list NAME URL LATEST AGE CONDITIONS READY REASON custom-function-knative-service http://custom-function-knative-service.default.10.109.169.193.sslip.io custom-function-knative-service-00001 3h16m 3 OK / 3 True You can declare a Kogito Serverless Workflow custom function using the Knative service name, like the following: \"functions\": [ { \"name\": \"greet\", (1) \"type\": \"custom\", (2) \"operation\": \"knative:services.v1.serving.knative.dev/custom-function-knative-service?path=/plainJsonFunction\", (3) } ] 1 greet is the function name 2 custom is the function type 3 In operation you set the coordinates of the Knative service The above function will send a POST request to the http://custom-function-knative-service.default.10.109.169.193.sslip.io/plainJsonFunction URL. If you don’t specify a path, Kogito Serverless Workflow will use the root path (/). GET requests are not yet supported. Note that in the above example, you declared only the name of the service you wanted to call, but not a namespace. In this case, Kogito Serverless Workflow will look for a Knative service in the same namespace the workflow service is running. In case you need to call a Knative service in a different namespace, you can declare the function as: \"functions\": [ { \"name\": \"greet\", \"type\": \"custom\", \"operation\": \"knative:services.v1.serving.knative.dev/my_different_namespace/custom-function-knative-service?path=/plainJsonFunction\" } ] In the above example, Kogito Serverless Workflow will look for the custom-function-knative-service in the my_different_namespace namespace. In case you need to send a payload in the request, you can add it to arguments in functionRef. You must send the following JSON object as the payload: { \"product_id\": \".product_id\", \"customer_name\": \".customer_name\" } You must declare a functionRef like the following. \"states\": [ { \"name\": \"invokeFunction\", \"type\": \"operation\", \"actions\": [ { \"functionRef\": { \"refName\": \"greet\", \"arguments\": { (1) \"product_id\": \".product_id\", \"customer_name\": \".customer_name\" } } } ], \"end\": true } ] 1 The request payload is set in arguments. By default, Kogito Serverless Workflow sends the payload of a Knative function as a regular JSON object and Content-Type as application/json. However, you can tell Kogito Serverless Workflow to send the payload as a CloudEvent. In that case, Kogito Serverless Workflow will check if the CloudEvent has all mandatory attributes set and use application/cloudevents+json; charset=UTF-8 in Content-Type. To tell Kogito Serverless Workflow you want to send the payload as a CloudEvent, you must define your function as follows: \"functions\": [ { \"name\": \"greet\", \"type\": \"custom\", \"operation\": \"knative:services.v1.serving.knative.dev/custom-function-knative-service?path=/plainJsonFunction&asCloudEvent=true\" (1) } ] 1 Tells Kogito Serverless Workflow to send the payload as a CloudEvent. Default is false If you do not set the asCloudEvent attribute to true, you can not send a CloudEvent. If you do so, Kogito Serverless Workflow will throw an error. You must send the following CloudEvent as the payload: { \"specversion\" : \"1.0\", \"type\" : \"com.github.pull_request.opened\", \"source\" : \"https://github.com/cloudevents/spec/pull\", \"subject\" : \"123\", \"time\" : \"2018-04-05T17:31:00Z\", \"comexampleextension1\" : \"value\", \"comexampleothervalue\" : 5, \"datacontenttype\" : \"text/xml\", \"data\" : \"\" } You must declare a functionRef like the following: (Do not forget to set asCloudEvent as true in function metadata) \"states\": [ { \"name\": \"invokeFunction\", \"type\": \"operation\", \"actions\": [ { \"functionRef\": { \"refName\": \"greet\", \"arguments\": { (1) \"specversion\" : \"1.0\", \"type\" : \"com.github.pull_request.opened\", \"source\" : \"https://github.com/cloudevents/spec/pull\", \"subject\" : \"123\", \"time\" : \"2018-04-05T17:31:00Z\", \"comexampleextension1\" : \"value\", \"comexampleothervalue\" : 5, \"datacontenttype\" : \"text/xml\", \"data\" : \"\" } } } ], \"end\": true } ] 1 The CloudEvent is set in arguments. Kogito Serverless Workflow generates a CloudEvent ID based on the source and the workflow instance ID. In case you decide to set an ID, Kogito Serverless Workflow will use it and you must ensure it’s unique. Refer to the following example on how to set a CloudEvent ID: Setting a CloudEvent ID \"arguments\": { \"specversion\" : \"1.0\", \"id\": \"a_unique_id_42\", (1) \"type\" : \"com.github.pull_request.opened\", \"source\" : \"https://github.com/cloudevents/spec/pull\", \"subject\" : \"123\", \"time\" : \"2018-04-05T17:31:00Z\", \"comexampleextension1\" : \"value\", \"comexampleothervalue\" : 5, \"datacontenttype\" : \"text/xml\", \"data\" : \"\" } 1 The CloudEvent ID. By default, the Knative service must respond within 10 seconds. You can use the kogito.addon.knative-serving.request-timeout property to configure this value. For instance, if you want to reduce the request timeout to 5 seconds, you must add the following to your application.properties file: kogito.addon.knative-serving.request-timeout=5000 (1) 1 Time in milliseconds You can add your custom types by using the Kogito add-on mechanism. As predefined custom types like sysout or java, the custom type identifier is the prefix of the operation field of the function definition. Kogito add-ons relies on the Quarkus extensions mechanism. And the add-on consists of at least two Maven projects: The deployment module, which is responsible for generating the code required for the extension to work. The runtime module, which includes the non-generated classes that are required for the extension to work. In the case of a Serverless Workflow custom type, following are the roles of the modules: The deployment project The deployment project is expected to configure the work item handler used during runtime to perform the logic associated with the custom type. It must contain a Java class that inherits from WorkItemTypeHandler. Its responsibilities are to indicate the custom type identifier (the operation prefix, as indicated earlier) and to set up the WorkItemNodeFactory instance passed as a parameter of the fillWorkItemHandler method. That instance is included in the Kogito process definition for that Workflow. As a part of this setup, you must indicate the name of the WorkItemNodeFactory. You might also provide any relevant metadata for that handler if needed. The runtime project The runtime project consists of a WorkflowWorkItemHandler implementation, which name must match with the one provided to WorkItemNodeFactory during the deployment phase, and a WorkItemHandlerConfig bean that registers that handler with that name. When a Serverless Workflow function is called, Kogito identifies the proper WorkflowWorkItemHandler instance to be used for that function type (using the handler name associated with that type by the deployment project) and then invokes the internalExecute method. The Map parameter contains the function arguments defined in the workflow, and the WorkItem parameter contains the metadata information added to the handler by the deployment project. Hence, the executeWorkItem implementation has an access to all the information needed to perform the computational logic intended for that custom type. Assuming you want to interact, from a workflow file, with a legacy RPC server as the one defined in this project. This legacy server supports four simple arithmetic operations: add, minus, multiply and divide, which can be invoked using a custom RPC protocol. Since this is an uncommon protocol, the workflow cannot handle them by using any of the predefined Serverless Workflow function types. The available options are to use a Java service, which invokes a Java class that knows how to interact with the server, or define a custom type that knows how to interact with the service. Using the recent approach, you can write a workflow file defining this function. RPC Custom function definition example \"functions\": [ { \"name\": \"division\", \"type\": \"custom\", \"operation\": \"rpc:division\" } ], The operation starts with rpc, which is the custom type identifier, and continues with division, which denotes the operation that will be executed in the legacy server. A Kogito addon that defines the rpc custom type must be developed for this function definition to be identified. It is consist of a deployment project and a runtime project. The deployment project is responsible for extending the WorkItemTypeHandler and setup the WorkItemNodeFactory as follows: Example of the RPC function Java implementation import static org.kie.kogito.examples.sw.custom.RPCCustomWorkItemHandler.NAME; import static org.kie.kogito.examples.sw.custom.RPCCustomWorkItemHandler.OPERATION; public class RPCCustomTypeHandler extends WorkItemTypeHandler{ @Override public String type() { return \"rpc\"; } @Override protected > WorkItemNodeFactory fillWorkItemHandler(Workflow workflow, ParserContext context, WorkItemNodeFactory node, FunctionDefinition functionDef) { return node.workName(NAME).metaData(OPERATION, trimCustomOperation(functionDef)); } } This example setups the name of the KogitoWorkItemHandler, adds a metadata key with the name of the remote operation (extracted from the Serverless Workflow function definition operation property), and declares that the custom type is named as rpc. The Runtime project contains the KogitoWorkItemHandler and the WorkItemHandlerConfig implementations. As expected, RPCCustomWorkItemHandler implements the internalExecute method as follows: Example of implementation of the internalExecute method @Override protected Object internalExecute(KogitoWorkItem workItem, Map parameters) { try { Iterator iter = parameters.values().iterator(); Map metadata = workItem.getNodeInstance().getNode().getMetaData(); String operationId = (String) metadata.get(OPERATION); if (operationId == null) { throw new IllegalArgumentException (\"Operation is a mandatory parameter\"); } return CalculatorClient.invokeOperation((String)metadata.getOrDefault(HOST,\"localhost\"), (int) metadata.getOrDefault(PORT, 8082), OperationId.valueOf(operationId.toUpperCase()), (Integer)iter.next(), (Integer)iter.next()); } catch (IOException io ) { throw new UncheckedIOException(io); } } The implementation invokes the CalculatorClient.invokeOperation, a java static method that knows how to interact with the legacy service. You can obtain the operation parameter from the WorkItem metadata. The dividend and the divisor parameters are obtained from the Map parameter, which contains the function arguments defined in the workflow file. Example of the custom function call from the workflow definition { \"actions\":[ { \"functionRef\":{ \"refName\":\"division\", \"arguments\":{ \"dividend\":\".dividend\", \"divisor\":\".divisor\" } } } ] } The RPCCustomWorkItemHandlerConfig is a bean that registers the handler name. Example of injecting the custom`WorkItemHandler` @Inject RPCCustomWorkItemHandler handler; @PostConstruct void init () { register(handler.getName(),handler); } CNCF Serverless Workflow specification jq expressions in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Custom functions for your Kogito Serverless Workflow service","component":"serverlessworkflow","version":"1.42.0.Final","name":"custom-functions-support","url":"/serverlessworkflow/latest/core/custom-functions-support.html","titles":[{"text":"Sysout custom function","hash":"con-func-sysout","id":1},{"text":"Java custom function","hash":"con-func-java","id":2},{"text":"Function Definition","hash":"_function_definition","id":3},{"text":"Function Arguments","hash":"_function_arguments","id":4},{"text":"Function return values","hash":"_function_return_values","id":5},{"text":"Function accessing Kogito context","hash":"_function_accessing_kogito_context","id":6},{"text":"Camel custom function","hash":"con-func-camel","id":7},{"text":"Function definition","hash":"_function_definition_2","id":8},{"text":"Function arguments","hash":"_function_arguments_2","id":9},{"text":"Function return values","hash":"_function_return_values_2","id":10},{"text":"Knative custom function","hash":"con-func-knative","id":11},{"text":"Function definition","hash":"_function_definition_3","id":12},{"text":"About namespaces","hash":"about-namespaces","id":13},{"text":"Function arguments","hash":"_function_arguments_3","id":14},{"text":"Sending a regular JSON object","hash":"_sending_a_regular_json_object","id":15},{"text":"Sending a CloudEvent","hash":"sending-cloudevents","id":16},{"text":"Configurations","hash":"_configurations","id":17},{"text":"Request timeout","hash":"_request_timeout","id":18},{"text":"Custom function types","hash":"_custom_function_types","id":19},{"text":"Custom function type example","hash":"_custom_function_type_example","id":20},{"text":"Additional resources","hash":"_additional_resources","id":21},{"text":"Found an issue?","hash":"_found_an_issue","id":22}]},"7":{"id":7,"text":"The dataInputSchema in the Serverless Workflow specification is a parameter used in the workflow definition. The dataInputSchema parameter validates the workflow data input against a defined JSON Schema. It is important to provide dataInputSchema, as it is used to verify if the provided workflow data input is correct before any workflow states are executed. You can define a dataInputSchema as follows: dataInputSchema definition \"dataInputSchema\": { \"schema\": \"URL_to_json_schema\", \"failOnValidationErrors\": false } In the previous definition, the schema property is a URI, which holds the path to the JSON schema used to validate the workflow data input. The URI can be a classpath URI, a file, or an HTTP URL. If a classpath URI is specified, then the JSON schema file must be placed in the resources section of the project or any other directory included in the classpath. failOnValidationErrors is an optional flag that indicates the behavior adopted when the input data does not match the specified JSON schema. If not specified or set to true, an exception will be thrown and flow execution will fail. If set to false, the flow will be executed and a log of level WARN with the validation errors will be printed. Serverless Workflow specification does not support JSON output schema until version 0.9. Therefore Kogito Serverless Workflow is implementing it as a Serverless Workflow specification extension. Output schema is applied after workflow execution to verify that the output model has the expected format. It is also useful for Swagger generation purposes. Similar to Input schema, you must specify the URL to the JSON schema, using outputSchema as follows: outputSchema definition \"extensions\" : [ { \"extensionid\": \"workflow-output-schema\", \"outputSchema\": { \"schema\" : \"URL_to_json_schema\", \"failOnValidationErrors\": false } ] The same rules described for dataInputSchema apply for schema and failOnValidationErrors. The difference is that the latter flag is applied after workflow execution. You can see the serverless-workflow-expression-quarkus example application of a workflow definition with dataInputSchema and outputSchema. When a workflow definition contains a dataInputSchema and/or outputSchema attribute, the workflow application generates an OpenAPI file, such as http://localhost:8080/q/openapi. The generated OpenAPI file references the schema file, which helps in defining the input and checking the output data for the workflows. For more information about the OpenAPI file, see OpenAPI specification. If you want to generate an OpenAPI file for a workflow, then you must add the Quarkus dependency in the project. Example component section with schema in an OpenAPI file components: schemas: GeneralError: type: object properties: code: format: int32 type: integer message: type: string Orchestrating the OpenAPI services Configuring the OpenAPI services endpoints If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Input and Output schema definition for Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"defining-an-input-schema-for-workflows","url":"/serverlessworkflow/latest/core/defining-an-input-schema-for-workflows.html","titles":[{"text":"Input schema","hash":"_input_schema","id":1},{"text":"Output schema","hash":"_output_schema","id":2},{"text":"Example with dataInputSchema and outputSchema","hash":"_example_with_datainputschema_and_outputschema","id":3},{"text":"Swagger documentation","hash":"_swagger_documentation","id":4},{"text":"Additional resources","hash":"_additional_resources","id":5},{"text":"Found an issue?","hash":"_found_an_issue","id":6}]},"8":{"id":8,"text":"This document describes event state in a workflow. You can use the event state to start a new workflow instance upon the reception of a designated CloudEvent or to pause the execution of an existing workflow instance until a designated CloudEvent is received. An event state consists of one or more event definitions. Event definitions are combined to designate the CloudEvent types that the event state listens to. In an event definition, the onEvents property is used to group the CloudEvent types that might trigger the same set of actions. The exclusive property in an event definition indicates how an event match is calculated. In case the value of exclusive property is false, then all CloudEvent types in the eventRefs array must be received for a match to occur. Otherwise, the reception of the referenced CloudEvent types is considered a match. The following is an example of event definitions, consisting of two CloudEvent types including noisy and silent: Example event definitions \"events\": [ { \"name\": \"noisyEvent\", \"source\": \"\", \"type\": \"noisy\", \"dataOnly\" : \"false\" }, { \"name\": \"silentEvent\", \"source\": \"\", \"type\": \"silent\" } ] To indicate that an event match occurs when both noisy and silent CloudEvent types are received and to execute different actions for both CloudEvent types, define an event state containing both event definitions in separate onEvent items and set exclusive property to false. Example event state defintion with multiple onEvent items { \"name\": \"waitForEvent\", \"type\": \"event\", \"onEvents\": [ { \"eventRefs\": [ \"noisyEvent\" ], \"actions\": [ { \"functionRef\": \"letsGetLoud\" } ] }, { \"eventRefs\": [ \"silentEvent\" ], \"actions\": [ { \"functionRef\": \"beQuiet\" } ] } ] , \"exclusive\": false } To execute the same action when both event types are received, use only one onEvent item as shown in the following example: Example event state definition with single onEvent item { \"name\": \"waitForEvent\", \"type\": \"event\", \"onEvents\": [ { \"eventRefs\": [ \"noisyEvent\", \"silentEvent\" ], \"actions\": [ { \"functionRef\": \"notCareAboutNoise\" } ] } ] , \"exclusive\": false } If you want the same action to be executed when any of the event types is received, set the exclusive property to true as shown in the following example: Example event state definition executing same action { \"name\": \"waitForEvent\", \"type\": \"event\", \"onEvents\": [ { \"eventRefs\": [ \"noisyEvent\", \"silentEvent\" ], \"actions\": [ { \"functionRef\": \"notCareAboutNoise\" } ] } ] ,\"exclusive\": true } You can also remove the exclusive property, as true is the default value. To start a new workflow instance, set the start property to the event state name in the workflow header. The workflow instance starts when there is an event match. Using the previous example of event state definition, add the following code in the workflow header: Start a workflow instance \"start\":\"waitForEvent\" An event state can also be used to pause an existing workflow instance. When the workflow execution reaches an event state, which is not starting, then the execution is paused until there is an event match for that workflow instance. Similar to the callback state in a workflow, the workflow instance to be resumed is identified by kogitoprocrefid CloudEvent attribute or calculated according to the event correlation functionality. While callback state is used for fire&wait scenarios, event state covers wait&fire scenarios. For more information about the callback state, see Callback state in Kogito Serverless Workflow. Creating your first workflow service Consuming and producing events using Apache Kafka Consuming and producing events on Knative Eventing If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Events in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"handling-events-on-workflows","url":"/serverlessworkflow/latest/core/handling-events-on-workflows.html","titles":[{"text":"Example of event match","hash":"ref-example-event-match","id":1},{"text":"Additional resources","hash":"_additional_resources","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"9":{"id":9,"text":"The Serverless Workflow specification defines several timeouts configurations that you can use to configure maximum times for the workflow execution in different scenarios. For example, you can configure how long a workflow can wait for an event to arrive when it is in a given state, etc. Currently, Kogito Serverless Workflow supports only the workflow execution timeout and event timeouts. Regardless of its application scope (workflow or state), the timeouts must be configured as an amount of time (a duration), which is considered to start when the referred scope becomes active. Timeouts use the ISO 8601 data and time standard to specify a duration of time and follow the format PnDTnHnMn.nS with days considered to be exactly 24 hours. For instance, PT15M configures 15 minutes, and P2DT3H4M defines 2 days, 3 hours and 4 minutes. To configure the maximum amount of time a workflow can be running before being canceled, you can use the workflow timeout. This is configured in the header section of the workflow, by using the WorkflowExecTimeout definition. Only the duration property is currently implemented. Once canceled, the workflow is considered to be finished, and will not be accessible through a GET request anymore. So it behaves as if the interrupt was true by default. For example, to cancel the workflow after an hour of execution, you must use the following configuration. Example of workflow timeout { \"id\": \"workflow_timeout\", \"version\": \"1.0\", \"name\": \"Workflow timeout example\", \"description\": \"An example of how workflow timeout works\", \"start\": \"printWaitMessage\", \"timeouts\": { \"workflowExecTimeout\": \"PT1H\" } ... } When you define a state in a workflow, you can use the timeouts property to configure the maximum time to complete this state. When that time is overdue, the state is considered timed-out, and the engine continues the execution from this state. The execution flow depends on the state type, for instance, a transition to a next state might be executed. All the properties that you can use to configure state timeouts are described in the Serverless Workflow specification. Event-based states can use the sub-property eventTimeout to configure the maximum time to wait for an event to arrive. This is the only property that is supported in current implementation. The Callback state can be used when you need to execute an action, in general to call an external service, and wait for an asynchronous response in form of an event, the callback. Once the response event is consumed, the workflow continues the execution, in general moving to the next state defined in the transition property. See more on Callback state in Kogito Serverless Workflow. Since the Callback state halts the execution until the event is consumed, you can configure an eventTimeout for it, and in case the event does not arrive in the configured time duration, the workflow continues the execution moving to the next state defined in the transition, see the example. Example of Callback state with timeout { \"name\": \"CallbackState\", \"type\": \"callback\", \"action\": { \"name\": \"callbackAction\", \"functionRef\": { \"refName\": \"callbackFunction\", \"arguments\": { \"input\": \"${\\\"callback-state-timeouts: \\\" + $WORKFLOW.instanceId + \\\" has executed the callbackFunction.\\\"}\" } } }, \"eventRef\": \"callbackEvent\", \"transition\": \"CheckEventArrival\", \"onErrors\": [ { \"errorRef\": \"callbackError\", \"transition\": \"FinalizeWithError\" } ], \"timeouts\": { \"eventTimeout\": \"PT30S\" } } The Switch state can be used when you need to take an action depending on certain conditions, these conditions can be based on the workflow data, dataConditions, or on events, eventConditions. When you use the eventConditions, the workflow execution waits to make a decision until any of the configured events arrives and matches a condition. In this situation, you can configure an event timeout, that controls the maximum time to wait for an event to match the conditions. If this time expires, the workflow moves to the state defined in the defaultCondition property of the Switch state, as you can see in the example. See more details about this state on the Serverless Workflow specification - Switch State. Example of Switch state with timeout { \"name\": \"ChooseOnEvent\", \"type\": \"switch\", \"eventConditions\": [ { \"eventRef\": \"visaApprovedEvent\", \"transition\": \"ApprovedVisa\" }, { \"eventRef\": \"visaDeniedEvent\", \"transition\": \"DeniedVisa\" } ], \"defaultCondition\": { \"transition\": \"HandleNoVisaDecision\" }, \"timeouts\": { \"eventTimeout\": \"PT5S\" } } The Event state is used to wait for one or more events to be received by the workflow, execute a set of actions, and then continue the execution. If the Event state is a starting state, a new workflow instance is created. The Event state is not supported as a starting state if the exclusive flag is set to false, therefore timeout is not supported in this case. The timeouts property is used for this state to configure the maximum time the workflow should wait for the configured events to arrive. If this time is exceeded and the events are not received, the workflow moves to the state defined in the transition property or ends the workflow instance (in case of an end state), without performing any actions. You can see this in the example. For more information about Event state timeout, see Serverless Workflow specification - Event State. Example of Event state with timeout { \"name\": \"WaitForEvent\", \"type\": \"event\", \"onEvents\": [ { \"eventRefs\": [ \"event1\" ], \"eventDataFilter\": { \"data\": \"${ \\\"The event1 was received.\\\" }\", \"toStateData\": \"${ .exitMessage }\" }, \"actions\": [ { \"name\": \"printAfterEvent1\", \"functionRef\": { \"refName\": \"systemOut\", \"arguments\": { \"message\": \"${\\\"event-state-timeouts: \\\" + $WORKFLOW.instanceId + \\\" executing actions for event1.\\\"}\" } } } ] }, { \"eventRefs\": [ \"event2\" ], \"eventDataFilter\": { \"data\": \"${ \\\"The event2 was received.\\\" }\", \"toStateData\": \"${ .exitMessage }\" }, \"actions\": [ { \"name\": \"printAfterEvent2\", \"functionRef\": { \"refName\": \"systemOut\", \"arguments\": { \"message\": \"${\\\"event-state-timeouts: \\\" + $WORKFLOW.instanceId + \\\" executing actions for event2.\\\"}\" } } } ] } ], \"timeouts\": { \"eventTimeout\": \"PT30S\" }, \"transition\": \"PrintExitMessage\" } To deploy a workflow that uses timeouts, or any other timer-based action, it is necessary to have a job service running in your environment, which is an independent service responsible to control the workflows timers, see the job service for more information. The provisioning of this service depends on the work mode that you are using. When you work with the SonataFlow Operator Dev Profile, the operator will automatically provide an execution environment that contains an embedded job service instance, as well as an instance of the data index service. And thus, there is no need for additional configurations. In the timeouts showcase you can see the details of how to work with timeouts and the SonataFlow Operator Dev Profile. When you work with a standalone Quarkus Workflow Project, you must: Configure the project to include the required addon for the workflows to connect with that service. Ensure that a jobs service instance is available in your environment. In the job service guide you can see all the available add-dons and configuration alternatives for this case. To see the examples about how configure the timeouts, and execute them in different deployment scenarios, you can use the Timeouts showcase in Kogito Serverless Workflow Callback state in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Timeouts in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"timeouts-support","url":"/serverlessworkflow/latest/core/timeouts-support.html","titles":[{"text":"Workflow timeout","hash":"_workflow_timeout","id":1},{"text":"Event timeout","hash":"_event_timeout","id":2},{"text":"Callback state timeout","hash":"callback-state-timeout","id":3},{"text":"Switch state timeout","hash":"switch-state-timeout","id":4},{"text":"Event state timeout","hash":"event-state-timeout","id":5},{"text":"Deploying a timed-based workflow","hash":"_deploying_a_timed_based_workflow","id":6},{"text":"SonataFlow Operator Dev Profile","hash":"_sonataflow_operator_dev_profile","id":7},{"text":"Quarkus Workflow Project","hash":"_quarkus_workflow_project","id":8},{"text":"Timeouts showcase","hash":"timeouts-showcase","id":9},{"text":"Additional resources","hash":"_additional_resources","id":10},{"text":"Found an issue?","hash":"_found_an_issue","id":11}]},"10":{"id":10,"text":"Each workflow instance is associated with a data model. A data model consists of a JSON object regardless of whether the workflow file contains YAML or JSON. The initial content of the JSON object depends on how the workflow is started. If the workflow is created using the Cloud Event, then the workflow content is taken from the data property. However, if the workflow is started through an HTTP POST request, then the workflow content is taken from the request body. The workflow expressions in the Serverless Workflow specification are used to interact with the data model. The supported expression languages include JsonPath and jq. jq expression language is the default language. However, you can change the expression language to JsonPath using the expressionLang property. This document describes the usage of jq expressions in switch state conditions, action function arguments, and data filtering. The conditions occurring in a switch state enable the workflow designer to select the path that workflow follows based on the data model content. A condition in a switch state is an expression, which returns a boolean value when evaluated against the data model. If a condition associated with a state transition returns true, then the workflow must follow that transition. For example, in the serverless-workflow-greeting-quarkus example application, a message is displayed depending on the selected language, that is English or Spanish. If the value of the language property is English, the constant literal injected on the message property is Hello from, otherwise the constant value injected on the message property is Saludos desde…. The switch state in the serverless-workflow-greeting-quarkus example application contains the following conditions, which in turn contains two jq expressions returning a boolean. Example conditions in serverless-workflow-greeting-quarkus \"dataConditions\": [ { \"condition\": \"${ .language == \\\"English\\\" }\", \"transition\": \"GreetInEnglish\" }, { \"condition\": \"${ .language == \\\"Spanish\\\" }\", \"transition\": \"GreetInSpanish\" } ] The Serverless Workflow specification requires all the expressions to be embedded within ${… }. However, Kogito Serverless Workflow figures out whether or not a string is an expression. Therefore, you can save characters and skip ${ in the beginning and } in the end. In case of portability, you must embed the expressions within ${… }. In the Serverless Workflow specification, you can define workflow functions, which can be invoked several times by the workflow states. Each workflow function call might contain different arguments, which are specified using the function arguments. For example, you can see the temperature conversion function definition in serverless-workflow-temperature-conversion example application. The temperature conversion function performs OpenAPI invocations to convert Fahrenheit to Celsius. For more information about OpenAPI, see Orchestrating the OpenAPI services. Following is the subtraction function in serverless-workflow-temperature-conversion example application: Example subtraction function in serverless-workflow-temperature-conversion \"functions\": [ { \"name\": \"subtraction\", \"operation\": \"specs/subtraction.yaml#doOperation\" }] The arguments in subtraction function are expressed as a JSON object, and the property values of the JSON object are either a string containing an expression or a JSON data type, such as string, number, or boolean. Example arguments in subtraction function \"functionRef\": { \"refName\": \"subtraction\", \"arguments\": { \"leftElement\": \".fahrenheit\", \"rightElement\": \".subtractValue\" } } In the previous example, the left number is equal to the fahrenheit property (an input number that invokes the workflow), and the right number is equal to the subtractValue property (a constant number that is injected to the workflow model by SetConstants state). Once the expression evaluation is resolved for all properties that contain an expression, the resulting object is passed in the OpenAPI request. Based on the OpenAPI definition, the properties in the JSON object are used as body, path, query, or header of the upcoming REST invocation. Following is an example of function arguments defined as string that contains an expression, returning a JSON object: Example function arguments defined as string \"functionRef\": { \"refName\": \"subtraction\", \"arguments\": \"{leftElement: .fahrenheit, rightElement : .subtractValue}\" } In the previous example, the result of the expression evaluation is the same JSON object than in the first case, which is passed as arguments of the OpenAPI request. The Serverless Workflow specification defines the following filtering mechanisms to select which information must be part of the workflow data model: Action data filters: Select the part of the action result that is merged into the data model, which overrides the properties that share the name with the selected action result. Event data filters: Similar to the action data filters, but apply to the events instead of actions. State data filters: Define the workflow model to the JSON object, which is returned by the expression and discards an existing property. State and Action data filter example You can see serverless-workflow-expression-quarkus example application, in which actions and state data filters are used. Following is an expression function in serverless-workflow-expression-quarkus example application: Example expression function in serverless-workflow-expression-quarkus \"functions\": [ { \"name\": \"max\", \"type\": \"expression\", \"operation\": \"{max: .numbers | max_by(.x), min: .numbers | min_by(.y)}\" } ] In the previous example, an array of complex numbers (x is real coordinate and y is imaginary coordinate) is accepted and an expression function is defined to calculate the maximum value of x and minimum value of y for the numbers array. Also, the serverless-workflow-expression-quarkus example application contains an action data filter defined inside squareState action and a state data filter defined inside finish state. The action data filter selects the maximum value of x to be merged to the workflow model, and the state data filter defines the maximum value as the entire workflow model that is returned as the workflow response. The previous example expression also contains a max function of type expression and an operation property containing a string of jq expression. This jq expression returns a JSON object, in which the max property is the maximum value of the x coordinate and the min property is the minimum value of the y coordinate. Following is an action data filter in serverless-workflow-expression-quarkus example application: Example action data filter in serverless-workflow-expression-quarkus \"actions\": [ { \"name\": \"maxAction\", \"functionRef\": { \"refName\": \"max\" }, \"actionDataFilter\": { \"results\" : \".max.x\", \"toStateData\" : \".number\" } } ] In case the previous example of action data filter is not added in the serverless-workflow-expression-quarkus, then the entire JSON object returned by the function is merged into the workflow model. The previous action data filter contains the following properties: results, selecting the attribute from the data returned by the action. toStateData, indicating the name of the target property inside the workflow model. If the target property does not exist, then a target property is added. Therefore, after executing the action, the workflow model consists of a number property, containing the maximum value of x and the original numbers array. After that, the workflow transitions to the finish state. Example state data filter in serverless-workflow-expression-quarkus \"name\": \"finish\", \"type\": \"operation\", \"stateDataFilter\": { \"input\": \"{result: .number}\" } The original numbers array should not be returned as a result of the workflow execution, therefore the final stage consists of a state data filter defining the content of the output model. The output model should contain a result property and the value of result property should be the maximum number that is stored by the previous state in the number property. In the previous example, the workflow model is changed by the input property of the filter, which means that the output model is updated before the state is executed. As a final result, the output model consists of a result property, containing the maximum value of x. Event data filter example You can find an example of event data filtering in the serverless-workflow-callback-quarkus example application. Example event filter \"eventRef\": \"waitEvent\", \"eventDataFilter\": { \"data\": \".result\", \"toStateData\": \".move\" } The previous example of the event filter copies the content of CloudEvent data result field into the workflow model move field. Configuring the OpenAPI services endpoints If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"jq Expressions","component":"serverlessworkflow","version":"1.42.0.Final","name":"understanding-jq-expressions","url":"/serverlessworkflow/latest/core/understanding-jq-expressions.html","titles":[{"text":"Example of jq expressions in switch conditions","hash":"ref-example-jq-expression-switch-conditions","id":1},{"text":"Example of jq expressions in function arguments","hash":"ref-example-jq-expression-function-arguments","id":2},{"text":"Example of jq expressions in data filtering","hash":"ref-example-jq-expression-data-filtering","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"11":{"id":11,"text":"This document describes how you can handle the errors that might occur in Kogito Serverless Workflow. The Serverless Workflow specification provides an error handling mechanism, enabling you to handle the errors that might happen during the interactions between the workflow and external systems. When an error occurs, it changes the regular workflow sequence. In such cases, a workflow state transitions to an alternative state that can potentially handle the error, instead of transitioning to the predefined state. Note that error definition for a workflow is optional. If error handling is not defined, then the workflow execution is aborted when an error occurs. As a developer, you can consider the error handling in Kogito Serverless Workflow as a try-catch or a goto construct. An error definition in a workflow is composed of a name and code parameters. The name is a short and natural language description of an error, such as wrong parameter. The code parameter helps the implementation to identify the error. The code parameter is mandatory and the engine uses different strategies to map the provided value to an exception encountered at runtime. The available strategies include fully qualified class name, error message, and status code. Fully Qualified Class Name (FQCN) You can define the mapping as the fully qualified Java class name of an exception type. To determine if an exception is handled by an error definition, a workflow first checks whether or not the type of the Java exception is an instance of the exception that is specified in the error definition. Otherwise, the workflow recursively applies the same check to any embedded exception within the original Java one, till the exception chain is exhausted. Table 1. Runtime exception examples: Runtime exception Error code definition java.lang.RuntimeException java.lang.RuntimeException java.lang.IllegalStateException java.lang.RuntimeException Error message You can define the mapping as a partial match of the error message using regex patterns. A workflow verifies whether the message of the Java exception matches the value provided in the error code. The validation is performed using a regex matcher. The validation is successful if a partial match is found. Note that the validation is performed in a case-sensitive manner. If case-insensitive pattern matching is desired, use the embedded flag expression (?i) within the regular expression. Table 2. Error message examples: Error message of runtime exception Error code definition Unknown error, status code 400 Unknown error Unknown error, status code 400 (?i)Error or error Unknown error, status code 400 (.*)status code 4[0-9]{2} or status code 4[0-9]{2} Status code You can define the mapping as a status code returned by the invoked service. The external services return status codes in the event of a failure. For example, HTTP status codes are returned by REST or OpenAPI service invocations. In this case, the workflow verifies the defined error code against the HTTP code from the underlying response object. You can define the error code either as an HTTP code or as a colon-separated string, in which the error definition contains the error code in the last part. Table 3. Status code examples: HTTP status code Error code definition 400 400 400 HTTP:400 The workflow in the serverless-workflow-error-quarkus example application illustrate the usage of the error handling mechanism. Figure 1. Example of error handling The workflow accepts an integer number as the input model. When the workflow starts, it invokes the isEven Java service, which accepts that integer number as a parameter. This service throws an IllegalArgumentException exception if the integer number is odd. This means that if the integer number is even, the workflow transitions to the even state, however, if the integer number is odd, the workflow transitions to the odd state, resulting in a different model output. Example checkEven state { \"name\": \"checkEven\", \"type\": \"operation\", \"actions\": [ { \"name\": \"checkEvenAction\", \"functionRef\": { \"refName\": \"isEven\", \"arguments\": { \"number\": \"$.number\" } } } ], \"transition\": \"even\", \"onErrors\": [ { \"errorRef\": \"odd number\", \"transition\": \"odd\" } ] } The workflow defines a function that invokes the isEven method of org.kie.kogito.examples.EvenService class. This function uses a custom function type, enabling Kogito Serverless Workflow to invoke Java methods. Example isEven function definition { \"name\": \"isEven\", \"type\": \"custom\", \"operation\": \"service:java:org.kie.kogito.examples.EvenService::isEven\" } To handle the error, the workflow defines an odd number error which handles any runtime exception. As the IllegalArgumentException is a child of RuntimeException, if isEven method throws the exception, it will be handled. Example error definition \"errors\": [ { \"name\": \"odd number\", \"code\": \"java.lang.RuntimeException\" } ] The Inject state is used to populate the model with specific JSON payload. Therefore, the even and odd state defines the message property as even and odd respectively. { \"name\": \"even\", \"type\": \"inject\", \"data\": { \"numberType\": \"even\" }, \"transition\": \"finish\" }, { \"name\": \"odd\", \"type\": \"inject\", \"data\": { \"numberType\": \"odd\" }, \"transition\": \"finish\" } The finish state in the serverless-workflow-error-quarkus example application displays the model content to the console, so you can verify that the expected message has been set. { \"name\": \"finish\", \"type\": \"operation\", \"actions\": [ { \"name\": \"printAction\", \"functionRef\": { \"refName\": \"printMessage\", \"arguments\": { \"message\": \"$.numberType\" } } } ], \"end\": { \"terminate\": \"true\" } } Creating your first workflow service If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Error handling in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"understanding-workflow-error-handling","url":"/serverlessworkflow/latest/core/understanding-workflow-error-handling.html","titles":[{"text":"Error definition","hash":"con-error-definition","id":1},{"text":"Example of error handling","hash":"ref-example-error-handling","id":2},{"text":"Additional resources","hash":"_additional_resources","id":3},{"text":"Found an issue?","hash":"_found_an_issue","id":4}]},"12":{"id":12,"text":"This document describes the Callback state and related examples. The Callback state performs an action and waits for an event, to be produced as a result of the action, to resume the workflow. The action peformed by a Callback state is an asynchronous external service invocation. Therefore, the Callback state is suitable to perform fire&wait-for-result operations. From a workflow perspective, asynchronous service indicates that the control is returned to the caller immediately without waiting for the action to be completed. Once the action is completed, a CloudEvent is published to resume the workflow. For the workflow to identify the published CloudEvent it is waiting for, the external service developer includes the workflow instance ID in the CloudEvent header or uses the Event correlation. The following figure displays the process: The workflow correlation described in this document focuses on the former mechanism that is based on the fact that each workflow instance contains a unique identifier, which is generated automatically. To understand the Callback state, see the serverless-workflow-callback-quarkus example application in GitHub repository. The initial model of the serverless-workflow-callback-quarkus example application is empty. Once the workflow is started, it publishes a CloudEvent of the resume type and waits for a CloudEvent, which contains the type wait. A listener consumes the CloudEvent with the resume type and simulates the behavior of an external service. Consequently, on the external service side, when the actions associated with the resume type CloudEvent are completed, the listener publishes a wait type CloudEvent. Once the wait type CloudEvent is received, the workflow moves to the next state and ends successfully. To use the Callback state in a workflow, first CloudEvent types such as resume and wait are declared that the workflow uses. Following is an example of CloudEvents declaration in a workflow definition: Example of CloudEvents declaration in a workflow definition \"events\": [ { \"name\": \"resumeEvent\", \"source\": \"\", \"type\": \"resume\" }, { \"name\": \"waitEvent\", \"source\": \"\", \"type\": \"wait\" } ] After that, a Callback state is declared. The Callback state publishes a resume type CloudEvent and waits for a CloudEvent with wait type. The published CloudEvent contains a move data field, and the CloudEvent that is received is expected to contain a result data field. According to the eventDataFilter, the result data field is added to the workflow model as a move field. Following is an example of declaring a Callback state that handles the wait type CloudEvent: Example of a Callback State declaration handling the wait CloudEvent { \"name\": \"waitForEvent\", \"type\": \"callback\", \"action\": { \"name\": \"publishAction\", \"eventRef\": { \"triggerEventRef\": \"resumeEvent\", \"data\": \"{move: \\\"This is the initial data in the model\\\"}\" } }, \"eventRef\": \"waitEvent\", \"eventDataFilter\": { \"data\": \".result\", \"toStateData\": \".move\" }, \"transition\": \"finish\" } An event listener consumes the resume type CloudEvent and publishes a new wait type CloudEvent. Following is an example of a Java method that publishes the wait type CloudEvent: Example of a Java method that publishes the wait CloudEvent private String generateCloudEvent(String id, String input) { Map eventBody = new HashMap<>(); eventBody.put(\"result\", input + \" and has been modified by the event publisher\"); eventBody.put(\"dummyEventVariable\", \"This will be discarded by the process\"); try { return objectMapper.writeValueAsString(CloudEventBuilder.v1() .withId(UUID.randomUUID().toString()) .withSource(URI.create(\"\")) .withType(\"wait\") .withTime(OffsetDateTime.now()) .withExtension(CloudEventExtensionConstants.PROCESS_REFERENCE_ID, id) .withData(objectMapper.writeValueAsBytes(eventBody)) .build()); } catch (JsonProcessingException e) { throw new IllegalArgumentException(e); } } After that, the workflow application consumes the event published by the listener and sets the result field. The consumed CloudEvent contains an attribute named kogitoprocrefid, which holds the workflow instance ID of the workflow. The kogitoprocrefid attribute is crucial because when the correlation is not used, then this attribute is the only way for the Callback state to identify that the related CloudEvent needs to be used to resume the workflow. For more information about correlation, see Event correlation in Kogito Serverless Workflow. Note that each workflow is identified by a unique instance ID, which is automatically included in any published CloudEvent, as kogitoprocinstanceid CloudEvent extension. The following example shows that the event listener takes the workflow instance ID of a workflow from a CloudEvent attribute named kogitoprocinstanceid, which is associated with the CloudEvent that is consumed. Example of a Java method that consumes the resume CloudEvent @Incoming(\"in-resume\") @Outgoing(\"out-wait\") @Acknowledgment(Strategy.POST_PROCESSING) public String onEvent(Message message) { Optional ce = CloudEventUtils.decode(message.getPayload()); JsonCloudEventData cloudEventData = (JsonCloudEventData) ce.get().getData(); return generateCloudEvent(ce.get().getExtension(CloudEventExtensionConstants.PROCESS_INSTANCE_ID).toString(), cloudEventData.getNode().get(\"move\").asText()); } Apache Kafka configuration in serverless-workflow-callback-quarkus The serverless-workflow-callback-quarkus example application requires an external broker to manage the associated CloudEvents. The default setup in the serverless-workflow-callback-quarkus example application uses Apache Kafka. However, you can also use Knative Eventing. Apache Kafka uses topics to publish or consume messages. In the serverless-workflow-callback-quarkus example application, two topics are used, matching the name of the CloudEvent types that are defined in the workflow, such as resume and wait. The resume and wait CloudEvent types are configured in the application.properties file. For more information about using Apache Kafka with events, see Consuming and producing events using Apache Kafka. Creating your first workflow service Event correlation in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Callbacks in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"working-with-callbacks","url":"/serverlessworkflow/latest/core/working-with-callbacks.html","titles":[{"text":"Example of Callback state","hash":"ref-example-callback","id":1},{"text":"Additional resources","hash":"_additional_resources","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"13":{"id":13,"text":"This document describes how you can run parallel tasks in Kogito Serverless Workflow. The testing procedure described in this document is based on the serverless-workflow-service-calls-quarkus example application in GitHub repository. Kogito Serverless Workflow serializes the execution of parallel tasks. Therefore, the word \"parallel\" does not indicate simultaneous execution, but it means that there is no logical dependency between the execution of branches. An inactive branch can start or resume the execution of a task without waiting for an active branch to be completed, in case the latter suspends the execution (for example, wait for an event reception). The serverless-workflow-service-calls-quarkus example application is a workflow that concatenates three strings and returns a result. The concatenation in the example application is done in parallel, which includes one branch per three strings. You can create a workflow, which performs a series of parallel tasks. Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. Procedure Create a workflow file named as parallel.sw.json under the src/main/resources/ directory. Add the following content to the parallel.sw.json file: Example content for parallel.sw.json file { \"id\": \"parallel\", \"version\": \"1.0\", \"specVersion\": \"0.8\", \"name\": \"Welcome to the Parallel dimension\", \"description\": \"Testing parallelism\", \"start\": \"Parallel\", \"functions\": [ { \"name\": \"concatA\", \"type\": \"expression\", \"operation\": \".result|=.+\\\"A\\\"\" (1) }, { \"name\": \"concatB\", \"type\": \"expression\", \"operation\": \".result|=.+\\\"B\\\"\" (2) }, { \"name\": \"concatC\", \"type\": \"expression\", \"operation\": \".result|=.+\\\"C\\\"\" (3) } ], \"states\": [ { \"name\": \"Parallel\", \"type\": \"parallel\", (4) \"branches\": [ (5) { \"name\": \"branchA\", \"actions\": [ { \"functionRef\": \"concatA\" (6) } ] }, { \"name\": \"branchB\", \"actions\": [ { \"functionRef\": \"concatB\" (7) } ] }, { \"name\": \"branchC\", \"actions\": [ { \"functionRef\": \"concatC\" (8) } ] } ], \"completionType\": \"allOf\", (9) \"end\": { \"terminate\": true } } ] } 1 Function that concatenates the string A. 2 Function that concatenates the string B. 3 Function that concatenates the string C. 4 Defines the type of the state as parallel. 5 Defines the branches that run in parallel. 6 Defines the function that runs in branchA. 7 Defines the function that runs in branchB. 8 Defines the function that runs in branchC. 9 Defines the completion type of the parallel state as allOf. This means that the parallel state is completed when all the branches are completed. After you create a workflow that performs a series of parallel tasks, you can run the workflow. Prerequisites A parallel workflow is created. For more information, see Creating a parallel workflow. The workflow application is up and running. You can start the workflow application in development mode by using the following command: mvn quarkus:dev Procedure To run the created parallel workflow, send a request to the /parallel endpoint as shown in the following example request: Example request curl -X 'POST' \\ 'http://localhost:8080/parallel' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{}' Example response {\"id\":\"358f97ba-f0f9-4f25-86cc-4b35e85c2406\",\"workflowdata\":{\"result\":\"ABC\"}} The \"result\":\"ABC\" in the previous example response might be different in each request since the branches are running in parallel and the execution order of the branches is unpredictable. Note that the parallel workflow data shows the concatenated string as result. You can define the \"completionType\": \"atLeast\" to run only some branches in parallel workflow, instead of defining \"completionType\": \"allOf\". When you define \"completionType\": \"atLeast\", you also need to define the minimum number of branches that you want to run by defining the \"numCompleted\": property. Prerequisites A parallel workflow is created. For more information, see Creating a parallel workflow. Procedure Change the completionType property to \"atLeast\" and add the \"numCompleted\": 2 property to the parallel state. Example parallel workflow { \"id\": \"parallel\", \"version\": \"1.0\", \"specVersion\": \"0.8\", \"name\": \"Welcome to the Parallel dimension\", \"description\": \"Testing parallelism\", \"start\": \"Parallel\", \"functions\": [ { \"name\": \"concatA\", \"type\": \"expression\", \"operation\": \".result|=.+\\\"A\\\"\" }, { \"name\": \"concatB\", \"type\": \"expression\", \"operation\": \".result|=.+\\\"B\\\"\" }, { \"name\": \"concatC\", \"type\": \"expression\", \"operation\": \".result|=.+\\\"C\\\"\" } ], \"states\": [ { \"name\": \"Parallel\", \"type\": \"parallel\", \"branches\": [ { \"name\": \"branchA\", \"actions\": [ { \"functionRef\": \"concatA\" } ] }, { \"name\": \"branchB\", \"actions\": [ { \"functionRef\": \"concatB\" } ] }, { \"name\": \"branchC\", \"actions\": [ { \"functionRef\": \"concatC\" } ] } ], \"completionType\": \"atLeast\", (1) \"numCompleted\": \"2\", (2) \"end\": { \"terminate\": true } } ] } 1 Defines the completion type of the parallel state as atLeast. 2 Defines the minimum number of branches that you want to run. This means that the parallel state is completed when at least two branches are completed. To run the created parallel workflow, send a request to the /parallel endpoint as shown in the following example: Example request curl -X 'POST' \\ 'http://localhost:8080/parallel' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{}' Example response {\"id\":\"3da62df1-c4e7-48c9-a3e4-7f63872c92f4\",\"workflowdata\":{\"result\":\"BC\"}} The \"result\":\"BC\" in the response might be different in each request. The parallel workflow data shows the concatenated string as result, but in this case, the workflow concatenates only two letters. Creating your first workflow service If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Parallelism in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"working-with-parallelism","url":"/serverlessworkflow/latest/core/working-with-parallelism.html","titles":[{"text":"Creating a parallel workflow","hash":"proc-parallel-creating-the-workflow","id":1},{"text":"Running a parallel workflow","hash":"proc-parallel-run-workflow","id":2},{"text":"Running some branches in parallel workflow","hash":"proc-parallel-run-branches","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"14":{"id":14,"text":"In Kogito Serverless Workflow platform there is a dedicated supporting service that stores the data related to the workflow instances and their associated jobs called Data Index service. This service also provides a GraphQL endpoint allowing users to query that data and perform operations, also known as mutations in GraphQL terms. The data processed by the Data Index service is usually received via events. The events consumed can be generated by any workflow or the Job service itself. This event communication can be configured in different ways as described in the Data Index communication configuration section. The Data Index service uses Apache Kafka or Knative eventing to consume CloudEvents messages from workflows. The event data is indexed and stored in the database for querying via GraphQL. These events contain information about units of work executed for a workflow. The Data Index service is at the core of all Kogito Serverless Workflow search, insight, and management capabilities. The Kogito Serverless Workflow Data Index Service has the following key attributes: Flexible data structure Distributable and cloud-ready format Message-based communication with workflows (Apache Kafka, Knative, CloudEvents) Powerful querying API using GraphQL Management capabilities using the Gateway API, to perform actions using GraphQL syntax on remote runtimes with a single entrypoint The Kogito Serverless Workflow Data Index Service is a Quarkus application, based on Vert.x with Reactive Messaging, that exposes a GraphQL endpoint that client applications use to access indexed data and perform management operations related to running workflow instances. The indexing functionality in the Data Index service is provided by choosing one of the following persistence providers: PostgreSQL Infinispan MongoDB The Data Index Service has been thought of as an application to store and query the existing workflow data. The data comes contained in events. The service allows multiple connection options as described in the Data Index service communication configuration section. Data Index is distributed in different ways to allow deployment in different topologies, and depending on how the data is indexed. The following sections describe the different options of Data Index deployments. It can be deployed explicitly referencing the image, starting a separated service inside a container. See Data Index standalone. This type of deployment requires to choose the right image depending on the persistence, specify the database connection properties, and the event consumption configuration. It also can be deployed, transparently as a Quarkus Development Service when the Quarkus Dev mode is used in the Kogito Serverless Workflow application. When you use the Kogito Serverless Workflow Process Quarkus extension, a temporary Data Index Service is automatically provisioned while the Quarkus application is running in development mode and the Dev Service is set up for immediate use. More details are provided in the Data Index as a Quarkus Development service section. The Kogito Serverless Workflow Process Quarkus extension sets up your Quarkus application to automatically replicate any Kogito Serverless Workflow messaging events related to workflow instances or jobs into the provisioned Data Index instance. For more information about Quarkus Dev Services, see Dev Services guide. It can be included as part of the same Kogito Serverless Workflow application using the Data Index extension, through the provided addons. This scenario is specific to add the Data Index data indexing features and the GraphQL endpoint exposure inside a workflow application. The communication with the workflow where the extension is added, is something internal to the application, allowing to simplify the communication between services and avoiding extra configuration for that purpose. In this case, the indexation has some limitations: it is only able to index data from the workflows deployed in the same application. More details are available in the Data Index Quarkus Extension section. In order to store the indexed data, Data Index needs some specific tables to be created. Data Index is ready to use Quarkus flyway for that purpose. It’s necessary to activate the migrate-at-start option to migrate the Data Index schema automatically. For more details about Flyway migrations, see PostgreSQL Database Migration section Data Index provides GraphQL endpoint that allows users to interact with the stored data. For more information about GraphQL see GraphQL This guide provides as examples, some GraphQL queries that allow to retrieve data about workflow instances and jobs. Retrieve data from workflow instances You can retrieve data about a specified instance from your workflow definition. Example query { ProcessInstances { id processId state parentProcessInstanceId rootProcessId rootProcessInstanceId variables nodes { id name type } } } Retrieve data from jobs You can retrieve data from a specified job instance. Example query { Jobs { id status priority processId processInstanceId executionCounter } } Filter query results using the where parameter You can use the where parameter with multiple combinations to filter query results based on workflow attributes. Example query { ProcessInstances(where: {state: {equal: ACTIVE}}) { id processId processName start state variables } } Example query { ProcessInstances(where: {id: {equal: \"d43a56b6-fb11-4066-b689-d70386b9a375\"}}) { id processId processName start state variables } } By default, all filtered attributes are executed as AND operations in queries. You can modify this behavior by combining filters with an AND or OR operator. Example query { ProcessInstances(where: {or: {state: {equal: ACTIVE}, rootProcessId: {isNull: false}}}) { id processId processName start end state } } Example query { ProcessInstances(where: {and: {processId: {equal: \"travels\"}, or: {state: {equal: ACTIVE}, rootProcessId: {isNull: false}}}}) { id processId processName start end state } } Depending on the attribute type, the following operators are also available: String array argument: contains : String containsAll: Array of strings containsAny: Array of strings isNull: Boolean (true or false) String argument: in: Array of strings like: String isNull: Boolean (true or false) equal: String ID argument: in: Array of strings equal: String isNull: Boolean (true or false) Boolean argument: isNull: Boolean (true or false) equal: Boolean (true or false) Numeric argument: in: Array of integers isNull: Boolean equal: Integer greaterThan: Integer greaterThanEqual: Integer lessThan: Integer lessThanEqual: Integer between: Numeric range from: Integer to: Integer Date argument: isNull: Boolean (true or false) equal: Date time greaterThan: Date time greaterThanEqual: Date time lessThan: Date time lessThanEqual: Date time between: Date range from: Date time to: Date time Sort query results using the orderBy parameter You can use the orderBy parameter to sort query results based on workflow attributes. You can also specify the direction of sorting in ascending ASC order or descending DESC order. Multiple attributes are applied to the database query in the order they are specified in the query filter. Example query { ProcessInstances(where: {state: {equal: ACTIVE}}, orderBy: {start: ASC}) { id processId processName start end state } } Limit and offset query results using the pagination parameter You can use the pagination parameter to specify a limit and offset for query results. Example query { ProcessInstances(where: {state: {equal: ACTIVE}}, orderBy: {start: ASC}, pagination: {limit: 10, offset: 0}) { id processId processName start end state } } Data Index incorporates a set of queries or mutations that allow firing operations on workflow endpoints using GraphQL notation. The Data Index Gateway API enables you to perform the following operations: Abort a workflow instance Retrieves a workflow instance with the ID passed as a parameter and launches the abort operation on related Kogito Serverless Workflow service. Example mutation for abort operation mutation { ProcessInstanceAbort (id:\"66e05e9c-eaab-47af-a83e-156498b7096d\") } Retry a workflow instance Retrieves a workflow instance with the id passed as a parameter and launches the retry operation on related Kogito Serverless Workflow service. Example mutation for retry operation mutation { ProcessInstanceRetry (id:\"66e05e9c-eaab-47af-a83e-156498b7096d\") } Skip a workflow instance Retrieves a workflow instance with the ID passed as a parameter and launches the skip operation on related Kogito Serverless Workflow service. Example mutation for skip operation mutation { ProcessInstanceSkip (id:\"66e05e9c-eaab-47af-a83e-156498b7096d\") } Retrieve workflow instance nodes Retrieves the nodes of a workflow instance that are coming from the process definition. When the nodeDefinitions field of a workflow instance is queried, a call to a specific Kogito Serverless Workflow service is generated to retrieve the requested list of available nodes. Example query to retrieve workflow instance nodes {ProcessInstances(where: { id: {equal: \"1017afb1-5749-440e-8b9b-6b876bb5894d\"}}){ diagram }} Update workflow instance variables Updates the variables of a workflow instance using the id passed as a parameter. Retrieves a workflow instance using the id passed as a parameter and launches the update operation on related Kogito Serverless Workflow service with the new values passed in variables parameter. Example mutation to update workflow instance variables mutation { ProcessInstanceUpdateVariables (id:\"23147fcc-da82-43a2-a577-7a36b26094bd\", variables:\"{\\\"it_approval\\\":true,\\\"candidate\\\":{\\\"name\\\":\\\"Joe\\\",\\\"email\\\":\\\"jdoe@ts.com\\\",\\\"salary\\\":30000,\\\"skills\\\":\\\"java\\\"},\\\"hr_approval\\\":true}\") } Trigger a node instance Triggers a node instance using the node definition nodeId. The nodeId is included in the nodeInstances of a workflow instance using the id passed as parameter. Example mutation to trigger a node instance mutation{ NodeInstanceTrigger( id: \"9674e3ed-8c13-4c3f-870e-7465d9ca7ca7\", nodeId:\"_B8C4F63C-81AD-4291-9C1B-84967277EEF6\") } Retrigger a node instance Retriggers a node instance using the id, which is similar to nodeInstanceId related to a workflow instance. The id of the workflow instance is passed as a parameter. Example mutation to retrigger a node instance mutation{ NodeInstanceRetrigger( id: \"9674e3ed-8c13-4c3f-870e-7465d9ca7ca7\", nodeInstanceId:\"01756ba2-ac16-4cf1-9d74-154ae8f2df21\") } Cancel a node instance Cancels a node instance with the id, which is similar to nodeInstanceId related to a workflow instance. The id of the workflow instance is passed as a parameter. Example mutation to cancel a node instance mutation{ NodeInstanceCancel( id: \"9674e3ed-8c13-4c3f-870e-7465d9ca7ca7\", nodeInstanceId:\"01756ba2-ac16-4cf1-9d74-154ae8f2df21\") } To enable described management operations on workflow instances, make sure your project is configured to have the kogito-addons-quarkus-process-management dependency on its pom.xml file to have this management operations enabled, like: org.kie.kogito kogito-addons-quarkus-process-management Retrieve the workflow instance source file content Retrieves the workflow instance source file. When the source field of a workflow instance is queried, a call to a specific Kogito Serverless Workflow service is generated to retrieve the requested workflow instance source file content. Example query to retrieve a workflow instance source file content {ProcessInstances(where: { id: {equal: \"1017afb1-5749-440e-8b9b-6b876bb5894d\"}}){ source }} The workflow instance source field only will be available when kogito-addons-quarkus-source-files dependency is added on Kogito Serverless Workflow runtime service pom.xml file. org.kie.kogito kogito-addons-quarkus-source-files Reschedule a job Reschedules a job using the id. The job id and other information are passed in the data parameter. Example mutation to reschedule a job mutation{ JobReschedule( id: \"9674e3ed-8c13-4c3f-870e-7465d9ca7ca7\", data:\"{\\\"expirationTime\\\": \\\"2033-06-27T04:35:54.631Z\\\",\\\"retries\\\": 2}\") } Cancel a job Cancels a job using the id passed as a parameter. Example mutation to cancel a job mutation{ JobCancel( id: \"9674e3ed-8c13-4c3f-870e-7465d9ca7ca7\") } Data Index GraphQL UI is provided to interact with GraphQL endpoint. When the Data Index is deployed as a standalone service, this UI will be available at /graphiql/ endpoint (i.e: at http://localhost:8180/graphiql/) To have the GraphQL UI available when the Data Index extension is deployed the property quarkus.kogito.data-index.graphql.ui.always-include needs to be enabled. It will be accessible at: /graphql-ui/ (i.e: http://localhost:8080/q/graphql-ui/) The quarkus.http.root-path' and `quarkus.http.non-application-root-path belong to the workflow application where the Data Index extension has been added. Here there are more details about those properties and their default values. In order to index the data, Data Index allows multiple connection options to be able to consume the information provided by the different workflows. The final goal is to receive the application-generated data related to the workflow instances and jobs. The information that comes inside events, is indexed and stored in the database allowing it to be consumed through the provided GraphQL endpoint. In order to interact with the Data Index separated service, use the Knative eventing system eventing: Add the Data Index service and deployment, defining the Database connection properties and setting the KOGITO_DATA_INDEX_QUARKUS_PROFILE to http-events-support. Specify the Knative Triggers to filter the Data Index events. Example DataIndex resource with triggers definition (requires Knative): apiVersion: eventing.knative.dev/v1 kind: Trigger metadata: name: data-index-service-postgresql-processes-trigger spec: broker: default filter: attributes: type: ProcessInstanceEvent subscriber: ref: apiVersion: v1 kind: Service name: data-index-service-postgresql uri: /processes --- apiVersion: eventing.knative.dev/v1 kind: Trigger metadata: name: data-index-service-postgresql-jobs-trigger spec: broker: default filter: attributes: type: JobEvent subscriber: ref: apiVersion: v1 kind: Service name: data-index-service-postgresql uri: /jobs Configure the workflow to use the K_SINK as outgoing connection url Example of configuration in Kogito Serverless Workflow application application.properties file to communicate with Knative mp.messaging.outgoing.kogito-processinstances-events.connector=quarkus-http mp.messaging.outgoing.kogito-processinstances-events.url=${K_SINK} mp.messaging.outgoing.kogito-processinstances-events.method=POST Job service needs also to be configured to send the events to the Knative K_SINK to have them available for Data Index related triggers. To configure the communication between the Data Index Service and the workflow through Kafka, you must provide a set of configurations. Add the Data Index service and deployment, defining the Database connection properties and setting the KOGITO_DATA_INDEX_QUARKUS_PROFILE to kafka-events-support (this value is set by default). Configure the Kogito Serverless Workflow application to use the smallrye-kafka connector and the expected topic. Example of configuration in Kogito Serverless Workflow application application.properties file to communicate with Kafka mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer Job service is configured to send the JobEvents to the kafka topic kogito-jobs-events to have them available for Data Index consumption. When Data Index functionality is added as a Quarkus extension to the workflow, there is no event configuration. In this case, the data indexation is done internally, and all interactions are through the Data Index Gateway API. Consuming and producing events using Apache Kafka in Quarkus Consuming and producing events on Knative Eventing in Quarkus Timeouts Showcase in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Data Index Core Concepts","component":"serverlessworkflow","version":"1.42.0.Final","name":"data-index-core-concepts","url":"/serverlessworkflow/latest/data-index/data-index-core-concepts.html","titles":[{"text":"Data Index service in Kogito Serverless Workflow","hash":"_data_index_service_in_kogito_serverless_workflow","id":1},{"text":"Data Index scenarios","hash":"data-index-deployments","id":2},{"text":"Data Index as a standalone service","hash":"_data_index_as_a_standalone_service","id":3},{"text":"Data Index service as Quarkus Development service","hash":"data-index-dev-service","id":4},{"text":"Data Index service as Quarkus extension","hash":"_data_index_service_as_quarkus_extension","id":5},{"text":"Data Index storage","hash":"data-index-storage","id":6},{"text":"Data Index GraphQL endpoint","hash":"data-index-graphql","id":7},{"text":"GraphQL queries for workflow instances and jobs","hash":"data-index-ext-queries","id":8},{"text":"Data Index service Gateway API","hash":"data-index-gateway-api","id":9},{"text":"Data Index GraphQL UI","hash":"data-index-graphql-ui","id":10},{"text":"Data Index service communication configuration","hash":"data-index-service-communication","id":11},{"text":"Knative Eventing","hash":"_knative_eventing","id":12},{"text":"Kafka eventing","hash":"_kafka_eventing","id":13},{"text":"Data Index Quarkus extension and Jobs embedded addon","hash":"_data_index_quarkus_extension_and_jobs_embedded_addon","id":14},{"text":"Additional resources","hash":"_additional_resources","id":15},{"text":"Found an issue?","hash":"_found_an_issue","id":16}]},"15":{"id":15,"text":"This document describes how you add the Data Index features to your workflow. You simply need to add the Data Index extension to the workflow and the related data will be collected and stored in the database, enabling the GraphQL endpoint to execute queries and perform management operations over the process instances. The example described in this document is based on the serverless-workflow-timeouts_showcase_embedded example application. The Data Index service has been designed to store and manage data from different workflow instances. Communication with the service is through events that contain the workflows related data and the service is responsible for storing them and exposing a GraphQL endpoint to allow queries and maintenance operations on the different workflow instances. In specific use cases, to avoid deploying the service separately, it could be useful to have the indexing functionality and the query capabilities embedded in the same application. For this purpose, the Quarkus Data Index extension can be added to any workflow application and incorporates the Data Index functionality into the same application without needing an external Data Index service. These extensions are distributed as addons ready to work with different types of persistence: kogito-addons-quarkus-data-index-inmemory (inmemory PostgreSQL) kogito-addons-quarkus-data-index-postgresql kogito-addons-quarkus-data-index-infinispan kogito-addons-quarkus-data-index-mongodb The Data Index extensions are provided as addons for each kind of supported persistence relying on the Quarkus extensions mechanism. Once one of these kogito-addons-quarkus-data-index addons is added to a workflow, it incorporates the functionality to index and store the workflow data and also incorporates the GraphQL endpoint to perform queries and management operations. In the same way as the Data Index service, there is a specific addon for each type of persistence you want to work with. Currently, you can find Data Index addons for: PostgreSQL, Infinispan, and MongoDB The Data Index addon distribution added to the workflow must match the workflow’s persistence type regarding the indexed data, which can be stored in the same database. The addon will share the data source used by the workflow where it is added, and it will create separate tables for that purpose. When any of the Data Index addons is added: The communication with the workflow is direct, the workflow data is not transmitted or consumed through events, they are stored directly in the configured database. There is no need to configure the events connection for this purpose. A new GraphQL endpoint is added to perform queries and management operations You can add the Data Index quarkus extension as an addon: Prerequisites Your workflow is running and has persistence enabled. For more information about creating a workflow, see Creating your first workflow. You also can find more details about enabling persistence in Running a workflow using PostgreSQL Procedure Add the required Data Index addon dependencies to the pom.xml file of your workflow: Add Data Index Addon dependencies to pom.xml file org.kie.kogito kogito-addons-quarkus-data-index-postgresql Configure the Data Index Addon properties. Prepare the workflow to run in dev mode, avoid starting the Data Index Quarkus Dev service, and specify if the GraphQL UI needs to be available. Example adding Data Index addon properties in application.properties file quarkus.kogito.devservices.enabled=false (1) quarkus.kogito.data-index.graphql.ui.always-include=true (2) 1 By default, when a workflow is running in dev mode, automatically a Data Index Dev Service is started and a temporary dev service Database is created. When adding the addon to the workflow, you need to disable it by setting quarkus.kogito.devservices.enabled to false in the application.properties file. 2 The addon allows to expose a simple UI to interact with the GraphQL endpoint, it only will be available when this property is set to true, and it will be placed in '/graphql-ui/` For more information, see application.properties file of serverless-timeouts_showcase_embedded example application. Creating a Quarkus Workflow Project Running a Quarkus Workflow Application using PostgreSQL Data Index Core Concepts If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Data Index Quarkus extension","component":"serverlessworkflow","version":"1.42.0.Final","name":"data-index-quarkus-extension","url":"/serverlessworkflow/latest/data-index/data-index-quarkus-extension.html","titles":[{"text":"Overview","hash":"data-index-ext-overview","id":1},{"text":"Adding Data Index extension to a workflow application","hash":"data-index-ext-use","id":2},{"text":"Additional resources","hash":"_additional_resources","id":3},{"text":"Found an issue?","hash":"_found_an_issue","id":4}]},"16":{"id":16,"text":"Data Index service can be deployed referencing directly a distributed Data Index image. There are different images provided that take into account what persistence layer is required in each case. In each distribution, there are some properties to configure things like the connection with the database or the communication with other services. The goal is to configure the container to allow to process ProcessInstances and Jobs events that incorporate their related data, to index and store that in the database and finally, to provide the Data Index GraphQL endpoint to consume it. Data Index service can be deployed referencing directly a distributed Data Index image. Here there are the different Data Index image distributions that can be found in Quay.io/kiegroup: There are several ways to deploy the Data Index service. But there are some common points in all the deployments: Reference the right Data Index image to match with the type of Database that will store the indexed data. Provide the database connection properties, to allow data index store the indexed data. Data Index service does not initialize its database schema automatically. To initialize the database schema, you need to enable Flyway migration by setting QUARKUS_FLYWAY_MIGRATE_AT_START=true. Define the KOGITO_DATA_INDEX_QUARKUS_PROFILE to set the way that the events will be connected (by default: kafka-event-support). Here you can see in example, how the Data Index resource definition can be deployed as part of a docker-compose definition Example of DataIndex resource in a docker-compose deployment using Kafka eventing: data-index: container_name: data-index image: quay.io/kiegroup/kogito-data-index-postgresql:latest (1) ports: - \"8180:8080\" depends_on: postgres: condition: service_healthy volumes: - ./../target/classes/META-INF/resources/persistence/protobuf:/home/kogito/data/protobufs/ environment: QUARKUS_DATASOURCE_JDBC_URL: \"jdbc:postgresql://postgres:5432/kogito\" (2) QUARKUS_DATASOURCE_USERNAME: kogito-user QUARKUS_DATASOURCE_PASSWORD: kogito-pass QUARKUS_HTTP_CORS_ORIGINS: \"/.*/\" KOGITO_DATA_INDEX_QUARKUS_PROFILE: kafka-events-support (3) QUARKUS_FLYWAY_MIGRATE_AT_START: \"true\" (4) QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: update 1 Reference the right Data Index image to match with the type of Database, in this case quay.io/kiegroup/kogito-data-index-postgresql:latest 2 Provide the database connection properties. 3 When KOGITO_DATA_INDEX_QUARKUS_PROFILE is not present, the Data Index is configured to use Kafka eventing. 4 To initialize the database schema at start using flyway. When Kafka eventing is used, workflow applications need to be configured to send the events to the Kafka topic kogito-processinstances-events allowing Data Index service to consume the generated events. In this case Data Index is ready to consume the events sent to the topics: kogito-processinstances-events and kogito-jobs-events. It is important to configure the workflows application to send the events to the topic kogito-processinstances-events using the connector smallrye-kafka. More information about how to configure workflows Kafka eventing is available in Consuming and producing events using Apache Kafka in Quarkus guide. To explore the specific configuration to add to the workflow to connect with Data Index using Kafka eventing see Data Index Kafka eventing Example of configuration in Kogito Serverless Workflow application passed in application.properties to configure connection with Data Index using Kafka connector: mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer Usually, when using docker-compose the workflow application generates the container image that is added to docker-compose. If the Kafka eventing configuration values weren’t there before the container image creation, they need to be passed as environment variables. More details about customizing Quarkus generated images can be found in Quarkus Container Images Customizing guide. This deployment definition resource shows how the Data Index service configured and deployed can connect with an existing PostgreSQL database and to consume Knative events. Example DataIndex resource with PostgreSQL persistence and Knative eventing in a kubernetes environment : apiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/name: data-index-service-postgresql app.kubernetes.io/version: 2.0.0-SNAPSHOT name: data-index-service-postgresql spec: ports: - name: http port: 80 targetPort: 8080 selector: app.kubernetes.io/name: data-index-service-postgresql app.kubernetes.io/version: 2.0.0-SNAPSHOT type: ClusterIP --- apiVersion: apps/v1 kind: Deployment metadata: labels: app.kubernetes.io/name: data-index-service-postgresql app.kubernetes.io/version: 2.0.0-SNAPSHOT name: data-index-service-postgresql spec: replicas: 1 selector: matchLabels: app.kubernetes.io/name: data-index-service-postgresql app.kubernetes.io/version: 2.0.0-SNAPSHOT template: metadata: labels: app.kubernetes.io/name: data-index-service-postgresql app.kubernetes.io/version: 2.0.0-SNAPSHOT spec: containers: - name: data-index-service-postgresql image: quay.io/kiegroup/kogito-data-index-postgresql:latest (1) imagePullPolicy: Always ports: - containerPort: 8080 name: http protocol: TCP env: - name: KUBERNETES_NAMESPACE valueFrom: fieldRef: fieldPath: metadata.namespace - name: QUARKUS_DATASOURCE_USERNAME (2) value: postgres - name: QUARKUS_DATASOURCE_PASSWORD value: pass - name: QUARKUS_DATASOURCE_JDBC_URL value: jdbc:postgresql://newsletter-postgres:5432/postgres?currentSchema=data-index-service - name: QUARKUS_DATASOURCE_DB_KIND value: postgresql - name: QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION value: update - name: QUARKUS_KAFKA_HEALTH_ENABLE value: \"false\" - name: QUARKUS_HTTP_CORS value: \"true\" - name: QUARKUS_HTTP_CORS_ORIGINS value: /.*/ - name: QUARKUS_FLYWAY_MIGRATE_AT_START (4) value: \"true\" - name: KOGITO_DATA_INDEX_QUARKUS_PROFILE (3) value: \"http-events-support\" - name: QUARKUS_HTTP_PORT value: \"8080\" --- apiVersion: eventing.knative.dev/v1 kind: Trigger (5) metadata: name: data-index-service-postgresql-processes-trigger spec: broker: default filter: attributes: type: ProcessInstanceEvent (6) subscriber: ref: apiVersion: v1 kind: Service name: data-index-service-postgresql uri: /processes (7) --- apiVersion: eventing.knative.dev/v1 kind: Trigger (5) metadata: name: data-index-service-postgresql-jobs-trigger spec: broker: default filter: attributes: type: JobEvent (6) subscriber: ref: apiVersion: v1 kind: Service name: data-index-service-postgresql uri: /jobs (7) 1 Reference the right Data Index image to match with the type of Database, in this case quay.io/kiegroup/kogito-data-index-postgresql:latest 2 Provide the database connection properties 3 KOGITO_DATA_INDEX_QUARKUS_PROFILE: http-events-support to use the http-connector with Knative eventing. 4 To initialize the database schema at start using flyway 5 Trigger definition to filter the events that arrive to the Sink and pass them to Data Index 6 Type of event to filter 7 The URI where the Data Index service is expecting to consume those types of events. This deployment is using KOGITO_DATA_INDEX_QUARKUS_PROFILE: http-events-support. Workflow applications need to configure the connector to use quarkus-http and send the events to the Knative K_SINK. You can find more information about Knative eventing and K_SINK environment variable in Consuming and producing events on Knative Eventing in Quarkus To explore the specific configuration to add to the workflow to connect with Data Index using Knative eventing see Data Index Knative eventing Example of configuration in Kogito Serverless Workflow application application.properties file to send events to Data Index using Knative eventing mp.messaging.outgoing.kogito-processinstances-events.connector=quarkus-http mp.messaging.outgoing.kogito-processinstances-events.url=${K_SINK} mp.messaging.outgoing.kogito-processinstances-events.method=POST If that configuration values weren’t there before the container image creation, they need to be passed as environment variables. More details about customizing Quarkus generated images can be found in Quarkus Container Images Customizing guide. A full example where the Data Index service standalone is deployed using Knative eventing can be found as part of Quarkus Workflow Project with standalone services guide. When you use the Kogito Serverless Workflow Process Quarkus extension, a temporary Data Index service is automatically provisioned while the Quarkus application is running in development mode. When you use one of the following Quarkus extensions, the Dev Service is set up for immediate use: Kogito Serverless Workflow main Quarkus extension org.kie.kogito kogito-quarkus Kogito Serverless Workflow Quarkus extension org.kie.kogito kogito-quarkus-serverless-workflow When you start your Quarkus project in development mode, an in-memory instance of the Data Index service is automatically started in the background. This feature is enabled by Quarkus Dev Services, and leverages Testcontainers to start an image of the Data Index service. The Kogito Serverless Workflow Process Quarkus extension sets up your Quarkus application to automatically replicate any Kogito Serverless Workflow messaging events related to process instances or jobs into the provisioned Data Index instance. Once the service is up and running, you can query the GraphQL interface directly using http://localhost:8180/graphql or using the Quarkus Dev UI console http://localhost:8080/q/dev. The Data Index GraphQL endpoint can query for ProcessInstances and Jobs. For more information about operations and attributes to query, see GraphQL endpoint provided by Data Index section. You can share the same Data Index instance across multiple Kogito Serverless Workflow services during development. Sharing Data Index instances is enabled by default, therefore, only one Data Index instance is started. This behavior can be adjusted to start multiple instances using the quarkus.kogito.devservices.shared property. The Quarkus Dev Service also allows further configuration options including: To disable Data Index Dev Service, use the quarkus.kogito.devservices.enabled=false property. To change the port where the Data Index Dev Service runs, use the quarkus.kogito.devservices.port=8180 property. To adjust the provisioned image, use quarkus.kogito.devservices.imageName=quay.io/kiegroup/kogito-data-index-ephemeral property. To disable sharing the Data Index instance across multiple Quarkus applications, use quarkus.kogito.devservices.shared=false property. For more information about Quarkus Dev Services, see Dev Services guide. The following table serves as a quick reference for commonly Data Index configuration properties supported. Table 1. Common configuration properties Property Description Type Default value Override at runtime QUARKUS_DATASOURCE_JDBC_URL The datasource URL string Yes QUARKUS_DATASOURCE_USERNAME The datasource username string Yes QUARKUS_DATASOURCE_PASSWORD The datasource password string Yes QUARKUS_DATASOURCE_DB_KIND The kind of database to connect: postgresql,.. string Yes QUARKUS_FLYWAY_MIGRATE_AT_START true to execute Flyway automatically when the application starts, false otherwise. boolean false Yes KOGITO_DATA_INDEX_QUARKUS_PROFILE (Only when referencing an image distribution) Allows to change the event connection type. The possible values are: kafka-events-support http-events-support string kafka-events-support Yes kogito.persistence.query.timeout.millis Defines timeout for a query execution. long 10000 Yes quarkus.kogito.devservices.enabled Enables or disables the Dev Services for workflows. By default, the Dev Services are enabled, unless an existing configuration is present. boolean true No quarkus.kogito.devservices.port Defines the optional fixed port that the Dev Services listen to. int 8180 No quarkus.kogito.devservices.image-name Defines the Data Index image to use in Dev Service. string quay.io/kiegroup/kogito-data-index-ephemeral:1.42.0.Final No quarkus.kogito.devservices.shared Indicates if the Data Index instance, which is managed by Quarkus Dev Services, is shared. boolean true No quarkus.kogito.devservices.service-name Defines the value of the label that is attached to the started container. This property is used when shared is set to true. string kogito-data-index No Data Index Core Concepts Deploying your Kogito Serverless Workflow application on Minikube Consuming and producing events using Apache Kafka in Quarkus Consuming and producing events on Knative Eventing in Quarkus Timeout example in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Data Index standalone service","component":"serverlessworkflow","version":"1.42.0.Final","name":"data-index-service","url":"/serverlessworkflow/latest/data-index/data-index-service.html","titles":[{"text":"Data Index service deployment.","hash":"data-index-service","id":1},{"text":"Data Index distributions","hash":"data-index-service-distributions","id":2},{"text":"Data Index standalone service deployment","hash":"_data_index_standalone_service_deployment","id":3},{"text":"Data Index deployment resource example using Kafka eventing:","hash":"_data_index_deployment_resource_example_using_kafka_eventing","id":4},{"text":"Data Index deployment resource example using Knative eventing:","hash":"_data_index_deployment_resource_example_using_knative_eventing","id":5},{"text":"Data Index as a Quarkus Development service","hash":"data-index-dev-service-details","id":6},{"text":"Data Index service configuration properties","hash":"data-index-service-configuration-properties","id":7},{"text":"Additional resources","hash":"_additional_resources","id":8},{"text":"Found an issue?","hash":"_found_an_issue","id":9}]},"17":{"id":17,"text":"This document describes how you can configure a workflow to interact with Knative Eventing. Knative Eventing abstracts the events consumption through event source and sink components. An event source is a Kubernetes object that produces the event, and a sink is another Kubernetes object that receives the event. The workflow application can act as a source, a sink, or both in Knative Eventing platform. You need to add the Kogito Knative Eventing add-on dependency to indicate that you are using Knative Eventing. To enable a workflow to use Knative Eventing, add the following dependency to the pom.xml file of your project: Apache Maven Quarkus CLI Manually mvn quarkus:add-extension -Dextensions=\"kogito-addons-quarkus-knative-eventing\" quarkus extension add kogito-addons-quarkus-knative-eventing org.kie.kogito kogito-addons-quarkus-knative-eventing If you have used the Knative workflow CLI to create your project, then the Kogito Knative Eventing extension is already present. For more information about creating a project using Knative workflow CLI, see Kogito Serverless Workflow plug-in for Knative CLI. The Kogito Knative Eventing add-on takes care of the required dependencies and additional configuration that the workflow application needs, to interact with the Knative Eventing platform. Although the default configuration that the Quarkus Knative Eventing add-on provides ought to be enough for most of the use cases, sometimes you might need to do additional configuration to serve a specific scenario. The configuration described in this section is useful if your workflow consists of at least one produced type event definition. In this scenario, the workflow application produces events that act as a Knative source. HTTP transport configuration Knative injects the K_SINK environment variable in the workflow application when you deploy the application in the cluster. Kogito Serverless Workflow uses the K_SINK environment variable to address the produced events to the correct Knative sink. For more information, see SinkBinding in Knative Eventing documentation. The following table lists the HTTP transport configuration properties: Table 1. HTTP transport configuration properties Property Default value Description mp.messaging.outgoing.kogito_outgoing_stream.url ${K_SINK:http://localhost:9090} This property indicates where to POST the HTTP CloudEvent message. mp.messaging.outgoing.kogito_outgoing_stream.connector quarkus-http This property indicates the Quarkus Smallrye channel implementation. You might not need to change this property. If the K_SINK variable is not present, then the default value is http://localhost:9000. You can override the default value in development environments. Health check configuration By default, the workflow application generates a health check probe to verify if the Knative platform injected a valid K_SINK variable. If the K_SINK variable is not present, then the pod is not in the state of receiving requests. The following table lists the health check probe configuration property: Table 2. Health check probe configuration property Property Default value Description org.kie.kogito.addons.knative.eventing.health_enabled true This property indicates if the health check is enabled to verify that the K_SINK variable is injected into the environment. Knative target sink generation configuration The Kogito Knative Eventing add-on generates a few Knative objects during build time. By default, the add-on generates a Knative Broker named default if the workflow application is acting as an event source. The following table lists the configuration properties related to Knative sink generation: Table 3. Knative sink generation configuration properties Property Default value Description org.kie.kogito.addons.knative.eventing.auto_generate_broker true This property indicates if the Kogito Knative Eventing add-on generates a default Knative Broker in memory to sink and dispatch the messages. Set this property to false in case a broker is already installed in your namespace. Note that you can use org.kie.kogito.addons.knative.eventing.sink.* property to configure your custom sink. If this property is not set, then the auto-generated broker works as a sink. org.kie.kogito.addons.knative.eventing.sink.namespace This property indicates the namespace where the generated Knative sink is deployed. org.kie.kogito.addons.knative.eventing.sink.api_version eventing.knative.dev/v1 This property indicates the API group and version of the generated Knative sink. org.kie.kogito.addons.knative.eventing.sink.name default This property indicates the name of the generated Knative sink. org.kie.kogito.addons.knative.eventing.sink.kind Broker This property indicates the Kubernetes kind of the generated Knative sink. The configuration described in this section is useful if your workflow consists of at least one consumed type event definition. In this scenario, the workflow application consumes events, acting as a Knative sink. When the workflow application needs to consume events, the Knative Eventing add-on generates Knative triggers. The Knative triggers are configured to listen to a broker with the required event type, which is defined in your workflow definition. The following table lists the configuration property related to Knative sink generation: Table 4. Knative sink generation configuration property Property Default value Description org.kie.kogito.addons.knative.eventing.broker default This property indicates the name of the default Knative broker that is deployed in the Kubernetes namespace. This broker is used as the reference to create the Knative triggers, which are responsible to delegate the events that the workflow service consumes. mp.messaging.incoming.kogito_incoming_stream.path / (root path) This property indicates the HTTP path where the workflow application will listen for the CloudEvents in the default incoming channel. mp.messaging.incoming..path / (root path) This property indicates the HTTP path where the workflow application will listen for the CloudEvents in the specific given channel name. The channel name is the event type as defined in the Serverless Workflow events definition. You can send HTTP CloudEvents to the workflow application endpoint by using any tool that’s capable to produce HTTP requests. The only requirement is that the request conforms to the CloudEvents specification. For example, with the help of curl, you can send an event to the workflow using the following command: Sending a CloudEvent over HTTP using the structured format. curl -X POST \\ -H 'Content-Type: application/cloudevents+json' \\ -d '{\"datacontenttype\": \"application/json\", \"specversion\":\"1.0\",\"id\":\"41495513-a9ef-4a81-8479-21bb14db61f0\",\"source\":\"/local/curl\",\"type\":\"kogito.serverless.loanbroker.aggregated.quotes.response\",\"data\": { \"amount\": 300000, \"term\": 30, \"credit\": { \"score\": 700, \"history\": 15 }, \"quotes\": [{ \"bankId\": \"Bank1\", \"rate\": 12.2 }, {\"bankId\": \"Bank2\", \"rate\": 10}] } } ' \\ http://localhost:8080 In this example we are using the CloudEvents structured format, which includes every event information within the request payload. Note the header Content-Type being application/cloudevents+json. Alternatively, you can use the CloudEvents binary format, which includes the event metadata in the HTTP header. For example, using the same event as before: Sending a CloudEvent over HTTP using the binary format. curl -X POST -i \\ -H 'Content-Type: application/json' \\ -H 'ce-specversion: 1.0' \\ -H 'ce-id: 41495513-a9ef-4a81-8479-21bb14db61f0' \\ -H 'ce-source: /local/curl' \\ -H 'ce-type: kogito.serverless.loanbroker.aggregated.quotes.response' \\ -d '{ \"amount\": 300000, \"term\": 30, \"credit\": { \"score\": 700, \"history\": 15 }, \"quotes\": [{ \"bankId\": \"Bank1\", \"rate\": 12.2 }, {\"bankId\": \"Bank2\", \"rate\": 10}] }' \\ http://localhost:8080/ You can use this tool to test your Kogito Serverless Workflow application locally and verify if the events are being consumed correctly by the workflow. For more information about testing incoming and outgoing CloudEvents over HTTP, see Mocking HTTP CloudEvents sink using WireMock. Kogito Serverless Workflow can generate Knative objects during the workflow application build time to facilitate the deployment in a Kubernetes cluster. However, you do not need to use the generated objects if you plan to create and deploy the Knative objects by yourself. Prerequisites A workflow application with the Knative Eventing add-on is created. Procedure Add the following Quarkus Kubernetes extension dependency to the pom.xml file of your project: Apache Maven Quarkus CLI Manually mvn quarkus:add-extension -Dextensions=\"quarkus-kubernetes,quarkus-container-image-jib\" quarkus extension add quarkus-kubernetes quarkus-container-image-jib io.quarkus quarkus-kubernetes io.quarkus quarkus-container-image-jib Add the quarkus.kubernetes.deployment-target=knative property to your application.properties file. Build your workflow application using the following command: Apache Maven Quarkus CLI Knative CLI mvn clean install quarkus build kn workflow build --image= The target/kubernetes directory contains two files including knative.yml and kogito.yml. The knative.yml file contains the Knative service representing the workflow application. The kogito.yml file contains the required objects to connect the workflow application to the Knative Eventing platform. You can use the generated files to deploy the workflow application in the Kubernetes cluster using the following command: Kubernetes command line tool Knative CLI kubectl apply -f target/kogito.yml kubectl apply -f target/knative.yml kn workflow deploy For more information about building and deploying the workflow application, see Building workflow images using Quarkus CLI. A workflow must contain at least one event definition for the Knative Eventing add-on to generate the event binding objects. The following is an example of a workflow containing produced and consumed events: Example of a workflow with produced and consumed events { \"events\": [ { \"name\": \"requestQuote\", \"type\": \"kogito.sw.request.quote\", \"kind\": \"produced\" }, { \"name\": \"aggregatedQuotesResponse\", \"type\": \"kogito.loanbroker.aggregated.quotes.response\", \"kind\": \"consumed\", \"source\": \"/kogito/serverless/loanbroker/aggregator\" }] } A workflow application with events definition needs a Knative SinkBinding to configure the target sink. The target sink is where the produced events (kogito.sw.request.quote event in the previous example) are dispatched. In this case, the Knative Eventing add-on generates an object as shown in the following example: Example of a Knative SinkBinding generated by the add-on apiVersion: sources.knative.dev/v1 kind: SinkBinding metadata: name: sb-loanbroker-flow spec: sink: ref: apiVersion: eventing.knative.dev/v1 kind: Broker name: default namespace: \"\" subject: apiVersion: serving.knative.dev/v1 kind: Service name: loanbroker-flow Regardless of the number of produced events in the workflow definition, only one SinkBinding is generated. When you define multiple events, ensure that your sink is a Knative Broker. The listener services can configure the subscriptions or triggers to consume the events from the broker. For the kogito.loanbroker.aggregated.quotes.response event in a previous example, the Knative Eventing platform must be configured with a Knative trigger using an appropriate CloudEvent filter. The following example shows the Trigger generated by the Knative Eventing add-on: Example of a Knative Trigger generated by the add-on apiVersion: eventing.knative.dev/v1 kind: Trigger metadata: name: kogito-serverless-loanbroker-aggregated-quotes-response-trigger spec: broker: default filter: attributes: type: kogito.loanbroker.aggregated.quotes.response subscriber: ref: apiVersion: serving.knative.dev/v1 kind: Service name: loanbroker-flow For each consumed event definition, the Knative Eventing add-on generates one Knative Trigger. Mocking HTTP CloudEvents sink using WireMock Consuming and producing events using Apache Kafka Event correlation in Kogito Serverless Workflow Callback state in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Consuming and producing events on Knative Eventing in Quarkus","component":"serverlessworkflow","version":"1.42.0.Final","name":"consume-produce-events-with-knative-eventing","url":"/serverlessworkflow/latest/eventing/consume-produce-events-with-knative-eventing.html","titles":[{"text":"Knative Eventing add-on source configuration","hash":"ref-knative-eventing-add-on-source-configuration","id":1},{"text":"Knative Eventing add-on sink configuration","hash":"ref-knative-eventing-add-on-sink-configuration","id":2},{"text":"Manually sending events to an HTTP endpoint","hash":"proc-manually-sending-events-to-an-http-endpoint","id":3},{"text":"Generating Knative objects during build time","hash":"proc-generating-kn-objects-build-time","id":4},{"text":"Example of workflow event definition in Knative","hash":"ref-example-sw-event-definition-knative","id":5},{"text":"Additional resources","hash":"_additional_resources","id":6},{"text":"Found an issue?","hash":"_found_an_issue","id":7}]},"18":{"id":18,"text":"This document describes how you can configure a workflow to interact with Apache Kafka. Apache Kafka uses an abstraction called topic to classify events. Events are published to a topic, and events are consumed from a topic. Kogito Serverless Workflow uses Smallrye connectors to encapsulate access to several brokers, enabling Kogito Serverless Workflow to support different brokers by changing the configuration and classpath dependencies. However, Smallrye connectors also introduce an entity called channel. The Smallrye channels are unidirectional and need to be declared as input (incoming) or output (outgoing). When using Apache Kafka, the Smallrye channels must be mapped to Apache Kafka topics through configuration. You need to add the Kafka Quarkus Smallrye connector dependency to indicate that you are using Apache Kafka. To enable a workflow to use Apache Kafka Smallrye connector, add the following dependency to the pom.xml file of your project if using Apache Maven: Add dependency for Apache Kafka Smallrye connector in pom.xml io.quarkus quarkus-smallrye-reactive-messaging-kafka The messaging capabilities are included in the Quarkus Serverless Workflow extension, even though the messaging capabilities are optional. This means you do not need to explicitly add the messaging add-on dependency when using Kogito Serverless Workflow. You can configure Smallrye channels for a workflow using event definitions. The Smallrye channels are defined using Quarkus configuration. The format for Smallrye channel properties is mp.messaging.[incoming|outgoing]... Kogito Serverless Workflow allows the following channel mapping strategies: Define one default incoming channel to receive all the incoming messages and one default outgoing channel to store all the published messages. Define a channel for each CloudEvent type so that every message type has a dedicated channel. Define a channel for certain CloudEvent types. The non-mapped CloudEvent types uses the default incoming or outgoing channel. Kogito Serverless Workflow first searches for a channel name in the properties that is same as CloudEvent type. If the channel name is found, Kogito Serverless Workflow uses the channel for that CloudEvent type. However, if the channel name is not found, Kogito Serverless Workflow searches for the default channel definition. In case the default channel definition is not existing, then an error is reported. The default incoming channel is kogito_incoming_stream and the default outgoing channel is kogito_outgoing_stream. To change the default incoming and outgoing topic names, you can use the following properties: Properties to change default incoming and outgoing topic names kogito.addon.messaging.incoming.defaultName= kogito.addon.messaging.outgoing.defaultName= The following properties are mandatory for each channel: connector: This property needs to be set to smallrye-kafka. Depending on whether the channel is incoming or outgoing: value.deserializer: This property is used for incoming channels. Unless you have specific marshaling requirements, you must set this property to org.apache.kafka.common.serialization.ByteArrayDeserializer or org.apache.kafka.common.serialization.StringDeserializer. value.serializer: This property is used for outgoing channels. Unless you have specific marshaling requirements, you must set this property to org.apache.kafka.common.serialization.ByteArraySerializer or org.apache.kafka.common.serialization.StringSerializer. topic is another relevant but optional property that might be set for a channel. The topic property contains the Apache Kafka topic name to be used for a channel. If topic property is not set, then the channel name is used as topic name. For more information about the properties that you can use for a channel when using Apache Kafka connector, see the properties list. This section describes examples of channel mapping, using the properties mentioned in the previous section. One Smallrye channel per CloudEvent type The serverless-workflow-callback-quarkus example application uses two CloudEvent types, including wait (incoming) and resume (outgoing). Kafka topic names match the CloudEvent types. Therefore, it is suitable to select the mapping strategy of one channel per CloudEvent type. This suggests that two channels must be configured. Note that you do not need to set the optional topic property as the channel name matches the CloudEvent type. Example property configuration mp.messaging.incoming.wait.connector=smallrye-kafka mp.messaging.incoming.wait.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer mp.messaging.outgoing.resume.connector=smallrye-kafka mp.messaging.outgoing.resume.value.serializer=org.apache.kafka.common.serialization.StringSerializer Default channel mapping The serverless-workflow-events-quarkus example application uses two CloudEvent types, including applicants (incoming) and decisions (outgoing). As mentioned before, Kafka topic names match the CloudEvent types. However, to use the default channel functionality, kogito_incoming_stream and kogito_outgoing_stream are used as channel names. As explained before, since there is no specific channel name for the CloudEvent type, then the default channels are used. Also, the default channels need to be mapped to the desired topic name using the topic property. Example property configuration mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka mp.messaging.incoming.kogito_incoming_stream.topic=applicants mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka mp.messaging.outgoing.kogito_outgoing_stream.topic=decisions mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer Smallrye provide means to manage emitter overflow through OnOverflow annotation Kogito will annotate generated smallrye emitters for a particular channel using the information provided by a property of the form kogito.addon.messaging.emitter..overflow-strategy. The possible values are BUFFER, NONE, UNBOUNDED, FAIL, and DROP. If the value of the strategy is BUFFER, then you must specify the buffer size by using the property of the form kogito.addon.messaging.emitter..buffer-size Therefore, for the wait channel, in the previous example, if we want to buffer as many as 100 events we will add these two properties Example overflow configuration kogito.addon.messaging.emitter.wait.overflow-strategy=BUFFER kogito.addon.messaging.emitter.wait.buffer-size=100 If all your channels use the same strategy and this strategy differs from the BUFFER one (you can change buffer size globally by using the mp.messaging.emitter.default-buffer-size smallrye property). You can set it up by using kogito.addon.messaging.emitter.overflow-strategy=NONE|UNBOUNDED|FAIL|DROP Consuming and producing events on Knative Eventing Event correlation in Kogito Serverless Workflow Callback state in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Consuming and producing events using Apache Kafka in Quarkus","component":"serverlessworkflow","version":"1.42.0.Final","name":"consume-producing-events-with-kafka","url":"/serverlessworkflow/latest/eventing/consume-producing-events-with-kafka.html","titles":[{"text":"Smallrye channels configuration for a workflow","hash":"con-sw-smallrye-channel-configuration","id":1},{"text":"Examples of Smallrye channel mapping","hash":"ref-example-smallrye-channel-mapping","id":2},{"text":"OnOverflow handling","hash":"_onoverflow_handling","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"19":{"id":19,"text":"Event correlation plays a significant role in large event-driven applications. It allows matching one or more events with a particular workflow instance. Correlation rules with domain information can be used when defining consumed events to match a workflow instance. Also, event correlation is a practical alternative to the internal identifier processInstanceId since you can use any external domain identifier as a correlation. A correlation definition consists of one or more attributes associated with an event and the respective workflow to which the event belongs. In Serverless Workflow specification, the correlation property defines the possible correlations for a given event. Each element must contain a contextAttributeName property, which is set for the value that matches an attribute from an event. You can optionally set the contextAttributeValue property, which matches the value for the respective attribute defined in contextAttributeName property for the consumed events in a workflow. The incoming events consumed by the engine must contain the correlation attributes, set in the definition as extension context attributes. The correlation attributes are compliant with the CloudEvent format, therefore, the attributes are not part of the event payload. A new workflow instance must be created using an event, which must be declared in the workflow definition file, containing correlation attributes in the event definition section. For more information about events, see Event state in Kogito Serverless Workflow. Once the event is consumed, the engine extracts the correlation attributes and associates the attributes with the created workflow instance. A start event does not trigger a correlation evaluation, but acts as a moment in which correlation attributes and values are set. The correlation attributes and values are evaluated against other incoming events that might trigger the given instance. Therefore, when a non-start event is consumed and correlation attributes are evaluated, then the engine continues the execution of the matched instances (if any). The following figure shows how engine processes the correlation: Figure 1. Event correlation evaluation process You can see the correlation configuration in the serverless-workflow-correlation-quarkus example application, describing the setup and usage of event correlation in a workflow. Figure 2. Event correlation evaluation process The workflow definition file contains the correlation information, in which the events section is defined as follows: Example event correlation in a workflow \"events\": [ { \"name\": \"newAccountEvent\", \"source\": \"\", \"type\": \"newAccountEventType\", \"correlation\": [ { \"contextAttributeName\": \"userid\" } ] }, { \"name\": \"validateAccountEmailEvent\", \"source\": \"workflow\", \"type\": \"validateAccountEmail\" }, { \"name\": \"validatedAccountEmailEvent\", \"source\": \"workflow\", \"type\": \"validatedAccountEmail\", \"correlation\": [ { \"contextAttributeName\": \"userid\" } ] }, { \"name\": \"activateAccountEvent\", \"source\": \"workflow\", \"type\": \"activateAccount\" }, { \"name\": \"activatedAccountEvent\", \"source\": \"workflow\", \"type\": \"activatedAccount\", \"correlation\": [ { \"contextAttributeName\": \"userid\" } ] } ] You can create a workflow by consuming events as defined in the New User Account Request event state. The New User Account Request event state contains a reference of the newAccountEvent event, containing a correlation definition for userid attribute. Example New User Account Request event state definition { \"name\": \"New User Account Request\", \"type\": \"event\", \"onEvents\": [ { \"eventRefs\": [ \"newAccountEvent\" ] } ], \"transition\": \"Validate User Email\" } When the workflow consumes a new event of newAccountEventType type, a workflow instance is created. After that, the events consumed by the same workflow must contain the same correlation attribute and value, such as userid attribute and 12345 value. This correlation attribute and value is used to evaluate and match the workflow instance to continue the workflow execution. Example incoming start event newAccountEvent { \"specversion\": \"0.3\", \"id\": \"1d174d25-46ac-4785-bc76-457c2d37d2fe\", \"source\": \"\", \"type\": \"newAccountEventType\", \"time\": \"2022-07-25T16:30:35.461988261-03:00\", \"userid\": \"12345\", \"data\": { \"email\": \"test@test.com\", \"userId\": \"12345\" } } In Kogito Serverless Workflow, correlating multiple events together is not supported, therefore, the events are evaluated with correlations independently. Using the workflow definition in serverless-workflow-correlation-quarkus example application, you can define other events that are published and consumed by the workflow. The serverless-workflow-correlation-quarkus example application uses callback states, such as Validate User Email. This means that once the workflow execution reaches the callback state, the workflow publishes an event of validateAccountEmailEvent type and waits to receive an event of validatedAccountEmailEvent type. For more information about the callback state, see Callback state in Kogito Serverless Workflow. Example Callback state definition { \"name\": \"Validate User Email\", \"type\": \"callback\", \"action\": { \"name\": \"publish validate event\", \"eventRef\": { \"triggerEventRef\": \"validateAccountEmailEvent\" } }, \"eventRef\": \"validatedAccountEmailEvent\", \"transition\": \"Activate User Account\" } The produced events contain the same correlation attributes when the workflow is created. Example produced Callback state event validateAccountEmailEvent { \"id\": \"7640a0af-b7fb-4d94-9d9d-3aa1ace60e79\", \"source\": \"/process/correlation\", \"type\": \"validateAccountEmail\", \"time\": \"2022-07-25T16:22:53.735128049-03:00\", \"data\": { \"email\": \"test@test.com\", \"userId\": \"12345\" }, \"specversion\": \"1.0\", \"kogitoprocinstanceid\": \"69019826-daef-4fb4-880b-c1658c4e49bc\", \"kogitoprocid\": \"correlation\", \"kogitoprocversion\": \"1.0\", \"kogitousertaskist\": \"1\", \"kogitoproctype\": \"SW\", \"userid\": \"12345\" } All consumed events must contain the same correlation attributes since the consumed events are used to identify the workflow instance. The following example shows the consumed events containing same correlation attributes and values, such as userid and 12345: Consumed Callback state event validatedAccountEmailEvent { \"specversion\": \"1.0\", \"id\": \"953f07a7-aea8-4956-8775-85ab59366fe6\", \"source\": \"\", \"type\": \"validatedAccountEmail\", \"time\": \"2022-07-25T16:29:27.320408379-03:00\", \"userid\": \"12345\", \"data\": null } The engine stores the correlation information in the same persistence mechanism that is configured in the workflow application. If a persistence add-on is not configured, then the correlation information is stored in memory. This means that entire correlation information is lost when the workflow application restarts, therefore this process must be used for testing purposes. For more information about the persistence configuration, see Running a workflow service using PostgreSQL. Currently, only kogito-addons-quarkus-persistence-jdbc persistence add-on supports correlation. The kogito-addons-quarkus-persistence-jdbc add-on is configured for PostgreSQL. Other persistence add-ons will be supported in a future release. Event state in Kogito Serverless Workflow Callback state in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Event correlation in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"event-correlation-with-workflows","url":"/serverlessworkflow/latest/eventing/event-correlation-with-workflows.html","titles":[{"text":"Example of event correlation in a workflow","hash":"ref-example-event-correlation","id":1},{"text":"Additional resources","hash":"_additional_resources","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"20":{"id":20,"text":"This document describes how to trigger and publish events using an AsyncAPI specification file. Underneath, Kogito Serverless Workflow uses the AsyncAPI Quarkiverse extension. This extension automatically generates all the required Smallrye properties to make Kogito Serverless Workflow work with the servers declared in the AsyncAPI file. Therefore, you do not need to add any property specific to your event broker to make AsyncAPI work. This is a huge advantage over regular event states, where whether using Kafka or Knative, you have to provide additional configuration AsyncAPI Quarkiverse extension only supports kafka and http protocols at the moment. Let’s assume there is an AsyncAPI specification file called asyncAPI.yaml, located in the classpath of your project. This file contains a servers definition which protocol is Kafka: Example of an AsyncAPI kafka server definition servers: development: url: localhost:9092 description: Development server protocol: kafka protocolVersion: '1.0.0' and a subscription channel named wait: Example of an AsyncAPI subscribing channel definition channels: wait: description: A message channel subscribe: operationId: consumeWait summary: Get messages message: $ref: '#/components/messages/message' You can define a function in your workflow, of type asyncapi, that points to consumerWait operationId: Example of an AsyncAPI subscribing function definition { \"functions\": [ { \"name\": \"consumeEvent\", \"type\": \"asyncapi\", \"operation\": \"asyncAPI.yaml#consumeWait\" } ] } Remember that, as happens with REST and RPC types, the URI part of the operation property supports http, https, and file schemas. If no schema is present, it assumes the specification file is on the project classpath. Once the function is defined, you can invoke it within an operation state: Example of an AsyncAPI subscribing function invocation { \"name\": \"waitForEvent\", \"type\": \"operation\", \"actions\": [ { \"functionRef\": \"consumeEvent\" } ] } When your flow reach the waitForEvent state, it will stop until it receives a CloudEvent published over the Kafka topic wait. Let’s assume there is an AsyncAPI specification file called asyncAPI.yaml, located in the classpath of your project. This file contains a servers definition which protocol is HTTP: Example of an AsyncAPI http server definition servers: development: url: localhost:8080 description: Development server protocol: http protocolVersion: '1.0.0' and a publishing channel named resume: Example of an AsyncAPI publishing channel definition channels: resume: description: A message channel publish: operationId: sendResume summary: Get messages message: $ref: '#/components/messages/message' You can define a function in your workflow, of type asyncapi, that point to sendResume operationId: Example of an AsyncAPI publishing function definition { \"functions\": [ { \"name\": \"sendResume\", \"type\": \"asyncapi\", \"operation\": \"asyncAPI.yaml#sendResume\" } ] } Once the function is defined, you can invoke it within an operation state: Example of an AsyncAPI publishing function invocation { \"name\": \"sendEvent\", \"type\": \"operation\", \"actions\": [ { \"functionRef\": \"sendResume\", \"arguments\" : { \"name\" : \"Javierito\" } } ] } When your flow reach the sendEvent state, it will send an event to the endpoint http://localhost:8080/resume, with the payload {\"name\":\"Javierito\"} If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Orchestrating AsyncAPI Services","component":"serverlessworkflow","version":"1.42.0.Final","name":"orchestration-of-asyncapi-based-services","url":"/serverlessworkflow/latest/eventing/orchestration-of-asyncapi-based-services.html","titles":[{"text":"Consuming an event","hash":"_consuming_an_event","id":1},{"text":"Publishing an event","hash":"_publishing_an_event","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"21":{"id":21,"text":"As a developer, you can use Kogito Serverless Workflow and create a Hello World application, which includes the following procedures: Bootstrapping a project Creating a workflow Running your workflow application Testing your workflow application Also, you can directly access an example application by cloning serverless-workflow-examples/serverless-workflow-hello-world from the GitHub repository. This document describes how to create a workflow application that serves a hello_world endpoint. The workflow contains the following two states: Inject Hello World: Injects a Hello World message into the response Inject Mantra: Injects a Mantra message into the response Figure 1. Example Hello World workflow Prerequisites Java 11+ is installed with JAVA_HOME configured appropriately. Apache Maven 3.8.6 is installed. Quarkus CLI or Knative Workflow CLI 0.21.3 is installed. Visual Studio Code with Red Hat Java Extension and Red Hat Serverless Workflow Editor is installed to edit your workflows. For more information about the tooling and the required dependencies, see Getting familiar with Kogito Serverless Workflow tooling. To create your workflow service, first you need to bootstrap a project. Procedure In a command terminal, use one of the following commands to create a project: Quarkus CLI Apache Maven Knative workflow CLI Create a project using Quarkus CLI quarkus create app \\ -x=kogito-quarkus-serverless-workflow \\ -x=quarkus-resteasy-jackson \\ -x=quarkus-smallrye-openapi \\ --no-code \\ org.acme:serverless-workflow-hello-world:1.0.0-SNAPSHOT The previous command creates a Maven Quarkus project in the serverless-workflow-hello-world directory containing the required dependencies, including: kogito-quarkus-serverless-workflow: Adds support for workflows. quarkus-resteasy-jackson: Adds support for RESTEasy, which is required by the generated REST resources that are used to start the flow process using an HTTP request. quarkus-smallrye-openapi: Adds support for Swagger documentation when you run the application in development mode. --no-code: Prevents workflow example code from being generated. The SwaggerUI is available at http://localhost:8080/q/swagger-ui/ when you run the application. Create a project using Apache Maven mvn io.quarkus.platform:quarkus-maven-plugin:2.16.8.Final:create \\ -DprojectGroupId=org.acme \\ -DprojectArtifactId=serverless-workflow-hello-world \\ -Dextensions=\"kogito-quarkus-serverless-workflow,quarkus-resteasy-jackson,quarkus-smallrye-openapi\" \\ -DnoCode cd serverless-workflow-hello-world In the previous command, org.acme, serverless-workflow-hello-world, and 1.0.0-SNAPSHOT is group ID, artifact ID, and version of your project respectively. -DnoCode prevents the generation of workflow example code. Create a project using Knative workflow CLI kn workflow create \\ --name serverless-workflow-hello-world \\ --extension quarkus-jsonp,quarkus-smallrye-openapi \\ --quarkus-platform-group-id=io.quarkus.platform \\ --quarkus-version=2.16.8.Final For more information about Knative workflow CLI, see Kogito Serverless Workflow plug-in for Knative CLI. After bootstrapping a project, you need to create a workflow. In the following procedure, a workflow named Hello World Workflow is created. Procedure Create a file named hello.sw.json in the src/main/resources directory with the following content: Example content for hello.sw.json file { \"id\": \"hello_world\", (1) \"version\": \"1.0\", \"specVersion\": \"0.8\", \"name\": \"Hello World Workflow\", \"description\": \"JSON based hello world workflow\", \"start\": \"Inject Hello World\", (3) \"states\": [ (2) { \"name\": \"Inject Hello World\", \"type\": \"inject\", (4) \"data\": { (5) \"greeting\": \"Hello World\" }, \"transition\": \"Inject Mantra\" (6) }, { \"name\": \"Inject Mantra\", \"type\": \"inject\", \"data\": { \"mantra\": \"Serverless Workflow is awesome!\" (7) }, \"end\": true (8) } ] } In the previous example: 1 id field is the unique identifier of the workflow. Kogito Serverless Workflow generates the REST endpoints based on this unique identifier. 2 states defines the states of the workflow. In the Hello World example, the workflow contains two states, such as Inject Hello World and Inject Mantra. 3 start field defines the state in which the workflow starts. 4 type defines the type of the state. In the previous example, the state is inject. The inject state can be used to inject static data into state data input. 5 data defines the data that is injected into the state. In the previous example, greeting is injected with the Hello World value. 6 transition field defines the next state that is reached after the current state is completed. 7 Injects a mantra with the value Serverless Workflow is awesome! into the workflow data. 8 end field defines that the current state is the end of the workflow. When the workflow reaches the end state, the workflow stops and the REST endpoint returns the workflow data, such as: Example workflow data { \"greeting\": \"Hello World\", \"mantra\": \"Serverless Workflow is awesome!\" } The workflow definition follows the CNCF Serverless Workflow specification. For more information, see CNCF Serverless Workflow specification. To verify that project is created, compile the project using the following command: Quarkus CLI Apache Maven Knative workflow CLI Compile your project using Quarkus CLI quarkus build Compile your project using Apache Maven mvn clean package Build your project and generate a local image called dev.local/serverless-workflow-hello-world:latest kn workflow build --image dev.local/serverless-workflow-hello-world --verbose The --verbose flag is used to display the output of the build command. This flag is optional. For more information about Knative workflow CLI, see Kogito Serverless Workflow plug-in for Knative CLI. After creating a workflow, you can run your workflow application. Procedure Enter the following command to run your workflow application: Quarkus CLI Apache Maven Run your workflow application using Quarkus CLI quarkus dev Run your workflow application using Apache Maven mvn clean quarkus:dev Knative workflow CLI: Currently, Knative workflow CLI doesn’t support yet running workflows locally. You can either: Run your workflow application using Apache Maven mvn clean quarkus:dev Run your workflow application using Quarkus CLI quarkus dev For more information about Knative workflow CLI, see Kogito Serverless Workflow plug-in for Knative CLI. Also, to deploy and run your workflow application, see Deploying workflow application on Minikube Example response [INFO] ------------- [INFO] Building serverless-workflow-hello-world 1.0.0-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO] [INFO] --- quarkus-maven-plugin:2.16.8.Final:dev (default-cli) @ serverless-workflow-hello-world --- [INFO] Invoking org.apache.maven.plugins:maven-resources-plugin:2.6:resources) @ serverless-workflow-hello-world [INFO] Using 'UTF-8' encoding to copy filtered resources. [INFO] Copying 3 resources ...more output... __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\ --\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/ 2022-05-25 14:38:09,741 INFO [org.kie.kog.add.qua.mes.com.QuarkusKogitoExtensionInitializer] (Quarkus Main Thread) Registered Kogito CloudEvent extension 2022-05-25 14:38:09,840 INFO [io.quarkus] (Quarkus Main Thread) serverless-workflow-hello-world 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.16.8.Final) started in 6.470s. Listening on: http://localhost:8080 2022-05-25 14:38:09,843 INFO [io.quarkus] (Quarkus Main Thread) Profile dev activated. Live Coding activated. 2022-05-25 14:38:09,843 INFO [io.quarkus] (Quarkus Main Thread) Installed features: [cache, cdi, jackson-jq, kogito-addon-messaging-extension, kogito-processes, kogito-serverless-workflow, reactive-routes, rest-client, rest-client-jackson, resteasy, resteasy-jackson, smallrye-context-propagation, smallrye-openapi, smallrye-reactive-messaging, smallrye-reactive-messaging-http, swagger-ui, vertx] 2022-05-25 14:38:12,877 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: __ ____ __ _____ ___ __ ____ ______ 2022-05-25 14:38:12,878 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ 2022-05-25 14:38:12,879 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\ 2022-05-25 14:38:12,879 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: --\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/ 2022-05-25 14:38:12,879 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:09,692 INFO [io.zon.tes.db.pos.emb.EmbeddedPostgres] (main) Detected a Linux x86_64 system 2022-05-25 14:38:12,880 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:09,705 INFO [io.zon.tes.db.pos.emb.DefaultPostgresBinaryResolver] (main) Detected distribution: 'Red Hat Enterprise Linux' ...more output... 2022-05-25 14:38:12,889 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:12,332 INFO [io.zon.tes.db.pos.emb.EmbeddedPostgres] (postgres:pid(90)) 2022-05-25 17:38:12.332 UTC [99] LOG: incomplete startup packet 2022-05-25 14:38:12,890 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:12,405 INFO [io.zon.tes.db.pos.emb.EmbeddedPostgres] (main) 5df1ed6e-7a15-4091-bcfb-e293aa293bfe postmaster startup finished in 00:00:00.180 2022-05-25 14:38:12,890 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:12,405 INFO [org.kie.kog.per.inm.pos.run.InmemoryPostgreSQLRecorder] (main) Embedded Postgres started at port \"44729\" with database \"postgres\", user \"postgres\" and password \"postgres\" 2022-05-25 14:38:12,890 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:12,636 WARN [io.qua.run.con.ConfigRecorder] (main) Build time property cannot be changed at runtime: 2022-05-25 14:38:13,375 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:13,105 INFO [org.kie.kog.per.pro.ProtobufService] (main) Registering Kogito ProtoBuffer file: kogito-index.proto 2022-05-25 14:38:13,377 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:13,132 INFO [org.kie.kog.per.pro.ProtobufService] (main) Registering Kogito ProtoBuffer file: kogito-types.proto 2022-05-25 14:38:13,378 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:13,181 INFO [io.quarkus] (main) data-index-service-inmemory 1.22.0.Final on JVM (powered by Quarkus 2.9.0.Final) started in 4.691s. Listening on: http://0.0.0.0:8080 2022-05-25 14:38:13,379 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:13,182 INFO [io.quarkus] (main) Profile prod activated. 2022-05-25 14:38:13,380 INFO [org.kie.kog.qua.pro.dev.DataIndexInMemoryContainer] (docker-java-stream--938264210) STDOUT: 2022-05-25 17:38:13,182 INFO [io.quarkus] (main) Installed features: [agroal, cdi, hibernate-orm, hibernate-orm-panache, inmemory-postgres, jdbc-postgresql, narayana-jta, oidc, reactive-routes, rest-client-reactive, rest-client-reactive-jackson, security, smallrye-context-propagation, smallrye-graphql-client, smallrye-health, smallrye-metrics, smallrye-reactive-messaging, smallrye-reactive-messaging-http, vertx, vertx-graphql] Once your workflow application is started, you can send a request for the provided endpoint: Example request curl -X POST -H 'Content-Type:application/json' http://localhost:8080/hello_world Example response {\"id\":\"efb59bfa-ad9c-4062-a6d2-2d9184dd4b3d\",\"workflowdata\":{\"greeting\":\"Hello World\",\"mantra\":\"Serverless Workflow is awesome!\"}} When running in development mode (using Quarkus CLI or Apache Maven), you can update your workflow with a new mantra value without restarting the application. Update your workflow { \"name\": \"Inject Mantra\", \"type\": \"inject\", \"data\": { \"mantra\": \"Serverless Workflow is amazing!\" (1) }, \"end\": true } 1 New mantra value Example request curl -X POST -H 'Content-Type:application/json' http://localhost:8080/hello_world Example response {\"id\":\"efb59bfa-ad9c-4062-a6d2-2d9184dd4b3d\",\"workflowdata\":{\"greeting\":\"Hello World\",\"mantra\":\"Serverless Workflow is amazing!\"}} Note that the mantra value is updated without restarting the application, because Kogito Serverless Workflow leverages the Quarkus live coding feature. To stop the application, press CTRL+C. To test your workflow application, you can follow the instructions in the Testing your workflow application using REST Assured. Getting familiar with Kogito Serverless Workflow tooling Orchestrating the OpenAPI services If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Creating a Quarkus Workflow Project","component":"serverlessworkflow","version":"1.42.0.Final","name":"create-your-first-workflow-service","url":"/serverlessworkflow/latest/getting-started/create-your-first-workflow-service.html","titles":[{"text":"Bootstrapping a project","hash":"proc-boostrapping-the-project","id":1},{"text":"Creating a workflow","hash":"proc-creating-workflow","id":2},{"text":"Building your workflow application","hash":"proc-building-application","id":3},{"text":"Running your workflow application","hash":"proc-running-application","id":4},{"text":"Testing your workflow application","hash":"proc-testing-application","id":5},{"text":"Additional resources","hash":"_additional_resources","id":6},{"text":"Found an issue?","hash":"_found_an_issue","id":7}]},"22":{"id":22,"text":"The tooling in Kogito Serverless Workflow provides the best developer experience for the workflow ecosystem. The following tools are provided that you can use to author your workflow assets: VS Code extension: Use the Serverless Workflow editor and edit the CNCF Serverless Workflow specification files in Visual Studio Code. Chrome GitHub extension: View and edit the CNCF Serverless Workflow specification files in GitHub. Kogito Serverless Workflow Tools extension in Quarkus Dev UI: View, manage, and start the workflow instances. Kogito Serverless Workflow plug-in for Knative CLI: Set up a local workflow project using the command line. Serverless Logic online tooling: Try and run the Serverless Workflow example applications in a web environment. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Getting familiar with Kogito Serverless Workflow tooling","component":"serverlessworkflow","version":"1.42.0.Final","name":"getting-familiar-with-our-tooling","url":"/serverlessworkflow/latest/getting-started/getting-familiar-with-our-tooling.html","titles":[{"text":"Found an issue?","hash":"_found_an_issue","id":1}]},"23":{"id":23,"text":"Kogito Serverless Workflow can integrate with Apache Camel Routes by adding the Kogito Quarkus Camel Add-on to your project. It enables the workflow engine to identify and call Camel routes declared in YAML or XML in the same workflow project context. You can enable Quarkus Camel in your project. Prerequisites A workflow application is created. For more information about creating a workflow, see Creating your first workflow service. Procedure To add the Quarkus Camel to your workflow application, add the org.kie.kogito:kogito-addons-quarkus-camel dependency to the pom.xml file of your project as follows: Dependency to be added to the pom.xml file to enable metrics org.kie.kogito kogito-addons-quarkus-camel You can add YAML or XML Camel routes to your workflow project. Procedure Create a YAML or XML Camel Routes using your IDE or the Kaoto VSCode Editor and place them in the src/main/resources/routes directory. The route from endpoint must be a direct component. That’s the endpoint producer expected by the workflow engine. The route response must be in a valid format that the workflow context can understand: A string that contains a valid JSON object A valid Java bean that can be serialized to JSON A Jackson’s JsonNode object Any primitive type (Integer, Float, Decimal, String, etc) The response will be merged into the workflow state context. If it is an array or a complex object, the response will be added to the special attribute response. Example of a Camel route with the direct endpoint returning a valid JSON string representation - from: uri: direct:logRouteReplaceHeader (1) steps: (2) - setBody: simple: '{ \"id\": \"${header.WorkflowID}\", \"arg1\": { \"arg2\": \"value1\" } }' (3) - log: message: We received the ${body} (4) 1 Camel route producer definition using the direct component 2 Definition of the Camel route steps 3 Replace the Camel message body with a valid JSON object containing the header WorkflowID from the workflow context 4 Log the Camel message body in the console for debugging purposes. You can define and reference your Camel functions in the workflow definition. Prerequisites You have created Camel routes in the workflow Maven project. Procedure In the functions definition section of your workflow DSL, declare the Camel route as exemplified below: Example of a Camel Route function definition { \"functions\": [ { \"name\": \"logRoute\", \"type\": \"custom\", \"operation\": \"camel:direct:logRouteReplaceHeader\" } ] } The operation description must have the prefix camel:direct:, indicating that you want to produce a message to this route via the Camel Direct Component. Direct is the only component supported by Kogito Serverless Workflow at the moment. The operation suffix contains the name of the route endpoint. In the case of this example, logRouteReplaceHeader. The Camel route defined in the workflow must be available in your project during runtime, otherwise, an IllegalArgumentException will be thrown. To use the Camel function definition in a workflow action, you can simply reference it as you normally would with any other Kogito Serverless Workflow function definitions. For example: Example of a workflow state action referencing { \"states\": [ { \"name\": \"sendToLog\", \"type\": \"operation\", \"actions\": [ { \"functionRef\": { \"refName\": \"logRoute\", (1) \"arguments\": { \"body\": \"${ . }\", (2) \"headers\": { \"WorkflowID\": \"$WORKFLOW.instanceId\" (3) } } } } ], \"end\": true } ] } 1 The function reference name, as defined in the function attribute. 2 The body definition. A jq expression to be evaluated in runtime resulting in the body payload. 3 The headers definition that must be a key/value pair or a valid jq expression evaluated in runtime. Once a message is received back from the Camel route, the data is merged into the workflow payload: Message payload example returned by the Camel route { \"id\": \"777adb97-d297-45fd-9969-efafe4dfb3e7\", \"arg1\": { \"arg2\": \"value1\" } } There is an example project available on GitHub using this new feature. You can use it as a reference to have a better understanding of the Camel integration with Kogito Serverless Workflow. Custom functions for your Kogito Serverless Workflow service jq expressions in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Integrating with Camel routes","component":"serverlessworkflow","version":"1.42.0.Final","name":"camel-routes-integration","url":"/serverlessworkflow/latest/integrations/camel-routes-integration.html","titles":[{"text":"Enabling Quarkus Camel in Kogito Serverless Workflow","hash":"proc-enable-quarkus-camel","id":1},{"text":"Creating Camel routes in Kogito Serverless Workflow","hash":"con-creating-camel-routes","id":2},{"text":"Defining and referencing Camel functions in the Workflow DSL","hash":"con-importing-camel-routes","id":3},{"text":"Example project","hash":"_example_project","id":4},{"text":"Additional resources","hash":"_additional_resources","id":5},{"text":"Found an issue?","hash":"_found_an_issue","id":6}]},"24":{"id":24,"text":"This document describes how to call Knative services using Kogito Serverless Workflow custom functions. The procedure described in this document is based on the serverless-workflow-custom-function-knative example application. For more details about the Knative custom function, see Custom functions for your Kogito Serverless Workflow service. Prerequisites Your Kogito Serverless Workflow application is ready to use. For more information about building the application container, see Building workflow images using Quarkus CLI. Minikube is installed kubectl command-line tool is installed. Otherwise, Minikube handles it. Knative CLI is installed. For more information, see Install the Knative CLI. Knative workflow CLI is installed. For more information see Serverless Workflow plug-in for Knative CLI. (Optional) Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). You have the custom-function-knative-service project deployed on Knative. For more information on how to deploy a Quarkus project to Knative, see the Quarkus Kubernetes extension documentation. Procedure Add the knative-serving add-on dependency to your workflow project. org.kie.kogito kogito-addons-quarkus-knative-serving Enable the Service Discovery feature. Discover the name of the Knative service that your workflow will invoke. In a terminal window, run the following command: kn service list You should see an output like: NAME URL LATEST AGE CONDITIONS READY REASON custom-function-knative-service http://custom-function-knative-service.default.10.109.169.193.sslip.io custom-function-knative-service-00001 3h16m 3 OK / 3 True Save the Knative service name (custom-function-knative-service) to use it in the next step. Declare the Knative Kogito Serverless Workflow custom function. In the functions section of your workflow, add the following: { \"name\": \"greet\", (1) \"type\": \"custom\", (2) \"operation\": \"knative:services.v1.serving.knative.dev/custom-function-knative-service?path=/function\", (3) } 1 The name of the Kogito Serverless Workflow function 2 Indicates that this function is a custom one 3 The coordinates of the service you want to invoke Invoke the declared function. In an operation state, add an action that references the function you declared in the previous step like the following: \"actions\": [ { \"functionRef\": { \"refName\": \"greet\", (1) \"arguments\": { (2) \"name\": \".name\" } } } ] 1 Function’s name 2 The payload that should be sent in the request Deploy your workflow service to Knative. For more information on how to deploy a Kogito Serverless Workflow Kogito Serverless Workflow project to Knative, see the Deploying on Kubernetes. Submit a request to the workflow service curl -X 'POST' \\ '/plainJsonKnativeFunction' \\ (1) -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{ \"name\": \"Kogito\" }' 1 Replace with the URL of your deployed workflow service You should see an output like (id will change): {\"id\":\"87cf8275-782d-4e0b-a9be-a95f95c9c190\",\"workflowdata\":{\"name\":\"Kogito\",\"greeting\":\"Greetings from Serverless Workflow, Kogito\"}} Knative functions support CloudEvent as the message protocol. Kogito Serverless Workflow can create and post CloudEvent messages in functionRef. For more information see core/custom-functions-support.adoc#sending-cloudevents Custom functions for your Kogito Serverless Workflow service Deploying your Serverless Workflow application on Minikube Deploying your Serverless Workflow application on Kubernetes If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Invoking Knative services from Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"custom-functions-knative","url":"/serverlessworkflow/latest/integrations/custom-functions-knative.html","titles":[{"text":"Sending as CloudEvent","hash":"_sending_as_cloudevent","id":1},{"text":"Additional resources","hash":"_additional_resources","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"25":{"id":25,"text":"Kogito Serverless Workflow generates metrics that can be consumed by Prometheus and visualized by dashboard tools, such as OpenShift, Dashbuilder, and Grafana. This document describes how you can enable and expose the generated metrics to Prometheus. You can enable the metrics in your workflow application. Prerequisites A workflow application is created. For more information about creating a workflow, see Creating your first workflow service. Procedure To add the metrics to your workflow application, add the org.kie.kogito:kogito-addons-quarkus-monitoring-prometheus dependency to the pom.xml file of your project: Dependency to be added to the pom.xml file to enable metrics org.kie.kogito kogito-addons-quarkus-monitoring-prometheus Rebuild your workflow application. The metrics is available at /q/metrics endpoint. After enabling the metrics in Kogito Serverless Workflow, the generated metrics can be consumed from OpenShift, Kubernetes, and Prometheus to visualize on different dashboard tools. If your workflow server is running on OpenShift, then you can use the server to monitor your workflow application. Also, you can perform the task of consuming metrics from OpenShift. Prerequisites Metrics is enabled in Kogito Serverless Workflow. For more information, see Enabling metrics in Kogito Serverless Workflow. Procedure To consume metrics from OpenShift, enable monitoring for user-defined projects. For more information, see Enabling monitoring for user-defined projects in OpenShift documentation. When you enable monitoring for user-defined projects, the Prometheus Operator is installed automatically. Create a service monitor as shown in the following configuration: Example configuration in service-monitor.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: k8s-app: prometheus-app-monitor name: prometheus-app-monitor namespace: my-project spec: endpoints: - interval: 30s targetPort: 8080 path: /q/metrics scheme: http selector: matchLabels: app-with-metrics: 'serverless-workflow-app' Run the following command to apply the service monitor: Apply service monitor oc apply -f service-monitor.yaml In the previous procedure, a service monitor named prometheus-app-monitor is created, which selects applications containing the label as app-with-metrics: serverless-workflow-app. Ensure that your workflow application contains the same label. After that, Prometheus sends request to the /q/metrics endpoint for all the services that are labeled with app-with-metrics: serverless-workflow-app every 30 seconds. For more information about monitoring Quarkus application using Micrometer and Prometheus into OpenShift, see Quarkus - Micrometer Metrics. Consuming metrics from Kubernetes is similar to OpenShift. However, you need to install the Prometheus Operator project manually. For more information about installing Prometheus Operator, see Prometheus Operator website. If your workflow server is running on Prometheus, then you can perform the task of consuming metrics from Prometheus and visualize the workflow on different dashboard tools. Prerequisites Metrics is enabled in Kogito Serverless Workflow. For more information, see Enabling metrics in Kogito Serverless Workflow. Procedure Use the following configuration to enable Prometheus to remove metrics directly from the workflow application: Example Prometheus configuration - job_name: 'Serverless Workflow App' scrape_interval: 2s metrics_path: /q/metrics static_configs: - targets: ['localhost:8080'] Replace the values of job_name and scrap_interval in the previous configuration with your own values. Ensure that target under static_configs parameter in Prometheus configuration matches with your workflow application location. For more information about configuring Prometheus, see Configure Prometheus to monitor the sample targets in Prometheus Getting Started document. In Kogito Serverless Workflow, you can check the following example metrics: kogito_process_instance_completed_total: Completed workflows kogito_process_instance_started_total: Started workflows kogito_process_instance_running_total: Running workflows kogito_process_instance_duration_seconds_sum: Workflows total duration Internally, workflows are referred as processes. Therefore, the processId and processName is workflow ID and name respectively. Each of the metrics mentioned previously contains a label for a specific workflow ID. For example, the kogito_process_instance_completed_total metric contains labels for jsongreet, yamlgreet, and foreach workflows: Example kogito_process_instance_completed_total metric # HELP kogito_process_instance_completed_total Completed Process Instances # TYPE kogito_process_instance_completed_total counter kogito_process_instance_completed_total{app_id=\"default-process-monitoring-listener\",artifactId=\"kogito-serverless-workflow-demo\",node_name=\"2\",process_id=\"jsongreet\",version=\"1.0.0-SNAPSHOT\",} 154.0 kogito_process_instance_completed_total{app_id=\"default-process-monitoring-listener\",artifactId=\"kogito-serverless-workflow-demo\",node_name=\"2\",process_id=\"yamlgreet\",version=\"1.0.0-SNAPSHOT\",} 218.0 kogito_process_instance_completed_total{app_id=\"default-process-monitoring-listener\",artifactId=\"kogito-serverless-workflow-demo\",node_name=\"2\",process_id=\"foreach\",version=\"1.0.0-SNAPSHOT\",} 162.0 Internally, Kogito Serverless Workflow uses Quarkus Micrometer extension, which also exposes built-in metrics. You can disable the Micrometer metrics in Kogito Serverless Workflow. For more information, see Quarkus - Micrometer Metrics. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Exposing Workflow base metrics to Prometheus","component":"serverlessworkflow","version":"1.42.0.Final","name":"expose-metrics-to-prometheus","url":"/serverlessworkflow/latest/integrations/expose-metrics-to-prometheus.html","titles":[{"text":"Enabling metrics in Kogito Serverless Workflow","hash":"proc-enable-metrics-sw","id":1},{"text":"Metrics consumption in Kogito Serverless Workflow","hash":"con-consume-metrics-sw","id":2},{"text":"Consuming metrics from OpenShift","hash":"proc-consume-metrics-openshift","id":3},{"text":"Consuming metrics from Prometheus","hash":"proc-consume-metrics-prometheus","id":4},{"text":"Example metrics in Kogito Serverless Workflow","hash":"ref-sw-example-metrics","id":5},{"text":"Found an issue?","hash":"_found_an_issue","id":6}]},"26":{"id":26,"text":"This document describes how you can build dashboards to monitor your workflows data. To build the dashboards, you need data, which you can acquire from your workflows using one of the following methods: Enable metrics Integrate with Data Index to consume data using the REST API Use custom mechanisms, such as ProcessInstanceListener The following sections describes the process of creating dashboards using metrics and Data Index GraphQL REST API. The dashboards for workflows are visualization of data that run on the client side. The dashboards are created using Dashbuilder, which consumes data from any JSON source. You can define a dashboard in YAML format. To use the Dashbuilder, download and uncompress the dashbuilder-client NPM package. Also, edit the setup.js file to link your YAML files. For more information about using Dashbuilder, see Dashbuilder documentation. Figure 1. Dashbuilder You can build dashboards to monitor the data of your workflows using metrics. Prerequisites A workflow application is created. For more information about creating a workflow, see Creating your first workflow service. Procedure To enable metrics for your workflows application add org.kie.kogito:kogito-addons-quarkus-monitoring-prometheus dependency in pom.xml file of your application: Add metrics dependency to pom.xml file org.kie.kogito kogito-addons-quarkus-monitoring-prometheus You can find the metrics in /q/metrics path. The dashbuilder can consume the data of your workflow directly from the metrics endpoints. Therefore, you can use a JSONAta expression to format the metrics and display the metrics in a table using the following example of YAML code: Example YAML to show metrics in a table datasets: - uuid: swf_metrics url: http://localhost:8080/q/metrics expression: >- $map($, function($l) { [ $l[0], $contains($l[1], \"process_id\") ? $replace($match($l[1], /process_id=\".*?\"/).match, \"process_id\", \"workflow\") : $l[1], $l[2] = \"NaN\" ? -1 : $l[2] ] } ) pages: - components: - settings: lookup: uuid: swf_metrics Figure 2. Example metrics in a table To extract a specific information from your workflow, use specific metrics. Metrics related to workflows include: kogito_process_instance_completed_total: Completed workflows kogito_process_instance_started_total: Started workflows kogito_process_instance_running_total: Running workflows kogito_process_instance_duration_seconds_sum: Workflows total duration When you display the metrics, you can filter the data to include the specific metrics. You can use the metrics and bar chart components in dashbuilder to display the specific metrics and after filtering the metrics, you can put the information in bar charts as shown in the following example YAML code: Example YAML to display bar charts datasets: - uuid: metrics url: http://localhost:8080/q/metrics expression: >- $map($, function($l) { [ $l[0], $contains($l[1], \"process_id\") ? $replace($match($l[1], /process_id=\".*?\"/).match, \"process_id\", \"workflow\") : $l[1], $l[2] = \"NaN\" ? -1 : $l[2] ] } ) columns: - id: metric type: label - id: labels type: label - id: value type: number pages: - rows: - columns: - span: \"6\" components: - html: >- Started - settings: type: BARCHART chart: resizable: 'true' width: '2000' lookup: uuid: metrics sort: - column: value sortOrder: DESCENDING filter: - column: metric function: EQUALS_TO args: - \"kogito_process_instance_started_total\" group: - columnGroup: source: labels groupFunctions: - source: labels - source: value - span: \"6\" components: - html: >- Running - settings: type: BARCHART chart: resizable: 'true' width: '2000' lookup: uuid: metrics sort: - column: value sortOrder: DESCENDING filter: - column: metric function: EQUALS_TO args: - \"kogito_process_instance_running_total\" group: - columnGroup: source: labels groupFunctions: - source: labels - source: value - columns: - span: \"6\" components: - html: >- Completed - settings: type: BARCHART chart: resizable: 'true' width: '2000' dataSetLookup: uuid: metrics sort: - column: value sortOrder: DESCENDING filter: - column: metric function: EQUALS_TO args: - \"kogito_process_instance_completed_total\" group: - columnGroup: source: labels groupFunctions: - source: labels - source: value - span: \"6\" components: - html: >- Total Duration - settings: type: BARCHART chart: resizable: 'true' width: '2000' lookup: uuid: metrics sort: - column: value sortOrder: DESCENDING filter: - column: metric function: EQUALS_TO args: - \"kogito_process_instance_duration_seconds_sum\" group: - columnGroup: source: labels groupFunctions: - source: labels - source: value Figure 3. Example workflow metrics dashboard If you are using Prometheus, you can use PROMQL with Prometheus REST API and transform the result to JSON format that is supported by dashbuilder to build the dashoards. For more information about dashbuilder and Prometheus, see Creating Prometheus Dashboards using Dashbuilder. Data Index is a service that contains all the data related to the execution of your workflow. The Data Index service is available during the development mode. By default, you can access the Data Index at http://localhost:8180. The Data Index service uses GraphQL, so that dashbuilder can connect with the service using its REST API and transform the result to the supported format. Prerequisites A workflow application is created. For more information about creating a workflow, see Creating your first workflow service. Procedure Go to the Data Index GraphQL interface (default to http://localhost:8180/graphiql) and test your query. The following is an example of GraphQL query that lists all the workflows: Example GraphQL query to retrieve all workflows { ProcessInstances { processId processName state start end businessKey error {message} } } Run the GraphQL query. When you run the query, note that the URL is modified to includes the query. Copy the URL and modify graphiql to graphql. When you access the URL with graphql, it returns the result in a JSON format as shown in the following example: GraphQL JSON result when using the query { \"data\": { \"ProcessInstances\": [ { \"processId\": \"yamlgreet\", \"processName\": \"Greeting workflow\", \"state\": \"COMPLETED\", \"start\": \"2022-07-01T16:08:12.038Z\", \"end\": \"2022-07-01T16:08:12.061Z\", \"businessKey\": null, \"error\": null }, ] } } Internally, workflows are referenced as processes, therefore the processId is the workflow ID and processName is the workflow name. Transform the response to the transform expression. When you transform the response, note that the response includes the columns metdata for the data set. Example transform expression to retrieve fields from JSON response { \"columns\" :[ {\"id\": \"Workflow Id\", \"type\": \"label\"}, {\"id\": \"Workflow Name\", \"type\": \"label\"}, {\"id\": \"State\", \"type\": \"label\"}, {\"id\": \"Start\", \"type\": \"label\"}, {\"id\": \"End\", \"type\": \"label\"}, {\"id\": \"Business Key\", \"type\": \"label\"}, {\"id\": \"Error\", \"type\": \"label\"} ], \"values\" : $.data.ProcessInstances.[ processId, processName, state, start, end, businessKey ? businessKey : \"\", error ? error.message : \"\"] } Create your dashboard using the transform expression and the URL mentioned in the previous step. Example dashboard created using Data Index datasets: - uuid: workflows url: http://localhost:8180/graphql/?query=%7BProcessInstances%7BprocessId%20processName%20state%20start%20end%20businessKey%20error%7Bmessage%7D%7D%7D%0A expression: >- { \"columns\" :[ {\"id\": \"Workflow Id\", \"type\": \"label\"}, {\"id\": \"Workflow Name\", \"type\": \"label\"}, {\"id\": \"State\", \"type\": \"label\"}, {\"id\": \"Start\", \"type\": \"label\"}, {\"id\": \"End\", \"type\": \"label\"}, {\"id\": \"Business Key\", \"type\": \"label\"}, {\"id\": \"Error\", \"type\": \"label\"} ], \"values\" : $.data.ProcessInstances.[ processId, processName, state, start, end, businessKey ? businessKey : \"\", error ? error.message : \"\"] } pages: - components: - settings: type: BARCHART lookup: uuid: workflows group: - columnGroup: source: State functions: - source: State - source: State function: COUNT - settings: lookup: uuid: workflows The previous example of dashboard contains bar chart that counts the workflow instances by State and lists all the dashboards in a table. Following is the graphical dashboard resulted from the previous example: Figure 4. Example dashboard created using Data Index For more examples of dashboards, see Dashbuilder website. Creating your first workflow service If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Displaying Workflow Data in Dashboards","component":"serverlessworkflow","version":"1.42.0.Final","name":"serverless-dashboard-with-runtime-data","url":"/serverlessworkflow/latest/integrations/serverless-dashboard-with-runtime-data.html","titles":[{"text":"Dashboards for workflows","hash":"con-sw-dashboard","id":1},{"text":"Building dashboards using metrics","hash":"proc-sw-dashboard-metrics","id":2},{"text":"Building dashboards using Data Index","hash":"proc-sw-dashboard-data-index","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"27":{"id":27,"text":"The Job Service facilitates the scheduled execution of tasks in a cloud environment. These tasks are implemented by independent services, and can be started by using any of the Job Service supported interaction modes, based on Http calls or Knative Events delivery. To schedule the execution of a task you must create a Job, that is configured with the following information: Schedule: the job triggering periodicity. Recipient: the entity that is called on the job execution for the given interaction mode, and receives the execution parameters. In the context of the Kogito Serverless Workflows, the Job Service is responsible for controlling the execution of the time-triggered actions. And thus, all the time-base states that you can use in a workflow, are handled by the interaction between the workflow and the Job Service. For example, every time the workflow execution reaches a state with a configured timeout, a corresponding job is created in the Job Service, and when the timeout is met, a http callback is executed to notify the workflow. To set up this integration you can use different communication alternatives, that must be configured by combining the Job Service and the Quarkus Workflow Project configurations. If the project is not configured to use the Job Service, all time-based actions will use an in-memory implementation of that service. However, this setup must not be used in production, since every time the application is restarted, all the timers are lost. This last is not suited for serverless architectures, where the applications might scale to zero at any time, etc. Since the main goal of the Job Service is to work with the active jobs, such as the scheduled jobs that needs to be executed, when a job reaches a final state, it is removed from the Job Service. However, in some cases where you want to keep the information about the jobs in a permanent repository, you can configure the Job Service to produce status change events, that can be collected by the Data Index Service, where they can be indexed and made available by GraphQL queries. To execute the Job Service in your docker or kubernetes environment, you must use the following image: kogito-jobs-service-allinone In the next topics you can see the different configuration parameters that you must use, for example, to configure the persistence mechanism, the eventing system, etc. More information on this image can be found here. We recommend that you follow this procedure: Identify the persistence mechanism to use and see the required configuration parameters. Identify if the Eventing API is required for your needs and see the required configuration parameters. Identify if the project containing your workflows is configured with the appropriate Job Service Quarkus Extension. Finally, to run the image, you must use the environment variables exposed by the image, and other configurations that you can set using additional environment variables or using system properties with java like names. Variable Description SCRIPT_DEBUG Enable debug level of the image and its operations. JOBS_SERVICE_PERSISTENCE Any of the following values: postgresql, ephemeral, or infinispan to select the persistence mechanism to use, see. If used, these values must always be passed as environment variables. To configure the image by using environment variables you must pass one environment variable per each parameter. Job Service image configuration for docker execution example docker run -it -e JOBS_SERVICE_PERSISTENCE=postgresql -e VARIABLE_NAME=value quay.io/kiegroup/kogito-jobs-service-allinone:latest Job Service image configuration for Kubernetes execution example spec: containers: - name: jobs-service-postgresql image: quay.io/kiegroup/kogito-jobs-service-allinone-nightly:latest imagePullPolicy: Always ports: - containerPort: 8080 name: http protocol: TCP env: # Set the image parameters as environment variables in the container definition. - name: KUBERNETES_NAMESPACE valueFrom: fieldRef: fieldPath: metadata.namespace - name: JOBS_SERVICE_PERSISTENCE value: \"postgresql\" - name: QUARKUS_DATASOURCE_USERNAME value: postgres - name: QUARKUS_DATASOURCE_PASSWORD value: pass - name: QUARKUS_DATASOURCE_JDBC_URL value: jdbc:postgresql://timeouts-showcase-database:5432/postgres?currentSchema=jobs-service - name: QUARKUS_DATASOURCE_REACTIVE_URL value: postgresql://timeouts-showcase-database:5432/postgres?search_path=jobs-service This is the recommended approach when you execute the Job Service in kubernetes. The timeouts showcase example Quarkus Workflow Project with standalone services contains an example of this configuration, see. To configure the image by using system properties you must pass one property per parameter, however, in this case, all these properties are passed as part of a single environment with the name JAVA_OPTIONS. Job Service image configuration for docker execution example docker run -it -e JOBS_SERVICE_PERSISTENCE=postgresql -e JAVA_OPTIONS='-Dmy.sys.prop1=value1 -Dmy.sys.prop2=value2' \\ quay.io/kiegroup/kogito-jobs-service-allinone:latest I case that you need to convert a java like property name, to the corresponding environment variable name, to use the environment variables configuration alternative, you must apply the naming convention defined in the Quarkus Configuration Reference. For example, the name quarkus.datasource.jdbc.url must be converted to QUARKUS_DATASOURCE_JDBC_URL. Global configurations that affects the job execution retries, startup procedure, etc. Using environment variables Using system properties with java like names Name Description Default KOGITO_JOBS_SERVICE_BACKOFFRETRYMILLIS A long value that defines the retry back-off time in milliseconds between job execution attempts, in case the execution fails. 1000 KOGITO_JOBS_SERVICE_MAXINTERVALLIMITTORETRYMILLIS A long value that defines the maximum interval in milliseconds when retrying to execute jobs, in case the execution fails. 60000 Name Description Default kogito.jobs-service.backoffRetryMillis A long value that defines the retry back-off time in milliseconds between job execution attempts, in case the execution fails. 1000 kogito.jobs-service.maxIntervalLimitToRetryMillis A long value that defines the maximum interval in milliseconds when retrying to execute jobs, in case the execution fails. 60000 An important configuration aspect of the Job Service is the persistence mechanism, it is where all the jobs information is stored, and guarantees no information is lost upon service restarts. The Job Service image is shipped with the PostgreSQL, Ephemeral, and Infinispan persistence mechanisms, that can be switched by setting the JOBS_SERVICE_PERSISTENCE environment variable to any of these values postgresql, ephemeral, or infinispan. If not set, it defaults to the ephemeral option. The kogito-jobs-service-allinone image is a composite packaging that include one different image per each persistence mechanism, making it clearly bigger sized than the individual ones. If that size represents an issue in your installation you can use the individual ones instead. Finally, if you use this alternative, the JOBS_SERVICE_PERSISTENCE must not be used, since the persistence mechanism is auto-determined. These are the individual images: kogito-jobs-service-postgresql, kogito-jobs-service-ephemeral, or kogito-jobs-service-infinispan PostgreSQL is the recommended database to use with the Job Service. Additionally, it provides an initialization procedure that integrates Flyway for the database initialization. Which automatically controls the database schema, in this way, the tables are created or updated by the service when required. In case you need to externally control the database schema, you can check and apply the DDL scripts for the Job Service in the same way as described in Manually executing scripts guide. To configure the PostgreSQL persistence you must provide these configurations: Using environment variables Using system properties with java like names Variable Description Example value JOBS_SERVICE_PERSISTENCE Configure the persistence mechanism that must be used. postgresql QUARKUS_DATASOURCE_USERNAME Username to connect to the database. postgres QUARKUS_DATASOURCE_PASSWORD Password to connect to the database pass QUARKUS_DATASOURCE_JDBC_URL JDBC datasource url used by Flyway to connect to the database. jdbc:postgresql://timeouts-showcase-database:5432/postgres?currentSchema=jobs-service QUARKUS_DATASOURCE_REACTIVE_URL Reactive datasource url used by the Job Service to connect to the database. postgresql://timeouts-showcase-database:5432/postgres?search_path=jobs-service Variable Description Example value JOBS_SERVICE_PERSISTENCE Always an environment variable postgresql quarkus.datasource.username Username to connect to the database. postgres quarkus.datasource.password Password to connect to the database pass quarkus.datasource.jdbc.url JDBC datasource url used by Flyway to connect to the database. jdbc:postgresql://timeouts-showcase-database:5432/postgres?currentSchema=jobs-service quarkus.datasource.reactive.url Reactive datasource url used by the Job Service to connect to the database. postgresql://timeouts-showcase-database:5432/postgres?search_path=jobs-service The timeouts showcase example Quarkus Workflow Project with standalone services, shows how to run a PostgreSQL based Job Service as a Kubernetes deployment. In your local environment you might have to change some of these values to point to your own PostgreSQL database. The Ephemeral persistence mechanism is based on an embedded PostgresSQL database and does not require any external configuration. However, the database is recreated on each service restart, and thus, it must be used only for testing purposes. Variable Description Example value JOBS_SERVICE_PERSISTENCE Configure the persistence mechanism that must be used. ephemeral If the image is started by not configuring any persistence mechanism, the Ephemeral will be defaulted. To configure the Infinispan persistence you must provide these configurations: Using environment variables Using system properties with java like names Variable Description Example value JOBS_SERVICE_PERSISTENCE Configure the persistence mechanism that must be used. infinispan QUARKUS_INFINISPAN_CLIENT_HOSTS Sets the host name/port to connect to. Each one is separated by a semicolon. host1:11222;host2:11222 QUARKUS_INFINISPAN_CLIENT_USE_AUTH Enables or disables authentication. Set it to false when connecting to an Infinispan Server without authentication. The enablement of this parameter depends on your local infinispan installation. If not set, the default value is true. QUARKUS_INFINISPAN_CLIENT_SASL_MECHANISM Sets SASL mechanism used by authentication. For more information about this parameter, see Quarkus Infinispan Client Reference. When the authentication is enabled the default value is DIGEST-MD5. QUARKUS_INFINISPAN_CLIENT_AUTH_REALM Sets realm used by authentication. When the authentication is enabled the default value is default. QUARKUS_INFINISPAN_CLIENT_USERNAME Sets username used by authentication. Use this property if the authentication is enabled. QUARKUS_INFINISPAN_CLIENT_PASSWORD Sets password used by authentication. Use this property if the authentication is enabled. Variable Description Example value JOBS_SERVICE_PERSISTENCE Always an environment variable infinispan quarkus.infinispan-client.hosts Sets the host name/port to connect to. Each one is separated by a semicolon. host1:11222;host2:11222 quarkus.infinispan-client.use-auth Enables or disables authentication. Set it to false when connecting to an Infinispan Server without authentication. The enablement of this parameter depends on your local infinispan installation. If not set, the default value is true. quarkus.infinispan-client.sasl-mechanism Sets SASL mechanism used by authentication. For more information about this parameter, see Quarkus Infinispan Client Reference. When the authentication is enabled the default value is DIGEST-MD5. quarkus.infinispan-client.auth-realm Sets realm used by authentication. When the authentication is enabled the default value is default. quarkus.infinispan-client.username Sets username used by authentication. Use this property if the authentication is enabled. quarkus.infinispan-client.password Sets password used by authentication. Use this property if the authentication is enabled. The Infinispan client configuration parameters that you must configure depends on your local Infinispan service. And thus, the table above shows only a sub-set of all the available options. To see the list of all the options supported by the quarkus infinispan client you must read the Quarkus Infinispan Client Reference. The Job Service provides a Cloud Event based API that can be used to create and delete jobs. This API is useful in deployment scenarios where you want to use an event based communication from the workflow runtime to the Job Service. For the transport of these events you can use the knative eventing system or the kafka messaging system. By default, the Job Service Eventing API is prepared to work in a knative eventing system. This means that by adding no additional configurations parameters, it’ll be able to receive cloud events via the knative eventing system to manage the jobs. However, you must still prepare your knative eventing environment to ensure these events are properly delivered to the Job Service, see knative eventing supporting resources. Finally, the only configuration parameter that you must set, when needed, is to enable the propagation of the Job Status Change events, for example, if you want to register these events in the Data Index Service Using environment variables Using system properties with java like names Variable Description Default value KOGITO_JOBS_SERVICE_HTTP_JOB_STATUS_CHANGE_EVENTS true to establish if the Job Status Change events must be propagated. If you set this value to true you must be sure that the sink binding was created. false Variable Description Default value kogito.jobs-service.http.job-status-change-events true to establish if the Job Status Change events must be propagated. If you set this value to true you must be sure that the sink binding was created. false To ensure the Job Service receives the knative events to manage the jobs, you must create the create job events and delete job events triggers shown in the diagram below. Additionally, if you have enabled the Job Status Change events propagation you must create the sink binding. Figure 1. Knative eventing supporting resources The following snippets shows an example on how you can configure these resources. Consider that these configurations might need to be adjusted to your local kubernetes cluster. We recommend that you visit this example Quarkus Workflow Project with standalone services to see a full setup of all these configurations. Create Job event trigger configuration example apiVersion: eventing.knative.dev/v1 kind: Trigger metadata: name: jobs-service-postgresql-create-job-trigger spec: broker: default filter: attributes: type: job.create subscriber: ref: apiVersion: v1 kind: Service name: jobs-service-postgresql uri: /v2/jobs/events Delete Job event trigger configuration example apiVersion: eventing.knative.dev/v1 kind: Trigger metadata: name: jobs-service-postgresql-delete-job-trigger spec: broker: default filter: attributes: type: job.delete subscriber: ref: apiVersion: v1 kind: Service name: jobs-service-postgresql uri: /v2/jobs/events For more information about triggers, see Knative Triggers. Job Service sink binding configuration example apiVersion: sources.knative.dev/v1 kind: SinkBinding metadata: name: jobs-service-postgresql-sb spec: sink: ref: apiVersion: eventing.knative.dev/v1 kind: Broker name: default subject: apiVersion: apps/v1 kind: Deployment selector: matchLabels: app.kubernetes.io/name: jobs-service-postgresql app.kubernetes.io/version: 2.0.0-SNAPSHOT For more information about sink bindings, see Knative Sink Bindings. To enable the Job Service Eventing API via the Kafka messaging system you must provide these configurations: Using environment variables Using system properties with java like names Variable Description Default value QUARKUS_PROFILE Set the quarkus profile with the value kafka-events_support to enable the kafka messaging based Job Service Eventing API. By default the kafka eventing api is disabled. KOGITO_JOBS_SERVICE_KAFKA_JOB_STATUS_CHANGE_EVENTS true to establish if the Job Status Change events must be propagated. true when the kafka-events-support profile is set. KAFKA_BOOTSTRAP_SERVERS A comma-separated list of host:port to use for establishing the initial connection to the Kafka cluster. localhost:9092 when the kafka-events-support profile is set. MP_MESSAGING_INCOMING_KOGITO_JOB_SERVICE_JOB_REQUEST_EVENTS_V2_TOPIC Kafka topic for events API incoming events. I general you don’t need to change this value. kogito-job-service-job-request-events-v2 when the kafka-events_support profile is set. MP_MESSAGING_OUTGOING_KOGITO_JOB_SERVICE_JOB_STATUS_EVENTS_TOPIC Kafka topic for job status change outgoing events. I general you don’t need to change this value. kogito-jobs-events when the kafka-events_support profile is set. Variable Description Default value quarkus.profile Set the quarkus profile with the value kafka-events_support to enable the kafka messaging based Job Service Eventing API. By default the kafka eventing api is disabled. kogito.jobs-service.kafka.job-status-change-events true to establish if the Job Status Change events must be propagated. true when the kafka-events-support profile is set. kafka.bootstrap.servers A comma-separated list of host:port to use for establishing the initial connection to the Kafka cluster. localhost:9092 when the kafka-events-support profile is set. mp.messaging.incoming.kogito-job-service-job-request-events-v2.topic Kafka topic for events API incoming events. I general you don’t need to change this value. kogito-job-service-job-request-events-v2 when the kafka-events_support profile is set. mp.messaging.outgoing.kogito-job-service-job-status-events.topic Kafka topic for job status change outgoing events. I general you don’t need to change this value. kogito-jobs-events when the kafka-events_support profile is set. Depending on your Kafka messaging system configuration you might need to apply additional Kafka configurations to connect to the Kafka broker, etc. To see the list of all the supported configurations you must read the Quarkus Apache Kafka Reference Guide. Currently, the Job Service is a singleton service, and thus, just one active instance of the service can be scheduling and executing the jobs. To avoid issues when it is deployed in the cloud, where it is common to eventually have more than one instance deployed, the Job Service supports a leader instance election process. Only the instance that becomes the leader activates the external communication to receive and schedule jobs. All the instances that are not leaders, stay inactive in a wait state and try to become the leader continuously. When a new instance of the service is started, it is not set as a leader at startup time but instead, it starts the process to become one. When an instance that is the leader for any issue stays unresponsive or is shut down, one of the other running instances becomes the leader. Figure 2. Job Service leader election This leader election mechanism uses the underlying persistence backend, which currently is only supported in the PostgreSQL implementation. There is no need for any configuration to support this feature, the only requirement is to have the supported database with the data schema up-to-date as described in the PostgreSQL section. In case the underlying persistence does not support this feature, you must guarantee that just one single instance of the Job Service is running at the same time. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Introduction","component":"serverlessworkflow","version":"1.42.0.Final","name":"core-concepts","url":"/serverlessworkflow/latest/job-services/core-concepts.html","titles":[{"text":"Integration with the Workflows","hash":"integration-with-the-workflows","id":1},{"text":"Jobs life-span","hash":"_jobs_life_span","id":2},{"text":"Executing","hash":"executing","id":3},{"text":"Exposed environment variables","hash":"exposed-environment-variables","id":4},{"text":"Using environment variables","hash":"using-environent-variables","id":5},{"text":"Using system properties with java like names","hash":"using-java-like-system-properties","id":6},{"text":"Global configurations","hash":"job-service-global-configurations","id":7},{"text":"Persistence","hash":"job-service-persistence","id":8},{"text":"PostgreSQL","hash":"job-service-postgresql","id":9},{"text":"Ephemeral","hash":"job-service-ephemeral","id":10},{"text":"Infinispan","hash":"job-service-infinispan","id":11},{"text":"Eventing API","hash":"job-service-eventing-api","id":12},{"text":"Knative eventing","hash":"knative-eventing","id":13},{"text":"Knative eventing supporting resources","hash":"knative-eventing-supporting-resources","id":14},{"text":"Kafka messaging","hash":"kafka-messaging","id":15},{"text":"Leader election","hash":"_leader_election","id":16},{"text":"Found an issue?","hash":"_found_an_issue","id":17}]},"28":{"id":28,"text":"The interaction between the workflows and the Job Service is handled by the different Job Service Quarkus Extensions. Each extension is designed to work with a different communication alternative. For example, you can select if your workflows must interact with the Job Service by sending cloud events over the knative eventing system or the kafka messaging system, or simply by executing direct REST calls. Finally, for the interaction work, you must configure your Quarkus Workflow Project with the extension of your choice. We recommend that you follow this procedure: Identify the communication alternative that best fits your scenario. Be sure that the Job Service is properly configured to support that alternative. This is very important if you want to use knative events or kafka messages to communicate with it. Configure your Quarkus Workflow Project with the corresponding extension. If your workflows are not using timer-based actions, like timeouts, there is no need to add such an extension. To interact with the Job Service by sending cloud events over the knative eventing system you must follow these steps: Be sure that you have read the Consuming and producing events on Knative Eventing guide, and that you have configured the project accordingly. Add the kogito-addons-quarkus-jobs-knative-eventing extension to your Quarkus Workflow Project using any of the following alternatives: Manually Apache Maven Quarkus CLI org.kie.kogito kogito-addons-quarkus-jobs-knative-eventing mvn quarkus:add-extension -Dextensions=\"kogito-addons-quarkus-jobs-knative-eventing\" quarkus extension add kogito-addons-quarkus-jobs-knative-eventing Add the following configurations to the application.properties file of your project. mp.messaging.outgoing.kogito-job-service-job-request-events.connector=quarkus-http mp.messaging.outgoing.kogito-job-service-job-request-events.url=${K_SINK:http://localhost:8280/v2/jobs/events} mp.messaging.outgoing.kogito-job-service-job-request-events.method=POST The K_SINK environment variable is automatically generated by the combination of the knative ecosystem and the SinkBinding definition that will be automatically generated in the kogito.yml file. If this variable is not present, the default value http://localhost:8280/v2/jobs/events is used instead, this can be useful in development environments if you are executing the Job Service as a standalone service. Build your project and locate the automatically generated kogito.yml and knative.yml files in the /target/kubernetes directory of your project, see. mvn clean install Use the generated files to deploy your workflow application in the Kubernetes cluster using the following commands: kubectl apply -f target/kogito.yml kubectl apply -f target/knative.yml You can see a full example of this interaction mode configuration in the Quarkus Workflow Project with standalone services example project. To interact with the Job Service by sending cloud events over the kafka messaging system you must follow these steps: Be sure that you have read the Consuming and producing events with Kafka guide, and you have configured the project accordingly. Add the quarkus-smallrye-reactive-messaging-kafka and kogito-addons-quarkus-jobs-messaging extensions to your Quarkus Workflow Project using any of the following alternatives. Manually Apache Maven Quarkus CLI io.quarkus quarkus-smallrye-reactive-messaging-kafka org.kie.kogito kogito-addons-quarkus-jobs-messaging mvn quarkus:add-extension -Dextensions=\"quarkus-smallrye-reactive-messaging-kafka,kogito-addons-quarkus-jobs-messaging\" quarkus extension add quarkus-smallrye-reactive-messaging-kafka kogito-addons-quarkus-jobs-messaging Add the following configurations to the application.properties file of your project. mp.messaging.outgoing.kogito-job-service-job-request-events.connector=smallrye-kafka mp.messaging.outgoing.kogito-job-service-job-request-events.topic=kogito-job-service-job-request-events-v2 mp.messaging.outgoing.kogito-job-service-job-request-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer Build and deploy your workflow application using any of the available procedures. To interact with the Job Service by executing direct REST calls you must follow these steps: Add the kogito-addons-quarkus-jobs-management extension to your Quarkus Workflow Project using any of the following alternatives. Manually Apache Maven Quarkus CLI org.kie.kogito kogito-addons-quarkus-jobs-management mvn quarkus:add-extension -Dextensions=\"kogito-addons-quarkus-jobs-management\" quarkus extension add kogito-addons-quarkus-jobs-management Add the following configuration to the application.properties file of your project. kogito.jobs-service.url=http://localhost:8280 When you deploy your project in a Kubernetes cluster, you must configure the kogito.jobs-service-url with the cloud URL of the Job Service. In this case, you can also use an environment variable with the name KOGITO_JOBS_SERVICE_URL and pass it to the corresponding container, etc. Build and deploy your workflow application using any of the available procedures. To facilitate the development and testing stage of your workflows, this extension provides an embedded Job Service instance that executes in the same runtime as your workflows, and thus, requires no additional configurations. The only consideration is that it must not be used for production installations. To use this extension you must: Add the kogito-addons-quarkus-jobs-service-embedded extension to your Quarkus Workflow Project using any of the following alternatives. Manually Apache Maven Quarkus CLI org.kie.kogito kogito-addons-quarkus-jobs-service-embedded mvn quarkus:add-extension -Dextensions=\"kogito-addons-quarkus-jobs-management\" quarkus extension add kogito-addons-quarkus-jobs-management Build and deploy your workflow application using any of the available procedures. You can see a full example of Job Service embedded usage in the Quarkus Workflow Project with embedded services example project. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Job Service Quarkus Extensions","component":"serverlessworkflow","version":"1.42.0.Final","name":"quarkus-extensions","url":"/serverlessworkflow/latest/job-services/quarkus-extensions.html","titles":[{"text":"Knative eventing interaction","hash":"kogito-addons-quarkus-jobs-knative-eventing","id":1},{"text":"Kafka messaging interaction","hash":"kogito-addons-quarkus-jobs-messaging","id":2},{"text":"REST call interaction","hash":"kogito-addons-quarkus-jobs-management","id":3},{"text":"Job Service Embedded","hash":"_job_service_embedded","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"29":{"id":29,"text":"This document describes how you can test your integrated workflow application using PostgreSQL persistence. The example described in this document is based on the serverless-workflow-callback-quarkus example application. This document describes the process of launching and testing the artifact that is produced by the Quarkus builds, and verifying the interaction of the artifact with a PostgreSQL database instance. To perform this scenario and verify the service behavior, the following Quarkus annotations and tools are used: @QuarkusIntegrationTest: This annotation is used to launch and test the artifact produced by the Serverless Workflow Quarkus build. For more information, see Testing Quarkus application - Using @QuarkusIntegrationTest in Quarkus documentation. Quarkus Dev Services: This facilitates writing integration tests that need launching services to support the workflow application. For more information, see Testing Quarkus application - launching containers in Quarkus documentation. @QuarkusIntegrationTest works immediately with the additional containers that are launched using Quarkus Dev Services. You can test your workflow application using PostgreSQL persistence. Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. Workflow application persistence is enabled using PostgreSQL. For more information, see Running workflow service using PostgreSQL. Docker is installed. Procedure Add the required test dependencies to the pom.xml file of your workflow application: Dependencies required for HTTP-based testing in JVM mode io.quarkus quarkus-junit5 test io.rest-assured rest-assured test Add awaitility dependency in pom.xml org.awaitility awaitility test The awaitility dependency allows the test to express the time expectations of an asynchronous system. For more information, see Awaitility website. Check the dependencies of PostgreSQL resources. The Quarkus Dev Services for Databases is enabled when a reactive or JDBC data source extension is present in the workflow application. Ensure that the pom.xml file of your workflow application contains the required dependency for PostgreSQL resources. JDBC persistence add-on dependency org.kie.kogito kogito-addons-quarkus-persistence-jdbc Quarkus JDBC PostgreSQL dependency io.quarkus quarkus-jdbc-postgresql Quarkus Agroal data source dependency io.quarkus quarkus-agroal To run the integration tests, add Apache Maven Failsafe plug-in in the pom.xml file of your workflow application. maven-failsafe-plugin in pom.xml plug-in section maven-failsafe-plugin ${version.failsafe.plugin} org.jboss.logmanager.LogManager ${maven.home} integration-test verify For more information about maven-failsafe-plugin, see Maven Failsafe Plugin documentation. Enable Quarkus Database Dev Services. The additional containers contain a full set of default configurations, including PostgreSQL Docker image name, default user, and default password. The required configuration to link the workflow application with the Quarkus Dev PostgreSQL container is automatically added to the integration test. Quarkus provides the properties such as quarkus.datasource.reactive.url, quarkus.datasource.jdbc.url, quarkus.datasource.username, or quarkus.datasource.password, when you start the container. For more information, see Quarkus Dev Services for Databases in Quarkus documentation. Create a test class and add the test annotations in the test class as shown in the following example: Example integration test annotations in a test class @QuarkusIntegrationTest (1) class CallbackRestIT { (2) static { RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();(3) } @Test void testCallbackRest() { String id = given() (3) .contentType(ContentType.JSON) .accept(ContentType.JSON) .post(\"/callback\") .then() .statusCode(201) .extract() .path(\"id\"); await() (4) .atLeast(1, SECONDS) .atMost(30, SECONDS) .with().pollInterval(1, SECONDS) .untilAsserted(() -> given() .contentType(ContentType.JSON) .accept(ContentType.JSON) .get(\"/callback/{id}\", id) .then() .statusCode(404)); } } 1 Allows launching and testing the artifact that is produced by the Quarkus build. Also, supports testing of a JAR file, a native image, or a container image. 2 Test name ends with 'IT' to identify which test needs to be executed as an integration test. 3 Testing application interactions using REST Assured. 4 await() allows the test to retry the validations until the verifications are declared or until the specified time expectation is expired. Once you specify the required resources and annotations, you can start testing the different interactions with the workflow application as described in Testing your workflow application using REST Assured document. To run the tests, execute the following command: Run the tests mvn clean verify Creating your first workflow service Running a workflow service using PostgreSQL Testing your workflow application using REST Assured Testing a Quarkus application If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Kogito Serverless Workflow integration test using PostgreSQL","component":"serverlessworkflow","version":"1.42.0.Final","name":"integration-tests-with-postgresql","url":"/serverlessworkflow/latest/persistence/integration-tests-with-postgresql.html","titles":[{"text":"Overview","hash":"con-integration-test-overview","id":1},{"text":"Testing a workflow application using PostgreSQL persistence","hash":"proc-test-sw-application-postgresql","id":2},{"text":"Additional resources","hash":"_additional_resources","id":3},{"text":"Found an issue?","hash":"_found_an_issue","id":4}]},"30":{"id":30,"text":"This document describes how you can run your workflow application using PostgreSQL persistence. When your workflow execution requires wait states, then running your workflow application with persistence enabled is a recommended approach. For example, when a process reaches a callback or needs to wait for an event, then the execution of the process is paused and the engine takes a snapshot of the workflow data. The snapshot is persisted in the database as a binary format along with process metadata information. The process metadata information includes process ID, process instance ID, and process version. Runtime persistence is used for storing data, which is required to resume the workflow execution of a process instance. Once a process is completed, the related data is removed from the database. This means that only required data to resume the execution is persisted. In Kogito Serverless Workflow, you can enable persistence using add-ons. This document describes the use of the kogito-addons-quarkus-persistence-jdbc add-on, which is based on Java Database Connectivity (JDBC) along with PostgreSQL. The kogito-addons-quarkus-persistence-jdbc add-on also extends on the Quarkus capabilities and you can use the available features directly from Quarkus JDBC support. For more information about Quarkus and JDBC, see Quarkus Datasources. You can also see the serverless-workflow-callback-quarkus example application in GitHub repository. To execute the serverless-workflow-callback-quarkus example application, you can follow the instructions mentioned in the README file. To clone the kogito-example repository, use the following command: Clone kogito-examples repository git clone git@github.com:kiegroup/kogito-examples.git Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. Docker is installed. PostgreSQL is installed. For information about PostgreSQL installation and configuration, see PostgreSQL documentation. This document relies on running PostgreSQL as a Docker service, even though PostgreSQL installation is mentioned as a prerequisite. Procedure Add required dependencies to the pom.xml file of your project to use the persistence add-on: JDBC persistence add-on org.kie.kogito kogito-addons-quarkus-persistence-jdbc Quarkus JDBC PostgreSQL io.quarkus quarkus-jdbc-postgresql Quarkus Agroal data source io.quarkus quarkus-agroal Add the following properties to the application.properties file of your project: Persistence property kogito.persistence.type=jdbc Quarkus properties quarkus.datasource.db-kind=postgresql quarkus.datasource.username=postgres quarkus.datasource.password=pass quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres Create PostgreSQL database schema. The persistence add-on uses Flyway to create the database schema. To enable the database schema creation during the runtime startup, you must set the following properties in the application.properties file. quarkus.flyway.migrate-at-start=true quarkus.datasource.db-kind=postgresql You can find more details regarding the PostgreSQL database schema migration in the Flyway migration guide. Optional: To handle the concurrent requests to shared workflow instances, enable the persistence-enabled optimistic locking for concurrency control using the version field in the database. Add kogito.persistence.optimistic.lock=true property in the application.properties file of your project to enable the optimistic locking. Change the version in the workflow file. Example workflow file { \"id\": \"applicantworkflow\", \"name\": \"Applicant Workflow\", \"version\": \"1.0\" } The versioning strategy is used to allow different workflow applications to run different versions of a process at the same time. The different versions of a process share the same database. This is useful when you migrate a process from one version to another. When allowing workflow instances to finish executing, a new version can be deployed using a new workflow application setup. By default, the engine considers the version specified in the workflow file as the current version of the asset. Therefore, you need to manually change the version in the workflow file, making the engine consider the specified version as a new version. As an alternative, you can set the kogito.workflow.version-strategy=project property in the application.properties file of your project. This enables the engine to consider the Maven or Gradle project version as the version of all workflows in the project. For instance, when you release a new version of your Maven project, the version in the workflow file is automatically updated. The following table serves as a quick reference of commonly used persistence configuration properties supported in Kogito Serverless Workflow. You can define these properties in the application.properties file of your project. Table 1. Persistence properties Configuration property Type Default value kogito.persistence.type string kogito.persistence.query.timeout.millis long 10000 kogito.persistence.optimistic.lock boolean false kogito.workflow.version-strategy string workflow Kogito Serverless Workflow integration test using PostgreSQL Migrating Your PostgreSQL Database with a Kogito upgrade If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Running a Quarkus Workflow Application using PostgreSQL","component":"serverlessworkflow","version":"1.42.0.Final","name":"persistence-with-postgresql","url":"/serverlessworkflow/latest/persistence/persistence-with-postgresql.html","titles":[{"text":"Persistence configuration quick reference","hash":"ref-postgresql-persistence-configuration","id":1},{"text":"Additional resources","hash":"postgresql-persistence-additional-resources","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"31":{"id":31,"text":"When working with Kogito Serverless Workflow PostgreSQL database, you can either opt to use Flyway or manually upgrade your database via DDL scripts. When you upgrade your Kogito Serverless Workflow version, by default it won’t pick up the latest changes available. Kogito provides a mechanism for migrating your database while updating the Kogito version using the following Flyway properties (default value is false, not upgrade): quarkus.flyway.migrate-at-start=true quarkus.datasource.db-kind=postgresql This will create a schema history table flyway_schema_history in your database to track the version of each database, recording in it every versioned migration file applied to build that version. When using kogito-addons-persistence-jdbc, it is mandatory to set the quarkus.datasource.db-kind property, so that Flyway can locate the appropriate scripts for the database. If you want to migrate manually you can use the Flyway migration CLI tool. Download Flyway migration command-line tool from the Download Flyway Community Edition website. Add the following properties in the /conf/flyway.conf file: flyway.url=jdbc:postgresql://localhost:5432/foobardb flyway.user=foo flyway.password=bar You can specify these options with commands as well. The Flyway CLI will prompt for the username and password if they are missing in the configuration. $ flyway migrate -url=jdbc:postgresql://localhost:5432/foobardb -user=foo -password=bar Download the Kogito DDL zip from this link, choose the correct version, extract the files and use the scripts from the postgresql folder. You can specify the location of the SQL files that need to be migrated using the flyway.locations option. For example, flyway.locations=classpath:com.mycomp.migration,database/migrations,filesystem:/sql-migrations,s3:migrationsBucket,gcs:migrationsBucket You can use the provided SQL scripts in the zip file to migrate the database by executing them one by one. You can find the Kogito DDL scripts by visiting this link. Download the zip file of the scripts from the needed version for the Kogito upgrade. Extract the files. Execute the sql files from postgresql folder. > psql -H host -U username -d database_name -a -f create_table.sql In order to apply migrations to an existing schema. It is necessary to establish the baseline from where Flyway should start executing new migrations. That means, in case your schema already contains a structure and from now on, new changes provided by Kogito should be applied via Flyway integration. In Flyway terms, only migrations above baselineVersion will then be applied. Using below properties you can initialize flyway schema table. quarkus.flyway.baseline-on-migrate=true quarkus.flyway.baseline-version=1.32.0 $ flyway -baselineOnMigrate=\"true\" -baselineVersion=\"1.32.0\" migrate Be careful when enabling this feature as it removes the safety net which ensures that Flyway does not migrate the wrong database in case of a configuration mistake. Baseline Migrations Documentation. Existing Database Setup Documentation. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"PostgreSQL Database Migration","component":"serverlessworkflow","version":"1.42.0.Final","name":"postgresql-flyway-migration","url":"/serverlessworkflow/latest/persistence/postgresql-flyway-migration.html","titles":[{"text":"How to migrate","hash":"_how_to_migrate","id":1},{"text":"Migrate using Flyway Config","hash":"_migrate_using_flyway_config","id":2},{"text":"Migrate using Flyway CLI","hash":"_migrate_using_flyway_cli","id":3},{"text":"Manually executing scripts","hash":"manually-executing-scripts","id":4},{"text":"Baseline migration","hash":"_baseline_migration","id":5},{"text":"Baseline using Quarkus Configuration:","hash":"_baseline_using_quarkus_configuration","id":6},{"text":"Baseline using Flyway CLI:","hash":"_baseline_using_flyway_cli","id":7},{"text":"More details on Flyway migrations","hash":"_more_details_on_flyway_migrations","id":8},{"text":"Found an issue?","hash":"_found_an_issue","id":9}]},"32":{"id":32,"text":"This document describes the supported authentication types and how to configure them to access the OpenAPI service operations that are used in workflows. For information about orchestrating and configuring the OpenAPI based services, you must see the following documents: Orchestrating the OpenAPI services Configuring the OpenAPI services endpoints The OpenAPI support for a workflow is based on the Quarkus OpenAPI generator extension. For more information about Quarkus OpenAPI generator, see Quarkus - OpenAPI Generator. According to the OpenAPI specification, you can secure an OpenAPI service operation by using a security scheme. These security schemes are defined in the Security Scheme Object definitions of the OpenAPI specification file. The security scheme type defined for an OpenAPI service operation is used to identify the required configuration, when a workflow invokes the same operation. The following shows the example of security scheme definitions: Example security-example.json file \"securitySchemes\": { \"http-basic-example\": { \"type\": \"http\", \"scheme\": \"basic\" } \"api-key-example\": { \"type\": \"apiKey\", \"name\": \"my-example-key\", \"in\": \"header\" } } If the OpenAPI specification file contains securitySchemes definitions, but not the Security Requirement Object definitions, the generator is configured to create the security requirement objects by default. In this case, for all the operations without a security requirement, the default one is created. Note that the property value must match the name of a security scheme object definition, such as http-basic-example or api-key-example in the previous securitySchemes list. Description Property key Example Create security for the referenced security scheme quarkus.openapi-generator.codegen.default.security.scheme quarkus.openapi-generator.codegen.default.security.scheme=http-basic-example To configure the credentials that are used to access the secured OpenAPI service operations and related parameters, you must use the application properties that are related to the security schemes. To compose the configuration keys, use the following format: Format for configuration keys quarkus.openapi-generator.[filename].auth.[security_scheme_name].[auth_property_name] The previous format includes the following parameters: filename is the sanitized name of the file containing the OpenAPI specification, such as security_example_json. security_scheme_name is the sanitized name of the security scheme object definition in the OpenAPI specification file, such as http_basic_example or api_key_example. auth_property_name is the name of the property to configure, such as username. This property depends on the defined security scheme type. To sanitize the previous parameters, you can follow the Environment Variables Mapping Rules from Microprofile Configuration. In the mapping rules, any non-alphabetic character is replaced by an underscore (_). The security schemes defined in an OpenAPI specification file are global to all the operations that are available in the same file. This means that the configurations set for a particular security scheme also apply to the other secured operations. You can use the alternatives defined in the Quarkus configuration reference guide to configure the required properties. A common usage is to define environment variables to set the authentication secrets. For a complete example, see Orchestration of third-party services using OAuth 2.0 authentication. The following example shows security-example.json file, defining a sayHelloBasic operation, which is secured using the http-basic-example security scheme and supported configurations: Example security-example.json file for HTTP authentication { \"openapi\": \"3.1.0\", \"info\": { \"title\": \"Http Basic Scheme Example\", \"version\": \"1.0\" }, \"paths\": { \"/hello-with-http-basic\": { \"get\": { \"operationId\": \"sayHelloBasic\", \"responses\": { \"200\": { \"description\": \"OK\", \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } } } }, \"security\": [{\"http-basic-example\" : []}] } } }, \"components\": { \"securitySchemes\": { \"http-basic-example\": { \"type\": \"http\", \"scheme\": \"basic\" } } } } The following table shows the supported configurations that are used to secure the sayHelloBasic operation in the previous example: Table 1. Supported configuration examples for HTTP authentication Description Property key Example Username credentials quarkus.openapi-generator.[filename].auth.[security_scheme_name].username quarkus.openapi-generator.security_example_json.auth.http_basic_example.username=MY_USER Password credentials quarkus.openapi-generator.[filename].auth.[security_scheme_name].password quarkus.openapi-generator.security_example_json.auth.http_basic_example.password=MY_PASSWD The following example shows security-example.json file, defining a sayHelloBearer operation, which is secured using the http-bearer-example security scheme and supported configurations: Example security-example.json file for Bearer Token authentication { \"openapi\": \"3.1.0\", \"info\": { \"title\": \"Http Bearer Scheme Example\", \"version\": \"1.0\" }, \"paths\": { \"/hello-with-http-bearer\": { \"get\": { \"operationId\": \"sayHelloBearer\", \"responses\": { \"200\": { \"description\": \"OK\", \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } } } }, \"security\": [{\"http-bearer-example\" : []}] } } }, \"components\": { \"securitySchemes\": { \"http-bearer-example\": { \"type\": \"http\", \"scheme\": \"bearer\" } } } } The following table shows the supported configurations that are used to secure the sayHelloBearer operation in the previous example: Table 2. Supported configuration examples for Bearer Token authentication Description Property key Example Bearer Token quarkus.openapi-generator.[filename].auth.[security_scheme_name].bearer-token quarkus.openapi-generator.security_example_json.auth.http_bearer_example.bearer-token=MY_TOKEN The following example shows security-example.json file, defining a sayHelloApiKey operation, which is secured using the api-key-example security scheme and supported configurations: Example security-example.json file for API key authentication { \"openapi\": \"3.1.0\", \"info\": { \"title\": \"Api Key Scheme Example\", \"version\": \"1.0\" }, \"paths\": { \"/hello-with-api-key\": { \"get\": { \"operationId\": \"sayHelloApiKey\", \"responses\": { \"200\": { \"description\": \"OK\", \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } } } }, \"security\": [{\"api-key-example\" : []}] } } }, \"components\": { \"securitySchemes\": { \"api-key-example\": { \"type\": \"apiKey\", \"name\": \"api-key-name\", \"in\": \"header\" } } } } The following table shows the supported configurations that are used to secure the sayHelloApiKey operation in the previous example: Table 3. Supported configuration examples for API key authentication Description Property key Example API Key quarkus.openapi-generator.[filename].auth.[security_scheme_name].api-key quarkus.openapi-generator.security_example_json.auth.api_key_example.api-key=MY_KEY The API key scheme type contains an additional name property that configures the key name to use when the Open API service is invoked. Also, the format to pass the key depends on the value of the in property. When the value is header, the key is passed as an HTTP request parameter. When the value is cookie, the key is passed as an HTTP cookie. When the value is query, the key is passed as an HTTP query parameter. However, this is automatically managed without additional configurations. Following the previous example, the API key is passed as an http request parameter, such as api-key-name with the value MY_KEY. The following example shows security-example.json file, defining a sayHelloOauth2 operation, which is secured using the oauth-example security scheme and supported configurations: Example security-example.json file for OAuth 2.0 authentication { \"openapi\": \"3.1.0\", \"info\": { \"title\": \"Oauth2 Scheme Example\", \"version\": \"1.0\" }, \"paths\": { \"/hello-with-oauth2\": { \"get\": { \"operationId\": \"sayHelloOauth2\", \"responses\": { \"200\": { \"description\": \"OK\", \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } } } }, \"security\": [{\"oauth-example\" : []}] } } }, \"components\": { \"securitySchemes\": { \"oauth-example\": { \"type\": \"oauth2\", \"flows\": { \"clientCredentials\": { \"authorizationUrl\": \"https://example.com/oauth\", \"tokenUrl\": \"https://example.com/oauth/token\", \"scopes\": { } } } } } } } Unlike the http basic, http bearer, and apiKey security schemes, the OAuth 2.0 authentication relies on the Quarkus OpenId Connect (OIDC) and OAuth 2.0 Clients and Filters. Therefore, you must add the Quarkus OIDC Client Filter Extension to your project as shown in the following example: Example of adding Quarkus OIDC client filter extension io.quarkus quarkus-oidc-client-filter You can also add the Quarkus OIDC client filter extension using the Quarkus CLI as shown in the following example: Add Quarkus OIDC client filter extension $ quarkus extension add quarkus-oidc-client-filter The token management operations are delegated to a Quarkus OidcClient using a simple naming convention. In the previous example, the token management operations that are used to access the sayHelloOauth2 operation are delegated to the OidcClient that is oauth_example. You can configure the OidcClient as shown in the following example: Example of configuring an OidcClient quarkus.oidc-client.oauth_example.auth-server-url=https://example.com/oauth quarkus.oidc-client.oauth_example.token-path=/tokens quarkus.oidc-client.oauth_example.discovery-enabled=false quarkus.oidc-client.oauth_example.client-id=kogito-app quarkus.oidc-client.oauth_example.grant.type=client quarkus.oidc-client.oauth_example.credentials.client-secret.method=basic quarkus.oidc-client.oauth_example.credentials.client-secret.value=secret The suffix (quarkus.oidc-client.oauth_example) used in the previous configuration example is exclusive for the security scheme defined in the OpenAPI service specification file and the scheme name is sanitized using the mapping rules. You can use the authorization token propagation with OpenAPI operations that are secured using the oauth2 or http bearer security scheme type. When the configuration is set, you can propagate the authorization tokens that are passed to your workflow during the workflow creation. The propagations must be configured individually for each security scheme, which enables you to configure the invocations that must propagate the token. Similar to other security scheme configurations, the token propagation applies to all the OpenAPI operations that are secured using the same security scheme. The following example shows security-example.json file, defining a sayHelloOauth2 operation, which is secured using the oauth-example security scheme and supported configurations: Example security-example.json file for authorization token propagation { \"openapi\": \"3.1.0\", \"info\": { \"title\": \"Oauth2 Scheme Example\", \"version\": \"1.0\" }, \"paths\": { \"/hello-with-oauth2\": { \"get\": { \"operationId\": \"sayHelloOauth2\", \"responses\": { \"200\": { \"description\": \"OK\", \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } } } }, \"security\": [{\"oauth-example\" : []}] } } }, \"components\": { \"securitySchemes\": { \"oauth-example\": { \"type\": \"oauth2\", \"flows\": { \"clientCredentials\": { \"authorizationUrl\": \"https://example.com/oauth\", \"tokenUrl\": \"https://example.com/oauth/token\", \"scopes\": { } } } } } } } The following table shows the supported configurations that are used to secure the sayHelloOauth2 operation in the previous example: Table 4. Supported configuration examples for token propagation Property key Example quarkus.openapi-generator.[filename].auth.[security_scheme_name].token-propagation=[true,false] quarkus.openapi-generator.security_example_json.auth.oauth_example.token-propagation=true Enables the token propagation for all the operations that are secured using the oauth-example scheme in the security-example.json file. By default, the standard HTTP authorization header is propagated. quarkus.openapi-generator.[filename].auth.[security_scheme_name].header-name=[http_header_name] quarkus.openapi-generator.security_example_json.auth.oauth_example.header-name=MyHeaderName States that the authorization token is read from the MyHeaderName header instead of the standard HTTP authorization header. The authorization tokens are propagated till the workflow does not reach its waiting state. When the same workflow is resumed, the tokens will not be propagated. Orchestration of third-party services using OAuth 2.0 authentication in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Authentication for OpenAPI services in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"authention-support-for-openapi-services","url":"/serverlessworkflow/latest/security/authention-support-for-openapi-services.html","titles":[{"text":"Overview of OpenAPI services authentication","hash":"con-openapi-services-authentication","id":1},{"text":"Example of basic HTTP authentication","hash":"ref-example-http-authentication","id":2},{"text":"Example of Bearer Token authentication","hash":"ref-example-bearer-authentication","id":3},{"text":"Example of API key authentication","hash":"ref-example-api-key-authentication","id":4},{"text":"Example of OAuth 2.0 authentication","hash":"ref-example-oauth-authentication","id":5},{"text":"Example of authorization token propagation","hash":"ref-authorization-token-propagation","id":6},{"text":"Additional resources","hash":"_additional_resources","id":7},{"text":"Found an issue?","hash":"_found_an_issue","id":8}]},"33":{"id":33,"text":"This document describes the example of how you can implement and configure a workflow that orchestrates the interaction with an OAuth 2.0 secured REST service. For more information about orchestrating and configuring OpenAPI services, see Orchestrating the OpenAPI services, Configuring the OpenAPI services endpoints, and Authentication for OpenAPI services in Kogito Serverless Workflow. To understand the example of OAuth 2.0 orchestration in a workflow, you can use the serverless-workflow-oauth2-orchestration-quarkus example application. This example application implements a workflow related to currency exchange calculations, which orchestrates an OAuth 2.0 secured REST service provided by Acme Financial Services. Suppose you have a set of applications that must resolve the currency exchange calculations as their regular operations, and to resolve the currency exchange calculations, you need to get the accurate exchange rates. For this purpose, you can use the Acme Financial Services. When you use the Acme Financial Services, you can query the exchange rates using their OAuth 2.0 secured services, which you can access using the granted credentials. However, you do not want to expose the services provided by Acme to the applications. In this case, you can implement a workflow that resolves the following aspects: Orchestration with services provided by Acme and currency exchange calculations. Authentication requirements to access the services provided by Acme. Potential vendor lock-in problems, in case you want to change the provider in future. Domain-specific validations and optimizations. The further sections describes how an end-to-end solution is created in the serverless-workflow-oauth2-orchestration-quarkus example application. To see the source code of serverless-workflow-oauth2-orchestration-quarkus example application, you can clone the kogito-examples repository in GitHub and select the serverless-workflow-examples/serverless-workflow-oauth2-orchestration-quarkus directory. The serverless-workflow-oauth2-orchestration-quarkus example application contains the following services to compose the solution: currency-exchange-workflow: Workflow that implements the currency exchange calculations. acme-financial-service: REST service that provides the exchange rates. acme-oauth2-server: Keycloak server that secures the REST services from Acme Financial Services. The following figure describes the architecture of the solution in serverless-workflow-oauth2-orchestration-quarkus example application: Figure 1. Example architecture diagram of the solution The application creates a workflow instance to calculate the currency exchange. The workflow executes an OpenAPI operation to get the exchange rates information. Authorizations are produced to validate the access. The workflow receives the exchange rates information and executes the calculations. The execution of workflow is finalized by sending the result to the application. The workflow automatically manages the interactions with the OAuth 2.0 server. Also, you must configure a Quarkus OpenId Connect Client (OIDC). For more information, see Configuration in serverless-workflow-oauth2-orchestration-quarkus example application. currency-exchange-workflow The currency-exchange-workflow in serverless-workflow-oauth2-orchestration-quarkus example application is a workflow that implements the currency exchange calculations. The following figure describes the workflow in currency-exchange-workflow: Figure 2. Example currency-exchange-workflow First, validate the input data. Check the validation results: If validation is successful, then transition to (3). If validation is unsuccessful, then no transition and finalize the workflow with the error execution status. Send REST request to acme-financial-service to retrieve the exchange rates: If the request is successful, then transition to (4). If the request is unsuccessful, then transition to (6). Calculate the currency exchange and transition to (5). Set the successful execution status and finalize the currency-exchange-workflow execution. Set the error execution status and finalize the currency-exchange-workflow execution. The following currency-exchange-workflow.sw.json file shows the specification of the currency-exchange-workflow: currency-exchange-workflow.sw.json file { \"id\": \"currency_exchange_workflow\", \"version\": \"1.0\", \"name\": \"Currency Exchange SW\", \"dataInputSchema\": \"currency-exchange-workflow-schema.json\", \"start\": \"ValidateInputs\", \"functions\": [ { \"name\": \"validateInputs\", \"type\": \"custom\", \"operation\": \"service:org.kie.kogito.examples.ExchangeWorkflowHelper::validateInputs\" }, { \"name\": \"getExchangeRate\", \"type\": \"rest\", \"operation\": \"specs/acme-financial-service.yml#exchangeRate\" }, { \"name\": \"calculateExchange\", \"type\": \"expression\", \"operation\": \"${ { calculateExchangeResult: .amount * .exchangeRate } }\" } ], \"errors\": [ { \"name\": \"service_error\", \"code\": \"java.lang.Exception\" } ], \"states\": [ { \"name\": \"ValidateInputs\", (1) \"type\": \"operation\", \"actions\": [ { \"name\": \"validateInputsAction\", \"functionRef\": { \"refName\": \"validateInputs\", \"arguments\": { \"currencyFrom\": \"${ .currencyFrom }\", \"currencyTo\": \"${ .currencyTo }\", \"amount\": \"${ .amount }\", \"exchangeDate\": \"${ .exchangeDate }\" } } } ], \"transition\": \"CheckValidation\" }, { \"name\": \"CheckValidation\", (2) \"type\": \"switch\", \"dataConditions\": [ { \"condition\": \"${ .executionStatus == \\\"ERROR\\\" }\", \"end\": true } ], \"defaultCondition\": { \"transition\": \"GetExchangeRate\" } }, { \"name\": \"GetExchangeRate\", (3) \"type\": \"operation\", \"actions\": [ { \"name\": \"getExchangeRateAction\", \"functionRef\": { \"refName\": \"getExchangeRate\", \"arguments\": { \"currencyFrom\": \"${ .currencyFrom }\", \"currencyTo\": \"${ .currencyTo }\", \"exchangeDate\": \"${ .exchangeDate }\" } }, \"actionDataFilter\": { \"results\": \"${ {exchangeRate: .rate} }\" } } ], \"transition\": \"CalculateExchange\", \"onErrors\": [ { \"errorRef\": \"service_error\", \"transition\": \"EndWithError\" } ] }, { \"name\": \"CalculateExchange\", (4) \"type\": \"operation\", \"actions\": [ { \"name\": \"calculateExchangeAction\", \"functionRef\": { \"refName\": \"calculateExchange\" }, \"actionDataFilter\": { \"results\": \"${ {result: .calculateExchangeResult} }\" } } ], \"transition\": \"EndSuccessful\" }, { \"name\": \"EndWithError\", (5) \"type\": \"inject\", \"data\": { \"executionStatus\": \"ERROR\", \"executionStatusMessage\": \"Execution failed: The acme-financial-service invocation has failed, check that the service is running and that you have configured the OAuth2 client properly\" }, \"end\": true }, { \"name\": \"EndSuccessful\", (6) \"type\": \"inject\", \"data\": { \"executionStatus\": \"OK\", \"executionStatusMessage\": \"Execution successful\" }, \"end\": true } ] } 1 ValidateInputs state executes the validateInputs function to validate the input data. 2 CheckValidation state determines the next state to go by evaluating the validation results. 3 GetExchangeRate state executes the getExchangeRate function to retrieve the exchange rate from the remote server. 4 CalculateExchange state executes the calculateExchange function to calculate the currency exchange. 5 EndWithError state finalizes the workflow with an ERROR. 6 EndSuccessful state finalizes the workflow with successful OK status. The validateInputs function is used to execute the custom Java processing as part of the workflow. For more information about custom functions, see Serverless Workflow specification. The following is an example of validateInputs function definition: Example validateInputs function definition { \"name\": \"validateInputs\", (1) \"type\": \"custom\", (2) \"operation\": \"service:org.kie.kogito.examples.ExchangeWorkflowHelper::validateInputs\" (3) } 1 validateInputs function declaration. 2 custom type that enables you to use your own Java class to implement a function. 3 Specifies that the function is implemented by the method validateIntpus in the org.kie.kogito.examples.ExchangeWorkflowHelper Java class. To implement a custom function, you must create a Java class such as ExchangeWorkflowHelper in your project: Example ExchangeWorkflowHelper.java file package org.kie.kogito.examples; import javax.enterprise.context.ApplicationScoped; @ApplicationScoped public class ExchangeWorkflowHelper { public ValidationResult validateInputs(String currencyFrom, String currencyTo, double amount, String exchangeDate) { // Implement your custom Java processing here and return // a Java POJO to the Serverless Workflow. if (!good) { return new ValidationResult(\"ERROR\", \"Not good!\"); } return new ValidationResult(); } public static class ValidationResult { private String executionStatus; private String executionStatusMessage; // getters, setters, etc. } } To access the acme-financial-service REST service in currency-exchange-workflow, a workflow function such as getExchangeRate is used. For more information about using functions for REST services, see Serverless Workflow specification. Following is the function definition of getExchangeRate: Example getExchangeRate function definition { \"name\": \"getExchangeRate\", (1) \"type\": \"rest\", \"operation\": \"specs/acme-financial-service.yml#exchangeRate\" (2) } 1 getExchangeRate function declaration. 2 Specifies that the function is implemented by the exchangeRate operation in the acme-financial-service.yml file. For the previous configuration, the acme-financial-service.yml file must be located in the src/main/resources/specs directory of the project. In order to filter the information, which must be returned to the currency-exchange-workflow, an actionDataFilter is used: Example actionDataFilter to pass the getExchangeRate results \"actionDataFilter\": { \"results\": \"${ {exchangeRate: .rate} }\" (1) } 1 Merge the value of the rate property to the exchangeRate workflow data property. The value of the rate property is retrieved from the acme-financial-service invocation result. For more information about action data filters, see Action data filters in Serverless Workflow specification. To calculate the currency exchange rates in currency-exchange-workflow, a function named calculateExchange is used: Example calculateExchange function definition { \"name\": \"calculateExchange\", (1) \"type\": \"expression\", (2) \"operation\": \"${ { calculateExchangeResult: .amount * .exchangeRate } }\" (3) } 1 calculateExchange function declaration. 2 expression type that enables you to use an expression to implement a function. 3 Specifies that the function returns a JSON object with a calculateExchangeResult property, containing the calculation. For more information about using functions for expression evaluation, see Serverless Workflow specification. Similar to getExchangeRate to filter the information, which must be returned to the currency-exchange-workflow, an actionDataFilter is used: Example actionDataFilter to pass the calculateExchange results: \"actionDataFilter\": { \"results\": \"${ {result: .calculateExchangeResult} }\" (1) } 1 Merge the value of the calculateExchangeResult property to the result workflow data property. The value of the calculateExchangeResult property is retrieved from the expression result. acme-financial-service The acme-financial-service in serverless-workflow-oauth2-orchestration-quarkus example application is a REST service that provides the exchange rates. Following is the OpenAPI specification that defines the acme-financial-service: Example acme-financial-service.yml OpenAPI specification --- openapi: 3.0.3 info: title: Acme Financial Service API version: 1.0.1 paths: /financial-service/exchange-rate: (1) get: tags: - Acme Financial Resource operationId: exchangeRate parameters: (2) - name: currencyFrom in: query schema: type: string - name: currencyTo in: query schema: type: string - name: exchangeDate in: query schema: type: string responses: (3) \"200\": description: OK content: (4) application/json: schema: $ref: '#/components/schemas/ExchangeRateResult' security: - acme-financial-oauth: [ ] (5) components: schemas: ExchangeRateResult: (6) type: object properties: rate: format: double type: number securitySchemes: acme-financial-oauth: (7) type: oauth2 (8) flows: clientCredentials: (9) authorizationUrl: http://localhost:8281/auth/realms/kogito/protocol/openid-connect/auth tokenUrl: http://localhost:8281/auth/realms/kogito/protocol/openid-connect/token scopes: { } 1 REST path to access the exchangeRate operation in the remote server. 2 Parameter of the exchangeRate operation. 3 Responses of the exchangeRate operation. 4 Response type and data exchange format. 5 Specifies that the exchangeRate operation is secured using the acme-financial-oauth security scheme. 6 Response type specification. 7 Specification of the acme-financial-oauth security scheme. 8 Security scheme type. The security scheme type indicates that you must configure a Quarkus OpenId Connect Client (OIDC) using acme_financial_oauth name to execute the operation. 9 Authentication flow and related information. For more information about the acme-financial-service implementation, see acme-financial-service in serverless-workflow-oauth2-orchestration-quarkus example application. The configuration for the workflow used in serverless-workflow-oauth2-orchestration-quarkus example application includes defining required properties in application.properties file as shown in the following example: Example application.properties file configuration quarkus.openapi-generator.codegen.spec.acme_financial_service_yml.base-package=com.acme (1) quarkus.rest-client.acme_financial_service_yml.url=http://localhost:8483 (2) quarkus.oidc-client.acme_financial_oauth.discovery-enabled=false (3) quarkus.oidc-client.acme_financial_oauth.auth-server-url=http://localhost:8281/auth/realms/kogito/protocol/openid-connect/auth (4) quarkus.oidc-client.acme_financial_oauth.token-path=http://localhost:8281/auth/realms/kogito/protocol/openid-connect/token (5) quarkus.oidc-client.acme_financial_oauth.client-id=kogito-app (6) quarkus.oidc-client.acme_financial_oauth.grant.type=client quarkus.oidc-client.acme_financial_oauth.credentials.client-secret.method=basic (7) quarkus.oidc-client.acme_financial_oauth.credentials.client-secret.value=secret (8) 1 Package name for automatically generated classes that implement the access to all operations defined in the acme-financial-service.yml file. 2 Root URL to access all operations defined in the acme-financial-service.yml file. For the exchangeRate operation, a URL such as http://localhost:8483/financial-service/exchange-rate is automatically generated. 3 Disables the OAuth 2.0 server endpoints discovery as the endpoints provided in the acme-financial-service-yml file are used instead. 4 Authentication URL of the OAuth 2.0 server. 5 Relative path or URL of the OAuth 2.0 token endpoint, which allocates access and refreshes tokens. 6 Client ID to identify the workflow against the authorization service, such as kogito-app. This identifier must be provided by Acme. 7 Method that is used at the time of sending the client-secret for the authentications when the client grant type is used. 8 client-secret to authenticate the workflow against the authorization service when the client grant type is used. This secret must be provided by Acme. To configure the Quarkus OpenId Connect Client (OIDC) for acme_financial_service_oauth service, you must follow the rules described in Example of OAuth 2.0 authentication. Also, the particular attributes depend on the OAuth 2.0 server and authorization flow to use. You can get the information about the OAuth 2.0 server and authorization flow from the acme-financial-service.yml file. Also, you can use the alternatives defined in the Quarkus configuration reference guide to configure the properties in application.properties file. You can define environment variables to set the authentication secrets, and you can use the Quarkus Credentials Provider framework. Once you clone the serverless-workflow-oauth2-orchestration-quarkus example application from GitHub repository, you can run the example application. Prerequisites Java 11+ is installed. Maven 3.8.6 or later is installed. Docker 20.10.7 or later is installed. (Optional) Docker compose 1.27.2 or later is installed. Procedure In a command terminal, clone the kogito-examples repository and navigate to the cloned directory: Clone kogito-examples repository and navigate to the directory git clone https://github.com/kiegroup/kogito-examples.git cd kogito-examples/serverless-workflow-examples/serverless-workflow-oauth2-orchestration-quarkus Run the following command to build the example application using Apache Maven: Build the example application mvn clean install In a separate command terminal window, start the Keycloak server: Start the Keycloak server cd kogito-examples/serverless-workflow-examples/serverless-workflow-oauth2-orchestration-quarkus/scripts ./startKeycloak.sh Alternatively, you can start the Docker Compose using the following command: Start Docker Compose cd kogito-examples/serverless-workflow-examples/serverless-workflow-oauth2-orchestration-quarkus/docker-compose docker-compose up In a separate command terminal window, navigate to the acme-financial-service directory and start the Quarkus application of Acme Financial Service: Start Acme Financial Service cd kogito-examples/serverless-workflow-examples/serverless-workflow-oauth2-orchestration-quarkus/acme-financial-service java -jar target/quarkus-app/quarkus-run.jar In a separate command terminal window, navigate to the currency-exchange-workflow directory and start the Quarkus application of currency exchange workflow: Start currency exchange workflow cd kogito-examples/serverless-workflow-examples/serverless-workflow-oauth2-orchestration-quarkus/currency-exchange-workflow java -jar target/quarkus-app/quarkus-run.jar When all the services are running, use the following curl commands to run the currency-exchange-workflow: The following is an example of successful execution when calculating the currency exchange from EUR to USD: Example request Example response curl -X 'POST' \\ 'http://localhost:8080/currency_exchange_workflow' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{ \"currencyFrom\": \"EUR\", \"currencyTo\": \"USD\", \"exchangeDate\": \"2022-06-10\", \"amount\": 2.0 }' { \"id\": \"399ce304-037c-486d-b4bf-1564baf907a1\", \"workflowdata\": { \"currencyFrom\": \"EUR\", \"currencyTo\": \"USD\", \"exchangeDate\": \"2022-06-10\", \"amount\": 2.0, \"executionStatus\": \"OK\", \"executionStatusMessage\": \"Execution successful\", \"exchangeRate\": 1.0578, \"result\": 2.1156 } } The following is an example of an unsupported currency error when calculating the currency exchange from EUR to MXN: Example request Example response curl -X 'POST' \\ 'http://localhost:8080/currency_exchange_workflow' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{ \"currencyFrom\": \"EUR\", \"currencyTo\": \"MXN\", \"exchangeDate\": \"2022-06-10\", \"amount\": 2.0 }' { \"id\": \"e0e7708d-c82c-47d7-9354-09ccd1e972bb\", \"workflowdata\": { \"currencyFrom\": \"EUR\", \"currencyTo\": \"MXN\", \"exchangeDate\": \"2022-06-10\", \"amount\": 2, \"executionStatus\": \"ERROR\", \"executionStatusMessage\": \"Invalid currencyTo: MXN, only the following currencies are supported [EUR, USD, JPY, GBP, CAD, BRL, AUD]\", \"exchangeRate\": null } } In the previous examples, the currencies supported by the currency-exchange-workflow include EUR, USD, JPY, GBP, CAD, BRL, and AUD. However, the acme-financial-service REST service can resolve any type of currency exchange. This is an example of a workflow implementing the intermediate data filtering, transforming, and validations. The following is an example of the occurrence of unexpected errors when accessing acme-financial-service: Before you launch the command, you must go to the terminal window where you started the acme-financial-service and stop the service using CTRL+C. Example request Example response curl -X 'POST' \\ 'http://localhost:8080/currency_exchange_workflow' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{ \"currencyFrom\": \"EUR\", \"currencyTo\": \"USD\", \"exchangeDate\": \"2022-06-10\", \"amount\": 2.0 }' { \"id\": \"0044ffa0-7b2b-4fdc-af60-cd98c6bd3ade\", \"workflowdata\": { \"currencyFrom\": \"EUR\", \"currencyTo\": \"USD\", \"exchangeDate\": \"2022-06-10\", \"amount\": 2.0, \"executionStatus\": \"ERROR\", \"executionStatusMessage\": \"Execution failed: The acme-financial-service invocation has failed, check that the service is running and that you have configured the OAuth2 client properly\", \"exchangeRate\": null } } In this example the error indicates that it was not possible to contact the acme-financial-service. Orchestrating the OpenAPI services If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Orchestration of third-party services using OAuth 2.0 authentication","component":"serverlessworkflow","version":"1.42.0.Final","name":"orchestrating-third-party-services-with-oauth2","url":"/serverlessworkflow/latest/security/orchestrating-third-party-services-with-oauth2.html","titles":[{"text":"Example of OAuth 2.0 orchestration in a workflow","hash":"ref-example-oauth2-orchestration","id":1},{"text":"Configuration in serverless-workflow-oauth2-orchestration-quarkus example application","hash":"con-example-sw-configuration","id":2},{"text":"Running the example application","hash":"proc-run-example-application","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"34":{"id":34,"text":"This document describes how you can configure OpenAPI service endpoints in Kogito Serverless Workflow. Kogito Serverless Workflow leverages MicroProfile REST Client to invoke OpenAPI services. Therefore, you can configure the OpenAPI services by following the MicroProfile Config specification. For the list of properties to configure in the MicroProfile REST Client specification, see Support for MicroProfile Config in MicroProfile REST Client documentation. Kogito Serverless Workflow follows the strategy defined in the kogito.sw.operationIdStrategy property to generate the REST Client. The possible values of the kogito.sw.operationIdStrategy property include: FILE_NAME(Default value): Kogito Serverless Workflow uses the configuration key based on the OpenAPI document file name as shown in the following example: Example property quarkus.rest-client.stock_portfolio_svc_yaml.url=http://localhost:8282/ In the previous example, Kogito Serverless Workflow uses stock_portfolio_svc_yaml as configuration key as the OpenAPI document is available at src/main/resources/openapi/stock-portfolio-svc.yaml. FULL_URI: Kogito Serverless Workflow uses the full URI path as configuration key as shown in the following example: Example Serverless Workflow { \"id\": \"myworkflow\", \"functions\": [ { \"name\": \"myfunction\", \"operation\": \"https://my.remote.host/apicatalog/apis/123/document\" (1) } ] ... } 1 URI path of the OpenAPI document Example property quarkus.rest-client.apicatalog_apis_123_document.url=http://localhost:8282/ In the previous example, Kogito Serverless Workflow uses apicatalog_apis_123_document as configuration key. FUNCTION_NAME: Kogito Serverless Workflow uses the workflow ID and the function name that references the OpenAPI document as shown in the following examples: Example Serverless Workflow { \"id\": \"myworkflow\", \"functions\": [ { \"name\": \"myfunction\", \"operation\": \"https://my.remote.host/apicatalog/apis/123/document\" } ] ... } Example property quarkus.rest-client.myworkflow_myfunction.url=http://localhost:8282/ In the previous example, Kogito Serverless Workflow uses \"myworkflow_myfunction\" as configuration key. SPEC_TITLE: Kogito Serverless Workflow uses the value of info.title in the OpenAPI document as shown in the following examples: Example OpenAPI document --- openapi: 3.0.3 info: title: stock-service API version: 2.0.0-SNAPSHOT paths: /stock-price/{symbol}: ... Example property quarkus.rest-client.stock-service_API.url=http://localhost:8282/ In the previous example, Kogito Serverless Workflow uses stock-service_API as configuration key. A Kubernetes service endpoint can be used as a service URL if the target service is within the same cluster, such as http://myservice.mynamespace.cluster.svc.local. As an alternative to kogito.sw.operationIdStrategy, you can assign an alias name to an URI by using workflow-uri-definitions custom extension. Then you can use that alias as configuration key and in function definitions. Example workflow \"extensions\" : [ { \"extensionid\": \"workflow-uri-definitions\", \"definitions\": { \"remoteCatalog\": \"https://my.remote.host/apicatalog/apis/123/document\", } } ], \"functions\": [ { \"name\": \"operation1\", \"operation\": \"remoteCatalog#operation1\" }, { \"name\": \"operation2\", \"operation\": \"remoteCatalog#operation2\" } ] Example property quarkus.rest-client.remoteCatalog.url=http://localhost:8282/ In the previous example, Kogito Serverless Workflow uses remoteCatalog as configuration key. You can use different MicroProfile ConfigSources, such as environment variables and Kubernetes ConfigMaps, and MicroProfile Config profiles to configure the OpenAPI services in different environments. For more information about MicoProfile ConfigSources, see ConfigSources. Some operating systems allow only alphabetic characters or an underscore (_), in environment variables. Other characters such as . and / are not allowed. You must use the Environment Variables Mapping Rules, to set the value of a configuration property that contains a name with such characters. The testing procedure described in this document is based on the serverless-workflow-stock-profit example application in GitHub repository. The serverless-workflow-stock-profit example application is a workflow that computes the profit for a given stock based on an existing stock portfolio. The serverless-workflow-stock-profit example application sends request to the following services: stock-portfolio-service: Calculates the stock portfolio profit for a given stock based on the current stock price. stock-service: Retrieves the current stock price. Developing an application using a service that returns different results every time can be difficult, therefore the stock-service uses the following implementations depending on the environment. real-stock-service (default implementation): Returns the real stock price. This service returns a random price every time to simulate a real stock service. This implementation is used in normal or production environment. fake-stock-service: Returns the same price every time. This implementation is used in the development environment. The stock-profit service contains the following workflow definition: Workflow definition in stock-profit service { \"id\": \"stockprofit\", \"specVersion\": \"0.8\", \"version\": \"2.0.0-SNAPSHOT\", \"name\": \"Stock profit Workflow\", \"start\": \"GetStockPrice\", \"functions\": [ { \"name\": \"getStockPriceFunction\", \"operation\": \"openapi/stock-svc.yaml#getStockPrice\" (1) }, { \"name\": \"getProfitFunction\", \"operation\": \"openapi/stock-portfolio-svc.yaml#getStockProfit\" (2) } ], \"states\": [ { \"name\": \"GetStockPrice\", \"type\": \"operation\", \"actionMode\": \"sequential\", \"actions\": [ { \"name\": \"getStockPrice\", \"functionRef\": { \"refName\": \"getStockPriceFunction\", \"arguments\": { \"symbol\": \".symbol\" } } } ], \"transition\": \"ComputeProfit\" }, { \"name\": \"ComputeProfit\", \"type\": \"operation\", \"actionMode\": \"sequential\", \"actions\": [ { \"name\": \"getStockProfit\", \"functionRef\": { \"refName\": \"getProfitFunction\", \"arguments\": { \"symbol\": \".symbol\", \"currentPrice\": \".currentPrice\" } } } ], \"end\": true } ] } 1 Defines the stock-service service operation 2 Defines the stock-portfolio-service service operation Kogito Serverless Workflow leverages Quarkus profiles to configure the workflow application depending on the target environment. To set properties for different profiles, each property needs to be prefixed with a percentage (%) followed by the profile name and a period (.) in the syntax as %.config.name. By default, Quarkus provides the following profiles that activate automatically in certain conditions: dev: Activates in development mode, such as quarkus:dev test: Activates when tests are running prod (default profile): Activates when not running in development or test mode You can also create additional profiles and activate them using the quarkus.profile configuration property. For more information about Quarkus profiles, see Profiles in the Quarkus Configuration reference guide. You can define the URLs of the services in different environments by using profiles. Procedure Create a file named application.properties in the src/main/resources directory of the workflow project, if the file does not exist. In the application.properties file, add the OpenAPI configuration for the default environment: Example properties in application.properties file quarkus.rest-client.stock_svc_yaml.url=http://localhost:8383/ (1) quarkus.rest-client.stock_portfolio_svc_yaml.url=http://localhost:8282/ 1 URL of the real-stock-service service In the application.properties file, add the OpenAPI configuration for the dev environment: Example properties for development environment %dev.quarkus.rest-client.stock_svc_yaml.url=http://localhost:8181/ (1) 1 URL of the fake-stock-service service The %dev. prefix indicates the dev profile configuration, which is used when you run mvn quarkus:dev or quarkus dev. After defining the URLs of the services, you can run the services that the workflow sends request to. Prerequisites URLs of the services in the different environments are defined. For more information, see Defining the URLs of the services in different environments. Procedure In a separate command terminal window, run the stock-portfolio-service service: Run the stock-portfolio-service service cd stock-portfolio-service mvn quarkus:dev -Ddebug=false You can access the stock-portfolio-service service at http://localhost:8282/. In a separate command terminal window, run the real-stock-service service: Run real-stock-service service cd real-stock-service mvn quarkus:dev -Ddebug=false You can access the real-stock-service service at http://localhost:8383/. In a separate command terminal window, run the fake-stock-service service: Run fake-stock-service service cd fake-stock-service mvn quarkus:dev -Ddebug=false You can access the fake-stock-service service at http://localhost:8181/. When you define %dev.quarkus.rest-client.stock_svc_yaml.url=http://localhost:8181/, the fake-stock-service service is used in the development mode and you get the same result every time you run the workflow. Using this example, you can run the workflow application in development mode. Prerequisites Services that the workflow application sends requests to are started. For more information, see Running the services. Procedure In a separate command terminal window, run the workflow application in development mode: Run workflow application in development mode cd stock-profit mvn quarkus:dev -Ddebug=false In a separate command terminal window, send a request to the workflow application: Example request curl -X 'POST' \\ 'http://localhost:8080/stockprofit' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{ \"symbol\": \"KGTO\" }' Example response {\"id\":\"5ab5dcb8-5952-4730-b526-cace363774bb\",\"workflowdata\":{\"symbol\":\"KGTO\",\"currentPrice\":75,\"profit\":\"50%\"}} Note that, in the previous example fake-stock-service is used, therefore, the computed profit property is same no matter how many times you run the workflow. When you define quarkus.rest-client.stock_svc_yaml.url=http://localhost:8383/, the real-stock-service service is used in the normal or production mode and you get different results every time you run the workflow. Using this example, you can run the workflow application in normal or production mode. Prerequisites Services that the workflow application sends requests to are started. For more information, see Running the services. Procedure In a separate command terminal window, package the workflow application to be run as fat JAR: Package workflow application cd stock-profit mvn package In a separate command terminal window, run the workflow application in normal or production mode: Run workflow application in normal or production mode java -jar target/quarkus-app/quarkus-run.jar In a separate command terminal window, send a request to the workflow application: Example request curl -X 'POST' \\ 'http://localhost:8080/stockprofit' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{ \"symbol\": \"KGTO\" }' Example response {\"id\":\"a80c95d6-51fd-4ca9-b689-f779929c9937\",\"workflowdata\":{\"symbol\":\"KGTO\",\"currentPrice\":59.36,\"profit\":\"19%\"}} Note that, in the previous example, the real-stock-service is used, therefore, the computed profit property is different every time you run the workflow. You can define the URLs of the services in different environments using profiles and environment variables. Prerequisites Services that the workflow application sends requests to are started. For more information, see Running the services. Procedure In a separate command terminal window, run the workflow application in development mode, overwriting the property defined in the application.properties file using an environment variable: Run the workflow application in development mode cd stock-profit export _DEV_QUARKUS_REST_CLIENT_STOCK_SVC_YAML_URL=http://localhost:8383/ (1) mvn quarkus:dev -Ddebug=false 1 Overwrite the %dev.quarkus.rest-client.stock_svc_yaml.url=http://localhost:8181/ defined in the application.properties file using an environment variable, which is pointing to real-stock-service. In a separate command terminal window, send a request to the workflow application: Example request curl -X 'POST' \\ 'http://localhost:8080/stockprofit' \\ -H 'accept: */*' \\ -H 'Content-Type: application/json' \\ -d '{ \"symbol\": \"KGTO\" }' Example response {\"id\":\"5ab5dcb8-5952-4730-b526-cace363774bb\",\"workflowdata\":{\"symbol\":\"KGTO\",\"currentPrice\":56.35,\"profit\":\"13%\"}} Note that, in the previous example, you overwrote the property defined in the application.properties file to point to real-stock-service, therefore, the computed profit property is different every time you run the workflow. Orchestrating the OpenAPI services Quarkus configuration guide If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Configuring OpenAPI Services Endpoints","component":"serverlessworkflow","version":"1.42.0.Final","name":"configuring-openapi-services-endpoints","url":"/serverlessworkflow/latest/service-orchestration/configuring-openapi-services-endpoints.html","titles":[{"text":"Overview","hash":"con-config-openapi-services-endpoints","id":1},{"text":"Using URI alias","hash":"_using_uri_alias","id":2},{"text":"Configuring the OpenAPI services endpoints in different environments","hash":"proc-configure-openapi-services-endpoints-different-environments","id":3},{"text":"Defining URLs of the services in different environments","hash":"proc-config-openapi-services-defining-urls","id":4},{"text":"Running the services","hash":"proc-config-openapi-services-running-the-services","id":5},{"text":"Running workflow application in development mode","hash":"proc-config-openapi-services-running-sw-application-in-development-mode","id":6},{"text":"Running workflow application in production mode","hash":"proc-config-openapi-services-running-sw-application-in-production-mode","id":7},{"text":"Defining URLs of services in different environments using environment variables","hash":"proc-define-urls-using-environment-variables","id":8},{"text":"Additional resources","hash":"_additional_resources","id":9},{"text":"Found an issue?","hash":"_found_an_issue","id":10}]},"35":{"id":35,"text":"As a developer, you can invoke a gRPC service using a workflow application that runs with Quarkus. This document describes how to create a workflow that invokes a running gRPC service and how to configure properties to locate that running gRPC service. For information about gRPC concepts, see gRPC. In order to illustrate how gRPC integration works, this Serverless Workflow application is used. This example greets a user in their preferred language by invoking a gRPC service. Relevant files of the workflow application include: gRPC proto file: This file defines a greeter service, which consists of sayHello methods, each covering a different gRPC scenario: The sayHello method accepts two parameters, including name of the user and an optional language to use in the greeting message (English by default). The sayHello method returns the greeting message in the appropriate language. The SayHelloAllLanguages accepts just the name parameter and streams greetings in all languages supported by the service. This represents the server-side streaming scenario. The SayHelloMultipleLanguagesAtOnce accepts a stream of name-language pairs as parameters and returns corresponding greetings as one block of text after the streaming is finished. This is the client-side streaming scenario. The SayHelloMultipleLanguages accepts a stream of name-language pairs and streams back greetings with a respective name and in a respective language. // The greeter service definition. service Greeter { // Sends a greeting rpc SayHello (HelloRequest) returns (HelloReply) {} rpc SayHelloAllLanguages (HelloRequest) returns (stream HelloReply) {} rpc SayHelloMultipleLanguagesAtOnce (stream HelloRequest) returns (HelloReply) {} rpc SayHelloMultipleLanguages (stream HelloRequest) returns (stream HelloReply) {} ... } // The request message containing the user's name. message HelloRequest { string name = 1; string language=2; } // The response message containing the greetings message HelloReply { string message = 1; } Workflow definition file: This file defines an RPC function. \"functions\": [ { \"name\": \"sayHello\", \"type\": \"rpc\", \"operation\": \"greeting.proto#Greeter#SayHello\" } ] In this rpc function, the operation property is composed of three tokens separated by #. The three tokens include: URI of the proto file (greeting.proto) Name of the service (Greeter) Name of the method (SayHello) Kogito Serverless Workflow supports three URI schemes, including http, file, and classpath (default). Therefore, in the previous example, the greeting.proto is expected to be found in the project classpath. The execution of the workflow consists of a single operation state, which is composed of one action. { \"name\": \"sayHello\", \"functionRef\" : { \"refName\": \"sayHello\", \"arguments\": { \"name\": \".name\", \"language\": \".language\" } } } In the previous example, the action invokes the sayHello RPC method using two model variables: name and language. These parameters are provided as part of the REST call that starts the workflow. The response of the method execution is mapped to a JSON object and merged with the workflow model. For the remaining scenarios, see the following workflow definition files: Server streaming Client streaming Bidirectional streaming The only difference to the basic scenario is that workflows with client streaming expect an array of requests as arguments of the gRPC function: { \"name\": \"SayHelloMultipleLanguagesAtOnce\", \"functionRef\" : { \"refName\": \"SayHelloMultipleLanguagesAtOnce\", \"arguments\": \".helloRequests\" } } The function expects an array of requests which is mapped under the helloRequests key in the workflow model. In case of server streaming, the response is returned as an array as well and merged with the workflow model. In these examples, because no stateDataFilter is defined, the response is merged under the default response key in the workflow model. Maven POM: The gRPC functionality is included within workflow dependencies, which means you do not need to add specific dependencies for gRPC to work with Kogito Serverless Workflow. This pom.xml file contains the following resource node: ${project.basedir}/../serverless-workflow-greeting-server-rpc-quarkus/src/main/proto greeting.proto The reason for this snippet to exist is to guarantee that the proto file is included in the classpath. Remember that in the workflow file, the URI for the proto file does not contain any scheme, therefore the proto file is expected to be accessible in the classpath. The previous, Maven based, approach can be used when the source code of the workflow and the gRPC server are stored in the same repository, but normally this will not be the case. If the proto file can be downloaded from a remote server, you might use the http scheme. If the proto file is not remotely accessible, you will need to manually obtain a copy of it and store in a directory that is included in the classpath (for example src/main/resources). Another possibility is to copy the proto file in a well known absolute path (that might be a shared network file system) and use the file scheme. Application properties: In the application.properties file, you can add the information for the workflow application to locate the gRPC server. Internally, the workflow implementation uses the same set of properties as Quarkus gRPC client. The client-name used by Kogito Serverless Workflow is the service name declared in the proto file. Therefore, since in this example a service called Greeter is invoked, the following code is added to the properties. quarkus.grpc.clients.Greeter.host=localhost quarkus.grpc.clients.Greeter.port=50051 In the same GitHub repository as the example application, there is a Maven project which provides a simple implementation of the Greeter service. By default, this gRPC server runs on port 50051. Therefore, the same port is used in the application.properties file. gRPC specification requires enumeration types to have a default value. The default value is not included in the server response payload. Therefore, use an empty value such as UNKNOWN as default. If, for any reason, your default value is semantically valid and you want the value to be included in the workflow model, you must set kogito.grpc.enum.includeDefault property to true. This way enumeration fields are always filled by the workflow if the server response does not include them. Before running the workflow application, you need to start the gRPC server the workflow invokes. To run the gRPC server, navigate to the serverless-workflow-greeting-server-rpc-quarkus directory in a command terminal and enter the command: mvn compile exec:java -Dexec.mainClass=\"org.kie.kogito.examples.sw.greeting.GreeterService\" Once the server is running, you must navigate to the serverless-workflow-greeting-client-rpc-quarkus directory in a separate command terminal and run the workflow application by entering the following command: mvn clean quarkus:dev Once the workflow application is started, you can invoke the workflow instance using any HTTP client, such as curl, from a separate command terminal. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://localhost:8080/jsongreet Example response {\"id\":\"4376cc50-42d4-45ef-8a5e-6e403a654a30\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"message\":\"Hello from gRPC service John\"}} You can also try greeting in a different language. curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"Javi\", \"language\": \"Spanish\"}' http://localhost:8080/jsongreet In response, you will see the greeting in Spanish language. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\"}' http://localhost:8080/jsongreetserverstream Example response {\"id\":\"665911c5-36ee-40b7-93dd-a2328f969c73\",\"workflowdata\":{\"name\":\"John\",\"response\":[{\"message\":\"Hello from gRPC service John\"},{\"message\":\"Saludos desde gRPC service John\"}]}} Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"helloRequests\" : [{\"name\" : \"Javierito\", \"language\":\"Spanish\"}, {\"name\" : \"John\", \"language\":\"English\"}, {\"name\" : \"Jan\", \"language\":\"Czech\"}]}' http://localhost:8080/jsongreetclientstream Example response {\"workflowdata\" : { \"helloRequests\" : [ {\"name\" : \"Javierito\", \"language\":\"Spanish\"}, {\"name\" : \"John\", \"language\":\"English\"}, {\"name\" : \"Jan\", \"language\":\"Czech\"}], \"message\":\"Saludos desde gRPC service Javierito\\nHello from gRPC service John\\nHello from gRPC service Jan\" } } Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"helloRequests\" : [{\"name\" : \"Javierito\", \"language\":\"Spanish\"},{\"name\" : \"John\", \"language\":\"English\"},{\"name\" : \"Jan\", \"language\":\"Czech\"}]}' http://localhost:8080/jsongreetbidistream Example response {\"workflowdata\" : { \"helloRequests\" : [ {\"name\" : \"Javierito\", \"language\":\"Spanish\"}, {\"name\" : \"John\", \"language\":\"English\"}, {\"name\" : \"Jan\", \"language\":\"Czech\"}], \"response\":[ {\"message\":\"Saludos desde gRPC service Javierito\"}, {\"message\":\"Hello from gRPC service John\"}, {\"message\":\"Hello from gRPC service Jan\"} ] } } If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Orchestrating gRPC based Services","component":"serverlessworkflow","version":"1.42.0.Final","name":"orchestration-of-grpc-services","url":"/serverlessworkflow/latest/service-orchestration/orchestration-of-grpc-services.html","titles":[{"text":"Default enum values","hash":"_default_enum_values","id":1},{"text":"Running the workflow application","hash":"running-serverless-workflow-application","id":2},{"text":"Simple gRPC","hash":"_simple_grpc","id":3},{"text":"Server-side streaming gRPC","hash":"_server_side_streaming_grpc","id":4},{"text":"Client-side streaming gRPC","hash":"_client_side_streaming_grpc","id":5},{"text":"Bidirectional streaming gRPC","hash":"_bidirectional_streaming_grpc","id":6},{"text":"Found an issue?","hash":"_found_an_issue","id":7}]},"36":{"id":36,"text":"This document describes how to call REST services using an OpenAPI specification file. Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. You have installed the tooling. For more information about the tooling, see Getting familiar with Kogito Serverless Workflow tooling. Kogito Serverless Workflow follows the CNCF Serverless Workflow specification function definition to send requests to remote REST services using an OpenAPI specification reference as shown in the following example: Example of an OpenAPI function definition { \"functions\":[ { \"name\":\"myFunction1\", \"operation\":\"classpath:/myopenapi-file.yaml#myFunction1\" } ] } In the previous example function definition, the type attribute can be omitted as the default value is rest. In the previous example, the operation attribute is a string, which is composed using the following parameters: URI that the engine uses to locate the specification file, such as classpath. Operation identifier. You can find the operation identifier in the OpenAPI specification file. Kogito Serverless Workflow supports the following URI schemes: classpath: This URI scheme is supported for the files that are located in the src/main/resources folder of the application project. The classpath is the default URI scheme. If you do not define a URI scheme as shown in the following examples, the file location is defined as src/main/resources/myopenapifile.yaml: /myopenapifile.yaml file: This URI scheme is supported for the files that are located in the file system. http or https: This URI scheme is supported for remotely located files. The OpenAPI specification files must be available during the build time, because Kogito Serverless Workflow leverages the internal code generation feature to send requests on runtime. Therefore, once you have built the application image, Kogito Serverless Workflow will not have access to the files. For more information about building workflow images, see Building workflow images using Quarkus CLI. To get started with orchestrating the OpenAPI based services, you must locate the REST services OpenAPI specification files. Usually, REST services expose their interface using the OpenAPI specification. For example, see the Petstore API. In case, the OpenAPI service that you want to add to the workflow does not contain a specification file, you can either create a specification file or update the OpenAPI service to generate and expose the file. There are various REST frameworks that support the OpenAPI specification generation, including: Java Quarkus - Using OpenAPI and Swagger UI Spring Boot Documentation Go Go Swagger Documentation Python Flasgger .NET ASP.NET Core web API documentation with Swagger/OpenAPI TypeScript Swagger UI Express PHP swagger-php If you do not have access to the REST service, which is used to add the OpenAPI specification generator, you can use Swagger Inspector. The Swagger Inspector generates the specification file based on HTTP traffic. To send REST requests that are based on the OpenAPI specification files, you need to perform the following procedures: Define the function references Access the defined functions in the workflow states To send requests with the REST calls, first you need to define the OpenAPI functions. Prerequisites You have access to the OpenAPI specification files. Once you have access to the OpenAPI specification files, you can define the functions in the workflow. You can also use the serverless-workflow-temperature-conversion example application as a reference. Procedure Copy the OpenAPI specification files of the service(s) you want to invoke into your workflow service directory, which can be src/main/resources/specs. In the serverless-workflow-temperature-conversion example application, the services that are invoked include multiplication and subtraction services. The OpenAPI specification files in serverless-workflow-temperature-conversion example application are extracted from the running multiplication and subtraction services. The REST Quarkus applications expose the related OpenAPI specification files using the Quarkus Swagger extension. Following is an example OpenAPI specification of the multiplication REST service: Example multiplication REST service OpenAPI specification openapi: 3.0.3 info: title: Generated API version: \"1.0\" paths: /: post: operationId: doOperation (1) parameters: - in: header name: notUsed schema: type: string required: false requestBody: content: application/json: schema: $ref: '#/components/schemas/MultiplicationOperation' responses: \"200\": description: OK content: application/json: schema: type: object properties: product: format: float type: number components: schemas: MultiplicationOperation: (2) type: object properties: leftElement: format: float type: number rightElement: format: float type: number 1 operationId of the REST operation. The operationId in an OpenAPI specification is necessary to add a reference to the operation that you want to use in REST invocation. 2 Data structure of the REST operation. Use the same operationId to compose the final URI in the function definition as shown in the following example: OpenAPI functions definition in the Temperature Conversion example { \"functions\": [ { \"name\": \"multiplication\", \"operation\": \"specs/multiplication.yaml#doOperation\" (1) }, { \"name\": \"subtraction\", \"operation\": \"specs/subtraction.yaml#doOperation\" (2) } ] } 1 Function definition for OpenAPI multiplication function 2 Function definition for OpenAPI subtraction function Note that in the previous example, the multiplication and subtraction OpenAPI files are stored in the src/main/resources/specs folder of the application. After defining the function definitions, you can access the defined functions in the workflow states. Prerequisites You have defined the OpenAPI functions in a workflow. For more information, see Defining OpenAPI functions in a workflow. Procedure Use a workflow action to call a function definition that you added. Any workflow action that consists of a similar approach of referencing the functions that you used in the function definition can call a defined function. To map the arguments of a function, you can refer to the parameters described in the Operation Object section of OpenAPI specification. Also, the engine maps the parameter naming according to the OpenAPI specification. After that, you can use jq expressions to extract the payload data and map the data to the required parameters. In the following example, the parameters are part of the request body: Example of mapping a function arguments { \"states\": [ { \"name\": \"SetConstants\", \"type\": \"inject\", \"data\": { \"subtractValue\": 32.0, \"multiplyValue\": 0.5556 }, \"transition\": \"Computation\" }, { \"name\": \"Computation\", \"actionMode\": \"sequential\", \"type\": \"operation\", (1) \"actions\": [ { \"name\": \"subtract\", \"functionRef\": { \"refName\": \"subtraction\", (2) \"arguments\": { (3) \"leftElement\": \".fahrenheit\", \"rightElement\": \".subtractValue\" } } }, { \"name\": \"multiply\", \"functionRef\": { \"refName\": \"multiplication\", (4) \"arguments\": { (5) \"leftElement\": \".difference\", \"rightElement\": \".multiplyValue\" } } } ], \"end\": { \"terminate\": \"true\" } } ] } 1 Operation State definition 2 Reference to the subtraction function 3 Definition of the subtraction function arguments 4 Reference to the multiplication function 5 Definition of the multiplication function arguments In the serverless-workflow-temperature-conversion example application, the functions are called sequentially in an Operation State as shown in the previous example. For more information about mapping parameters in the request path instead of request body, you can refer to the following PetStore API example: Example Petstore OpenAPI specification excerpt { \"/pet/{petId}\": { \"get\": { \"tags\": [ \"pet\" ], \"summary\": \"Find pet by ID\", \"description\": \"Returns a single pet\", \"operationId\": \"getPetById\", \"parameters\": [ { \"name\": \"petId\", \"in\": \"path\", \"description\": \"ID of pet to return\", \"required\": true, \"schema\": { \"type\": \"integer\", \"format\": \"int64\" } } ] } } } Following is an example invocation of a function, in which only one parameter named petId is added in the request path: Example of calling the PetStore function { \"name\": \"CallPetStore\", (1) \"actionMode\": \"sequential\", \"type\": \"operation\", \"actions\": [ { \"name\": \"getPet\", \"functionRef\": { \"refName\": \"getPetById\", (2) \"arguments\": { (3) \"petId\": \".petId\" } } } ] } 1 State definition, such as CallPetStore. 2 Function definition reference. In the previous example, the function definition getPetById is for PetStore OpenAPI specification. 3 Arguments definition. In the previous example, Kogito Serverless Workflow adds the argument petId to the request path before sending a request. After accessing the function definitions in workflow states, you can configure the endpoint URL of OpenAPI services. Kogito Serverless Workflow uses the Quarkus OpenAPI Generator extension and the Quarkus REST Client, and all the configurations are based on these components, which are backed using Quarkus Configuration. Prerequisites You have defined the function definitions in the workflow. For more information, see Defining OpenAPI functions in a workflow. You have the access to the defined functions in the workflow states. For more information, see Accessing functions in the workflow states. Procedure To configure the endpoints, you must use the sanitized OpenAPI specification file name as the REST client configuration key. The configuration key must be set as a valid environment variable. For example, a file named as subtraction.yaml contains the configuration key as subtraction_yaml. For more information about how to sanitize file names, see Environment Variables Mapping Rules. You can use the same configuration key on each property that is related to the Quarkus REST client as shown in the following URL configuration example: Example of URL configuration quarkus.rest-client.subtraction_yaml.url=http://myserver.com To avoid hardcoding the URL in the application.properties file, you can use environment variables substitution, as shown in the following example: Example of URL configuration with environment variables quarkus.rest-client.subtraction_yaml.url=${SUBTRACTION_URL:http://myserver.com} In case the environment variable SUBTRACTION_URL is not found in the previous example, the URL redirects to http://myserver.com. You can also use environment variables to configure the application in Kubernetes environments, in which variables can be injected into the pod of the application. For more information about endpoints and general configuration, see Configuring the OpenAPI services endpoints. In a future release, Kogito Serverless Workflow will provide support for Kubernetes Service Discovery feature. Using the Kubernetes Service Discovery feature, you can point to a Kubernetes or Knative object that you want to call. After that, the engine will automatically configure the endpoints once you deploy the endpoints in the cluster. Configuring OpenAPI services endpoints Authentication for OpenAPI services in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Orchestrating OpenAPI Services","component":"serverlessworkflow","version":"1.42.0.Final","name":"orchestration-of-openapi-based-services","url":"/serverlessworkflow/latest/service-orchestration/orchestration-of-openapi-based-services.html","titles":[{"text":"OpenAPI function definition","hash":"con-openapi-function-definition","id":1},{"text":"Sending REST requests based on the OpenAPI specification","hash":"proc-send-request-rest-call-openapi-spec","id":2},{"text":"Defining OpenAPI functions in a workflow","hash":"proc-define-openapi-functions","id":3},{"text":"Accessing functions in the workflow states","hash":"proc-access-function-sw-states","id":4},{"text":"Configuring the endpoint URL of OpenAPI services","hash":"proc-configuring-openapi-service-endpoint-url","id":5},{"text":"Additional resources","hash":"_additional_resources","id":6},{"text":"Found an issue?","hash":"_found_an_issue","id":7}]},"37":{"id":37,"text":"This document describes the OpenAPI Callback and related examples. Also, it covers the difference between OpenAPI Callback and the Serverless Workflow Callback state. The Serverless Workflow callback state can be implemented using both the OpenAPI callback and the Callback state functionalities. Both the functionalities perform an action and wait for an event to be produced as a result of the action to resume the workflow, but each of them follows a different approach in achieving it. Therefore, both OpenAPI callback and the Callback state approaches are suitable to perform fire & wait-for-result operations. The OpenAPI callback is an asynchronous, out-of-band request that your service will send to some other service in response to specific events. In contrast, the Callback state performs an action that triggers an external activity/service which is responsible for sending a cloud event to the workflow. Both ways aim to send an event to the workflow to resume the flow. As mentioned in the OpenAPI Callback document, when the workflow makes an asynchronous service call, you must provide the callback URL in the request body. The external service invokes the callback URL and sends a CloudEvent to the workflow. From a workflow perspective, asynchronous service indicates that the control is returned to the caller immediately without waiting for the action to be completed. Once the action is completed, a CloudEvent needs to be published to resume the workflow. For the workflow to identify the published CloudEvent it is waiting for, the external service developer includes the workflow instance ID in the CloudEvent header or uses the Event correlation. The following figure displays the process: The workflow correlation described in this document focuses on the former mechanism that is based on the fact that each workflow instance contains a unique identifier, which is generated automatically. To understand the OpenAPI Callback, see the serverless-workflow-callback-events-over-http-quarkus example application in GitHub repository. This example contains a simple workflow-service that illustrates callback state using OpenAPI callbacks functionality. A callback is a state that invokes an action and wait for an event (event that will be eventually fired by the external service notified by the action). This example consists of a callback state that waits for an event to arrive at the wait channel. Its action calls an external service named callback-event-service that publishes the wait event over HTTP. After consuming the wait event, the workflow prints the message received in the wait event and ends the workflow. The serverless-workflow-callback-events-over-http-quarkus application is initiated with the following request to http://localhost:8080/callback: { \"message\": \"Hello\" } Once the workflow is started, it makes an external service call with the callback URL and the workflow instance ID in the request body to callback-event-service. Then, as configured in the OpenAPI file, the callback URL is invoked to send a CloudEvent to the workflow. Once the wait type CloudEvent is received by the callback-workflow-service, the workflow moves to the next state and ends successfully. The following figure shows the serverless-workflow-callback-events-over-http-quarkus image: To use the OpenAPI callback in a workflow, the OpenAPI YAML file is configured with the callback as specified in the OpenAPI file. To use the Callback state in a workflow, first CloudEvent type wait is declared that the workflow uses. Following is an example of CloudEvents declaration in a workflow definition: Example of CloudEvent declaration in a workflow definition \"events\": [ { \"name\": \"waitEvent\", \"source\": \"\", \"type\": \"wait\" } After that, a Callback state is declared, which waits for a CloudEvent with the wait type. Following is an example of declaring a Callback state that handles the wait type CloudEvent: Example of a Callback State declaration handling the wait CloudEvent { \"name\": \"waitForEvent\", \"type\": \"callback\", \"action\": { \"functionRef\": { \"refName\": \"callBack\", \"arguments\": { \"uri\": \"http://localhost:8080/wait\", \"processInstanceId\": \"$WORKFLOW.instanceId\" } } }, \"eventRef\": \"waitEvent\", \"transition\": \"finish\" } Please refer configure openapi service endpoints document to set the URL dynamically using an environment variable. An event listener publishes a new wait type CloudEvent. Following is an example of a Java method that publishes the wait type CloudEvent: Example of a Java method that makes a call to Callback URL and publishes the wait CloudEvent @POST @Consumes(MediaType.APPLICATION_JSON) public void wait(EventInput eventInput) throws JsonProcessingException { logger.info(\"About to generate event for {}\",eventInput); CloudEventBuilder builder = CloudEventBuilder.v1() .withId(UUID.randomUUID().toString()) .withSource(URI.create(\"\")) .withType(\"wait\") .withTime(OffsetDateTime.now()) .withExtension(CloudEventExtensionConstants.PROCESS_REFERENCE_ID, eventInput.getProcessInstanceId()) .withData(objectMapper.writeValueAsBytes(Collections.singletonMap(\"message\", \"New Event\"))); webClient.postAbs(eventInput.getUri()).sendJson(builder.build()).toCompletionStage(); } The callback-workflow-service consumes the CloudEvent, it contains an attribute named kogitoprocrefid, which holds the instance ID of the workflow. The kogitoprocrefid attribute is crucial because when the correlation is not used, then this attribute is the only way for the Callback state to identify that the related CloudEvent needs to be used to resume the workflow. For more information about correlation, see Event correlation in Kogito Serverless Workflow. Note that each workflow is identified by a unique instance ID, which is automatically included in any published CloudEvent, as kogitoprocinstanceid CloudEvent extension. The serverless-workflow-callback-events-over-http-quarkus example application consumes the Cloudevents using Knative Eventing. For more information about incoming and outgoing CloudEvents oer HTTP, see Consuming and Producing CloudEvents over HTTP. The HTTP path where the workflow application will listen for the CloudEvents in the serverless-workflow-callback-events-over-http-quarkus example application, is configured in the application.properties file as shown below: mp.messaging.incoming.wait.connector=quarkus-http mp.messaging.incoming.wait.path=/wait Creating your first workflow service Event correlation in Kogito Serverless Workflow OpenAPI Callback Example If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"OpenAPI Callback in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"working-with-openapi-callbacks","url":"/serverlessworkflow/latest/service-orchestration/working-with-openapi-callbacks.html","titles":[{"text":"Example of the OpenAPI Callback","hash":"ref-example-callback","id":1},{"text":"HTTP transport configuration","hash":"_http_transport_configuration","id":2},{"text":"Additional resources","hash":"_additional_resources","id":3},{"text":"Found an issue?","hash":"_found_an_issue","id":4}]},"38":{"id":38,"text":"This document describes how to test your workflow application using REST Assured. REST Assured enables you to test REST APIs using Java libraries and integrates with Apache Maven. For more information about REST Assured, see REST Assured page. The testing procedure in this document is based on the serverless-workflow-examples/serverless-workflow-testing-with-rest-assured example application. You can access this example application in Kogito Examples GitHub repository. The following procedure describes how to test a workflow application that exposes the hello endpoint, which expects a name as a request parameter and returns greeting value: Example request body { \"name\": \"John Doe\" } Example response { \"id\": \"00ce5c1d-4936-4e18-998c-f5c5d5d784ad\", \"workflowdata\": { \"greeting\": \"Hello, John Doe\" } } Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. This document is based on the serverless-workflow-testing-with-rest-assured example application from the GitHub repository. Procedure Check if your project has the REST Assured dependency in your pom.xml file. If it doesn’t, add it like the following: io.rest-assured rest-assured test Create a test class named HelloTest in the src/test/java/org/kie/kogito/examples/ directory, containing the following content: Example HelloTest.java file package org.kie.kogito.examples; import io.quarkus.test.junit.QuarkusTest; import io.restassured.RestAssured; import io.restassured.http.ContentType; import org.junit.jupiter.api.BeforeAll; import org.junit.jupiter.api.Test; import static io.restassured.RestAssured.given; import static org.hamcrest.Matchers.equalTo; @QuarkusTest class HelloTest { @BeforeAll static void init() { RestAssured.enableLoggingOfRequestAndResponseIfValidationFails(); (1) } @Test void testHello() { given() .contentType(ContentType.JSON) (2) .accept(ContentType.JSON) (3) .body(\"{\\\"name\\\": \\\"John Doe\\\"}\") (4) .when() .post(\"/hello\") (5) .then() .statusCode(201) (6) .body(\"workflowdata.greeting\", equalTo(\"Hello, John Doe\")); (7) } } 1 Enables logging of the request and response when the test fails. 2 Defines JSON as the content type of the request. 3 Specifies the accept header of the request. This is an alternative for header(\"Accept\", \"application/json\"). 4 Defines the request body as {\"name\": \"John Doe\"}. 5 Specifies the request as a POST method to the /hello URL. 6 Defines 201 as the expected response status code. 7 Defines that Hello, John Doe is expected in the workflowdata.greeting JSON path. To run your test, execute the following command: Command to run a test mvn clean verify Example output [INFO] ------------------------------------------------------- [INFO] T E S T S [INFO] ------------------------------------------------------- [INFO] Running org.kie.kogito.examples.HelloTest 2022-06-03 16:36:11,461 INFO [org.jbo.threads] (main) JBoss Threads version 3.4.2.Final 2022-06-03 16:36:11,708 INFO [org.kie.kog.cod.api.uti.AddonsConfigDiscovery] (build-1) Performed addonsConfig discovery, found: AddonsConfig{usePersistence=false, useTracing=false, useMonitoring=false, usePrometheusMonitoring=false, useCloudEvents=true, useExplainability=false, useProcessSVG=false, useEventDrivenDecisions=false, useEventDrivenRules=false} 2022-06-03 16:36:12,004 INFO [org.kie.kog.cod.cor.uti.ApplicationGeneratorDiscovery] (build-9) Generator discovery performed, found [processes] 2022-06-03 16:36:14,486 INFO [org.kie.kog.add.qua.mes.com.QuarkusKogitoExtensionInitializer] (main) Registered Kogito CloudEvent extension 2022-06-03 16:36:14,612 INFO [io.quarkus] (main) serverless-workflow-testing-with-rest-assured 1.0 on JVM (powered by Quarkus 2.9.2.Final) started in 3.635s. Listening on: http://localhost:8081 2022-06-03 16:36:14,613 INFO [io.quarkus] (main) Profile test activated. 2022-06-03 16:36:14,613 INFO [io.quarkus] (main) Installed features: [cache, cdi, jackson-jq, kogito-addon-messaging-extension, kogito-processes, kogito-serverless-workflow, reactive-routes, rest-client, rest-client-jackson, resteasy, resteasy-jackson, smallrye-context-propagation, smallrye-reactive-messaging, smallrye-reactive-messaging-http, vertx] [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.819 s - in org.kie.kogito.examples.HelloTest 2022-06-03 16:36:16,559 INFO [io.quarkus] (main) serverless-workflow-testing-with-rest-assured stopped in 0.028s [INFO] [INFO] Results: [INFO] [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0 [INFO] [INFO] [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ serverless-workflow-testing-with-rest-assured --- [INFO] Building jar: /home/user/dev/kiegroup/kogito-examples/serverless-workflow-examples/serverless-workflow-testing-with-rest-assured/target/serverless-workflow-testing-with-rest-assured-1.0.jar [INFO] [INFO] --- quarkus-maven-plugin:2.9.2.Final:build (default) @ serverless-workflow-testing-with-rest-assured --- [INFO] Performed addonsConfig discovery, found: AddonsConfig{usePersistence=false, useTracing=false, useMonitoring=false, usePrometheusMonitoring=false, useCloudEvents=true, useExplainability=false, useProcessSVG=false, useEventDrivenDecisions=false, useEventDrivenRules=false} [INFO] Generator discovery performed, found [processes] [INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 2669ms [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 15.558 s [INFO] Finished at: 2022-06-03T16:36:19-03:00 [INFO] ------------------------------------------------------------------------ If you see a similar output, this means your test is executed successfully. Mocking OpenAPI services using WireMock Mocking HTTP CloudEvents sink using WireMock Kogito Serverless Workflow integration test using PostgreSQL Testing a Quarkus application REST Assured Documentation If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Testing your Quarkus Workflow Application using REST Assured","component":"serverlessworkflow","version":"1.42.0.Final","name":"basic-integration-tests-with-restassured","url":"/serverlessworkflow/latest/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","titles":[{"text":"Additional resources","hash":"_additional_resources","id":1},{"text":"Found an issue?","hash":"_found_an_issue","id":2}]},"39":{"id":39,"text":"","title":"","component":"serverlessworkflow","version":"1.42.0.Final","name":"debugging-workflow-execution-runtime","url":"/serverlessworkflow/latest/testing-and-troubleshooting/debugging-workflow-execution-runtime.html","titles":[]},"40":{"id":40,"text":"","title":"","component":"serverlessworkflow","version":"1.42.0.Final","name":"development-tools-for-troubleshooting","url":"/serverlessworkflow/latest/testing-and-troubleshooting/development-tools-for-troubleshooting.html","titles":[]},"41":{"id":41,"text":"Kogito Serverless Workflow provides a plug-in named kn-plugin-workflow for Knative CLI, which enables you to set up a local workflow project quickly using the command line. This document describes how you can install and use the kn-plugin-workflow plug-in in Kogito Serverless Workflow. You can use the Kogito Serverless Workflow plug-in to set up your local workflow project quickly using Knative CLI. Prerequisites Java 11+ is installed. Maven 3.8.6 or later is installed. (Optional) Docker is installed. (Optional) Podman is installed. Kubernetes CLI is installed. Procedure Download the latest binaries from the KIE Tooling Releases page. Run the kn workflow command using one of the following methods: Add kn workflow command in your system path and ensure that it is executable. Install kn workflow command as a plug-in of the Knative CLI using the following steps: Install the Knative CLI. For installation instructions, see Installing kn documentation. Copy the kn-workflow binary to a directory in your PATH, such as /usr/local/bin and ensure that the file name is kn-workflow. On Mac, add execution permission as follows: chmod +x /usr/local/bin/kn-workflow Some systems might block the application to run due to Apple enforcing policies. To fix this problem, check the Security & Privacy section in the System Preferences → General tab to approve the application to run. For more information, see Apple support article: Open a Mac app from an unidentified developer. Run the following command to verify that kn-workflow plug-in is installed successfully: kn plugin list After installing the plug-in, you can use kn workflow to run the related subcommands. Use the workflow subcommand in Knative CLI as follows: Methods to use workflow subcommand kn workflow kn-workflow Example output Manage Kogito Serverless Workflow projects Usage: kn workflow [command] Available Commands: build Build a Kogito Serverless Workflow project and generate a container image completion Generate the autocompletion script for the specified shell create Create a Kogito Serverless Workflow project deploy Deploy a Kogito Serverless Workflow project help Help about any command Flags: -h, --help help for kn-workflow -v, --verbose Print verbose logs Use \"kn workflow [command] --help\" for more information about a command. After installing the Kogito Serverless Workflow plug-in, you can use the create command with kn workflow to scaffold a new workflow project in your current directory. The create command sets up Quarkus project containing minimal extensions to build a workflow project. Also, the generated workflow project contains a \"hello world\" workflow.sw.json file in your .//src/main/resources directory. Prerequisites Kogito Serverless Workflow plug-in for Knative CLI is installed. For more information about installing the plug-in, see Installing the Kogito Serverless Workflow plug-in for Knative CLI. Procedure In Knative CLI, enter the following command to create a new project: Creates a project named new-project kn workflow create By default, the generated project is named as new-project. You can overwrite the project name by using the [-n|--name] flag as follows: Create a project named my-project kn workflow create --name my-project Add more extensions to the Quarkus project during its creation by using the [-e|--extension] flag as follows: Create a project with quarkus-jsonp and quarkus-smallrye-openapi extensions kn workflow create --extension quarkus-jsonp,quarkus-smallrye-openapi You can add multiple extensions using the comma-separated names of the extensions in the previous command. When you run the create command for the first time, it might take a while due to the necessity of downloading the required dependencies for the Quarkus project. After creating your workflow project, you can use the build command with kn workflow to build your workflow project in your current directory and to generate a container image. The process of building your workflow project produces a knative.yml file in the ./target/kubernetes folder. If your workflow contains events, then the building process also generates a kogito.yml file. Prerequisites Kogito Serverless Workflow plug-in for Knative CLI is installed. For more information about installing the plug-in, see Installing the Kogito Serverless Workflow plug-in for Knative CLI. A workflow project is created. For more information about creating a workflow project, see Creating workflow project using Knative CLI. Procedure In Knative CLI, enter the following command to build your workflow project: Build the project and generate a local image named dev.local/my-project kn workflow build --image dev.local/my-project By using dev.local as repository, you can deploy your Kogito Serverless Workflow project in a local environment without having to push the image to a container registry. To use the build command, you need to provide either --image or --image-name flag. In the previous command, you can use the [-i|--image] in several ways, such as: --image=[name] --image=[name]:[tag] --image=[repository]/[name] --image=[repository]/[name]:[tag] --image=[registry]/[repository]/[name] --image=[registry]/[repository]/[name]:[tag] The default value for registry and tag is quay.io and latest respectively. Also, you can use specific flags to compose the full name of the image as follows: --image-registry --image-repository --image-name --image-tag In case the --image flag is composed with specific flags as shown in the following command, then the specific value overrides the --image flag: Build the project and generate a local image named quay.io/other-user/my-project:1.0.1 kn workflow build --image my-user/my-project:1.0.0 --image-repository other-user --image-tag 1.0.1 You can use the following strategies to build a workflow project and to generate the container image: Using Jib Jib is an extension that builds a container image without the necessity of a container runtime. When using the Jib extension, the rebuilds are fast and the resultant container image is optimized. You can use the following commands to build a workflow project and to generate a local image using Jib: Build a project and generate a local image using Jib kn workflow build --image dev.local/my-project --jib The generated container image can be saved in the Docker runtime. Build a project and generate a local image using Jib kn workflow build --image dev.local/my-project --jib-podman Using the previous command, the generated container image can be saved in the Podman runtime. If you do not want to use any container runtime, then use --push to push the generated container image to the respective registry as shown in the following command: Build a project and push the image using Jib kn workflow build --image my-project --jib --push Before using the --push option, ensure that you have access to your registry. You can get the access using Docker or Podman login. Using Docker The process of building your workflow project using Docker is straightforward and also a default approach. When using Docker, you can automatically push the container image to the respective registry by using the --push option as shown in the following command: Build a project and push the image using Docker kn workflow build --image my-project --push You can use the deploy command combined with kn workflow to deploy your workflow project in your current directory. However, before deploying the project, you must build your workflow project as the build process produces deployment files, such as knative.yml and kogito.yml (In case of events) in the ./target/kubernetes folder. Prerequisites Kogito Serverless Workflow plug-in for Knative CLI is installed. For more information about installing the plug-in, see Installing the Kogito Serverless Workflow plug-in for Knative CLI. A workflow project is created. For more information about created a workflow project, see Creating workflow project using Knative CLI. A workflow project is built. For more information about building your workflow project, see Building workflow project using Knative CLI. Procedure In Knative CLI, enter the following command to deploy your workflow project: Deploy a workflow project kn workflow deploy If the deployment files (knative.yml and kogito.yml) are saved in any other folder instead of ./target/kubernetes, then you can override the path using the --path flag with deployment command as follows: Deploy a workflow project using --path kn workflow deploy --path other-path Also, ensure that you have access to your cluster and your cluster can access the generated container image. You can use the kubectl command line if you want to use a complex deployment setup for your workflow project. Creating your first workflow service If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Kogito Serverless Workflow plug-in for Knative CLI","component":"serverlessworkflow","version":"1.42.0.Final","name":"kn-plugin-workflow-overview","url":"/serverlessworkflow/latest/testing-and-troubleshooting/kn-plugin-workflow-overview.html","titles":[{"text":"Installing the Kogito Serverless Workflow plug-in for Knative CLI","hash":"proc-install-sw-plugin-kn-cli","id":1},{"text":"Creating a workflow project using Knative CLI","hash":"proc-create-sw-project-kn-cli","id":2},{"text":"Building a workflow project using Knative CLI","hash":"proc-build-sw-project-kn-cli","id":3},{"text":"Strategy for building a workflow project","hash":"con-build-strategy-kn-cli","id":4},{"text":"Deploying a workflow project using Knative CLI","hash":"proc-deploy-sw-project-kn-cli","id":5},{"text":"Additional resources","hash":"_additional_resources","id":6},{"text":"Found an issue?","hash":"_found_an_issue","id":7}]},"42":{"id":42,"text":"This document describes how you can test your workflow application that uses HTTP CloudEvents and Knative SinkBinding. The example described in this document is based on the serverless-workflow-order-processing example application. The workflow application that you want to test must be configured to use Knative Eventing. You must configure Knative Eventing using standard HTTP POST requests to send and receive events between event producers and sinks. The events between the event producers and sinks follow the CloudEvents specification, which enables creating, parsing, sending, and receiving events in any programming language. When you create an event source, you can specify a sink where events are sent to, from the source. A sink is a transferable or a callable resource that can receive incoming events from other resources. The examples of sink include Kubernetes deployments, Knative services, channels, and brokers. This document describes the testing of Knative service that is configured as a sink, and the same Knative service is mocked to verify if the CloudEvents are received correctly by the sink. In this process, the WireMock framework adds the mocked server, verifying the CloudEvents received by the sink during the workflow service execution. You can test a workflow application using SinkBinding. Prerequisites Your workflow application is working. For more information about creating a workflow application, see Creating your first workflow service. Your workflow application is configured to use HTTP CloudEvents using SinkBinding. For more information about enabling event-driven architecture in your workflow application using Knative Eventing, see Consuming and producing events on Knative Eventing. Procedure Add the required test dependencies to the pom.xml file of your workflow application: Add test dependencies to pom.xml file io.quarkus quarkus-junit5 (1) test io.rest-assured rest-assured (1) test com.github.tomakehurst wiremock-jre8 (2) test org.awaitility awaitility (3) test 1 quarkus-junit5 and rest-assured dependencies are required for HTTP-based testing in JVM mode. 2 wiremock-jre8 dependency allows you to mock the server that acts as a sink. 3 awaitility dependency is used to express the expectations of an asynchronous system. For more information, see Awaitility website. You can also see the dependencies added in pom.xml file of serverless-workflow-order-processing example application. Add failsafe maven plug-in to run integration tests: maven-failsafe-plugin in the pom.xml plug-in section maven-failsafe-plugin ${version.failsafe.plugin} org.jboss.logmanager.LogManager ${maven.home} integration-test verify More information in maven-failsafe-plugin documentation. Create a test class that mocks the sink using WireMock as shown in the following example: Example of a test class @QuarkusTest(1) public class VerifyWorkflowExecutionIT { (2) private static WireMockServer sink; (3) static { (4) RestAssured.enableLoggingOfRequestAndResponseIfValidationFails(); } /** * Starts the \"sink\" server, which is the endpoint that will receive our produced events */ @BeforeAll (5) public static void startSink() { sink = new WireMockServer(options().port(8181)); (6) sink.start(); (7) sink.stubFor(post(\"/\").willReturn(aResponse().withBody(\"ok\").withStatus(200))); (8) } @AfterAll (9) public static void stopSink() { if (sink != null) { sink.stop(); (10) } } @Test void processDomesticOrderUnderFraudEval() throws JsonProcessingException, InterruptedException { final ObjectMapper objectMapper = new ObjectMapper(); final Order order = new Order(); order.setId(UUID.randomUUID().toString()); order.setDescription(\"iPhone 12\"); order.setTotal(1001); order.setCountry(\"US\"); given() (4) .header(\"ce-specversion\", \"1.0\") .header(\"ce-id\", order.getId()) .header(\"ce-source\", \"/from/test\") .header(\"ce-type\", \"orderEvent\") .contentType(MediaType.APPLICATION_JSON) .body(objectMapper.writeValueAsString(order)) .post(\"/\") .then() .statusCode(200); await() (11) .atMost(60, SECONDS) .with().pollInterval(1, SECONDS) .untilAsserted(() -> { sink.verify(2, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(order.getId()))); sink.verify(1, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(\"\\\"type\\\":\\\"fraudEvaluation\\\"\").and(containing(\"\\\"id\\\":\\\"\" + order.getId() + \"\\\"\")))); sink.verify(1, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(\"\\\"type\\\":\\\"domesticShipping\\\"\").and(containing(\"\\\"id\\\":\\\"\" + order.getId() + \"\\\"\")))); }); (12) } } 1 @QuarkusTest starts the Quarkus server for the lifetime of the test execution run. For more information, see Quarkus - Testing your application. 2 The test name ends with IT to identify which test needs to be executed as an integration test. More details in maven-failsafe-plugin documentation. 3 WireMockServer is a mocked server instance that is used for SinkBinding for testing. 4 given() is used to test interactions with the application. For more information about testing interactions, see Testing your workflow application using REST Assured. 5 @BeforeAll annotation is used to signal that the annotated method must be executed before running all the tests. 6 Creates a WireMockServer instance, listening at the port that is passed as a parameter and must match with the sink configuration. 7 Starts the server before the tests are executed. 8 Stubs the mocked API response. It accepts a MappingBuilder instance that is used to build API mapping information, such as URL, request parameters, body, headers, and authorization. 9 @AfterAll annotation is used to signal that the annotated method must be executed after executing all the tests. 10 Stops the server after executing all the tests. 11 await() is added to wait for asynchronous operations. 12 verify verifies if the request hits the mock API using the expected event content. You can check the VerifyWorkflowExecutionIT class of serverless-workflow-order-processing example application. Start the server before executing the tests, and stop the server once the tests are completed. You can also reset the mock stubs between the tests. Configure your test application to use the WireMockServer as a sink. Also, add the reference of WireMockServer in the application.properties file as shown in the following example: Example adding sink connection property in application.properties file mp.messaging.outgoing.kogito_outgoing_stream.url=http://0.0.0.0:8181 (1) 1 The port that needs to match with the passed parameter. The parameter is passed when the WireMockServer is created in the test class. For more information, see application.properties file of serverless-workflow-order-processing example application. To run the tests, execute the following command: Run the tests mvn clean verify The testing example in this document is based on the serverless-workflow-order-processing example application. The serverless-workflow-order-processing example application contains three workflows as shown in the following figure: Figure 1. Workflows in serverless-workflow-order-processing example The Order Workflow in the serverless-workflow-order-processing example application processes the incoming order event and starts a parallel state, which sends requests to two workflows including Fraud Handling and Shipping Handling. The Order Workflow ends when both Fraud Handling and Shipping Handling workflows are completed. The Fraud Handling workflow produces a FraudEvaluation event if the received order is more than 1000 USD. In the workflow architecture, any other system or service can read the FraudEvaluation event and react upon it, such as canceling the order. Simultaneously, regardless of evaluating the fraud, the Shipping Handling workflow produces events that classify the required shipping service, such as international or domestic. In this example, domestic shipping is classified for any order, containing the address within the United States. The following figure shows the event flow among the components in the serverless-workflow-order-processing example application: Figure 2. Example of event flow among components Also, the testing components replicate the interactions to verify the events that are received by the sink as shown in the following figure: Figure 3. Example of testing events flow Before executing a test, the WireMockServer starts listening to the configured port as the sink. The sink listens to the events that are produced by the workflows. When a workflow produces an event to the sink, the produced event is received by the WireMockServer, and then the test verifies the event content. The processDomesticOrderUnderFraudEval in the VerifyWorkflowExecutionIT class, produces events, such as fraudEvaluation (Total > 1000) and domesticShipping (country = \"US\"). Also, the order event consumed by the Order Workflow needs to match the requirements as shown in the following example: Example requirements for Order Workflow final ObjectMapper objectMapper = new ObjectMapper(); final Order order = new Order(); order.setId(UUID.randomUUID().toString()); order.setDescription(\"iPhone 12\"); order.setTotal(1001); order.setCountry(\"US\"); given() .header(\"ce-specversion\", \"1.0\") .header(\"ce-id\", order.getId()) .header(\"ce-source\", \"/from/test\") .header(\"ce-type\", \"orderEvent\") .contentType(MediaType.APPLICATION_JSON) .body(objectMapper.writeValueAsString(order)) .post(\"/\") .then() .statusCode(200); After matching the requirements, the test verifies if the sink is receiving the expected events as shown in the following example: Example of a sink verification await() .atMost(60, SECONDS) .with().pollInterval(1, SECONDS) .untilAsserted(() -> { sink.verify(2, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(order.getId()))); sink.verify(1, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(\"\\\"type\\\":\\\"fraudEvaluation\\\"\").and(containing(\"\\\"id\\\":\\\"\" + order.getId() + \"\\\"\")))); sink.verify(1, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(\"\\\"type\\\":\\\"domesticShipping\\\"\").and(containing(\"\\\"id\\\":\\\"\" + order.getId() + \"\\\"\")))); }); The await() method in the previous example allows the test to retry the validations until the verifications are declared or until the specified time is expired. In this example, the specified time is 60 seconds. The following example shows how to check if the sink (WireMockServer) receives two events for the same order ID: Example if sink receives the events sink.verify(2, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(order.getId()))); To check the content of the received events, the following verifications can be declared or performed on the types: Example of verifications sink.verify(1, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(\"\\\"type\\\":\\\"fraudEvaluation\\\"\").and(containing(\"\\\"id\\\":\\\"\" + order.getId() + \"\\\"\")))); sink.verify(1, postRequestedFor(urlEqualTo(\"/\")).withRequestBody(containing(\"\\\"type\\\":\\\"domesticShipping\\\"\").and(containing(\"\\\"id\\\":\\\"\" + order.getId() + \"\\\"\")))); After declaring the verifications on received events, the test successfully ends and the WireMockServer stops. Creating your first workflow service Testing your workflow application using REST Assured Mocking OpenAPI services using WireMock Testing a Quarkus application Knative Eventing components interaction: Source, Trigger, Broker, and Sink If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Mocking HTTP CloudEvents sink using WireMock","component":"serverlessworkflow","version":"1.42.0.Final","name":"mocking-http-cloudevents-with-wiremock","url":"/serverlessworkflow/latest/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","titles":[{"text":"Overview","hash":"con-sinkbinding-test-overview","id":1},{"text":"Testing a workflow application using SinkBinding","hash":"proc-test-sw-application-sinkbinding","id":2},{"text":"Example of test execution cycle","hash":"ref-example-test-execution-cycle","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"43":{"id":43,"text":"This document describes how to mock OpenAPI services using WireMock. The testing procedure described in this document is based on the serverless-workflow-service-calls-quarkus example application. WireMock is an open source Mocking API for unit, integration, and performance tests. You can use WireMock to isolate your tests from third party APIs and prototype APIs that do not exist. Prerequisites The examples used in this document assumes that you have the following prerequisites: Required tooling is installed. For more information, see Getting familiar with Kogito Serverless Workflow tooling. A workflow project is created and orchestrates OpenAPI services. For more information about orchestrating OpenAPI services, see Orchestrating the OpenAPI services. The procedure in this section describes how you can add WireMock to your workflow application. Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. Procedure Add the following WireMock dependency to the pom.xml file of your project: Add WireMock dependency to pom.xml com.github.tomakehurst wiremock-jre8 {wiremock.version} test Replace {wiremock.version} variable with the version of WireMock that you want to use. Select one of the following methods to start your WireMock server: You can start the WireMock server as a QuarkusTestResource. If you select this method, then the WireMock server is started once before you run any test, and the server is stopped when the test finishes. This option is suitable for most use cases. You can start the WireMock server independently for each test. This option is useful when you want each test to behave differently. For more information about starting the WireMock server, see Starting WireMock server as a QuarkusTestResource and Starting WireMock server for a specific test. Start the WireMock server as shown in the following example: Example of starting a WireMock server WireMockConfiguration config = WireMockConfiguration.wireMockConfig().dynamicPort(); (1) WireMockServer wireMockServer = new WireMockServer(config); (2) wireMockServer.start(); (3) 1 Creates the configuration for the WireMock server. You can use a dynamic port since it prevents the tests from failing due to port conflicts. When you cannot use a dynamic port, you can use the WireMockConfiguration#port(int) method to use a fixed port number. 2 Creates the WireMock server instance. 3 Starts the WireMock server. Mock the endpoints as shown in the following example: Example of mocking endpoints ObjectMapper objectMapper = new ObjectMapper(); JsonNode greecePayload = objectMapper.readTree(getClass().getResourceAsStream(\"/country_mock.json\")); (1) wireMockServer.stubFor(WireMock.get(WireMock.urlEqualTo(\"/rest/v2/name/Greece\")) (2) .willReturn(WireMock.aResponse() (3) .withStatus(200) (4) .withHeader(\"Content-Type\", \"application/json\") (5) .withJsonBody(greecePayload))); (6) 1 Creates the JSON payload, which the WireMock server returns. Alternatively, you can use the ResponseDefinitionBuilder#withBody method to define a String or a byte[] as the response body. 2 Defines a stub for the /rest/v2/name/Greece endpoint. 3 Defines the response for the stub. 4 Defines the response status. 5 Defines the response headers. 6 Defines the response body. Stop the WireMock server as shown in the following example: Example of stopping a WireMock server wireMockServer.stop(); In the process of adding a mocked OpenAPI service to your tests, you need to start the WireMock server. You can start the WireMock server either as a QuarkusTestResource or you can start the server for each test. The procedure in this section describes how you can start the WireMock server as a QuarkusTestResource. For more information about QuarkusTestResource, see Starting services before the Quarkus application starts document. Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. WireMock dependency is added in the pom.xml file. Procedure Create a class that implements the QuarkusTestResource interface as shown in the following example: Example implementation of QuarkusTestResource import com.fasterxml.jackson.databind.JsonNode; import com.fasterxml.jackson.databind.ObjectMapper; import com.github.tomakehurst.wiremock.WireMockServer; import com.github.tomakehurst.wiremock.core.WireMockConfiguration; import io.quarkus.test.common.QuarkusTestResourceLifecycleManager; import java.io.IOException; import java.io.UncheckedIOException; import java.util.Map; import static com.github.tomakehurst.wiremock.client.WireMock.aResponse; import static com.github.tomakehurst.wiremock.client.WireMock.get; import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo; public class RestCountriesMockServer implements QuarkusTestResourceLifecycleManager { private WireMockServer wireMockServer; @Override public Map start() { (1) configureWiremockServer(); return Map.of(\"quarkus.rest-client.restcountries_json.url\", wireMockServer.baseUrl() + \"/rest\"); (2) } private void configureWiremockServer() { wireMockServer = new WireMockServer(WireMockConfiguration.wireMockConfig().dynamicPort()); wireMockServer.start(); ObjectMapper objectMapper = new ObjectMapper(); JsonNode greecePayload; try { greecePayload = objectMapper.readTree(getClass().getResourceAsStream(\"/country_mock.json\")); } catch (IOException e) { throw new UncheckedIOException(e); } wireMockServer.stubFor(get(urlEqualTo(\"/rest/v2/name/Greece\")) .willReturn(aResponse() .withStatus(200) .withHeader(\"Content-Type\", \"application/json\") .withJsonBody(greecePayload))); } @Override public void stop() { (3) if (wireMockServer != null) { wireMockServer.stop(); } } } 1 Starts the test resource. This method is called once before running all the tests. 2 Returns a map of application properties that are set in the test environment. In this case, the quarkus.rest-client.restcountries_json.url property is set as the base URL of the WireMock server. 3 Stops the test resource. This method is called once after running all the tests. Use the QuarkusTestResource implementation in your test class as shown in the following example: Example of a test class using the QuarkusTestResource implementation import io.quarkus.test.common.QuarkusTestResource; import io.quarkus.test.junit.QuarkusTest; import org.junit.jupiter.api.Test; @QuarkusTest @QuarkusTestResource(RestCountriesMockServer.class) (1) class CountryServiceWorkflowTest { @Test void testFeatureA() { // ... } @Test void testFeatureB() { // ... } } 1 Uses the RestCountriesMockServer class as a test resource. You can also start the WireMock server to be used in a specific test. Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. WireMock dependency is added in the pom.xml file. Procedure Wrap the logic of a test between starting and stopping the WireMock server as shown in the following example: Example of a test using a specific WireMock server instance import com.fasterxml.jackson.databind.JsonNode; import com.fasterxml.jackson.databind.ObjectMapper; import com.github.tomakehurst.wiremock.WireMockServer; import com.github.tomakehurst.wiremock.core.WireMockConfiguration; import io.quarkus.test.junit.QuarkusTest; import org.junit.jupiter.api.Test; import java.io.IOException; import static com.github.tomakehurst.wiremock.client.WireMock.aResponse; import static com.github.tomakehurst.wiremock.client.WireMock.get; import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo; @QuarkusTest class CountryServiceWorkflowTest { @Test void testFeatureA() throws IOException { WireMockServer wireMockServer = startWiremockServerForFeatureA(); try { // test logic } finally { wireMockServer.stop(); } } @Test void testFeatureB() { WireMockServer wireMockServer = startWiremockServerForFeatureB(); try { // test logic } finally { wireMockServer.stop(); } } private static WireMockServer startWiremockServerForFeatureA() throws IOException { WireMockServer wireMockServer = new WireMockServer(WireMockConfiguration.wireMockConfig().dynamicPort()); wireMockServer.start(); ObjectMapper objectMapper = new ObjectMapper(); JsonNode greecePayload = objectMapper.readTree(CountryServiceWorkflowTest.class.getResourceAsStream(\"/country_mock_feature_a.json\")); wireMockServer.stubFor(get(urlEqualTo(\"/rest/v2/name/Greece\")) .willReturn(aResponse() .withStatus(200) .withHeader(\"Content-Type\", \"application/json\") .withJsonBody(greecePayload))); return wireMockServer; } private static WireMockServer startWiremockServerForFeatureB() { WireMockServer wireMockServer = new WireMockServer(WireMockConfiguration.wireMockConfig().dynamicPort()); wireMockServer.start(); wireMockServer.stubFor(get(urlEqualTo(\"/rest/v2/name/Greece\")) .willReturn(aResponse().withStatus(404))); return wireMockServer; } } You can test your workflow application using the instructions described in Testing your workflow application using REST Assured document. Creating your first workflow service Testing your workflow application using REST Assured If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Mocking OpenAPI services using WireMock","component":"serverlessworkflow","version":"1.42.0.Final","name":"mocking-openapi-services-with-wiremock","url":"/serverlessworkflow/latest/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","titles":[{"text":"Adding a mocked OpenAPI service to your tests","hash":"proc-add-mocked-openapi-service-tests","id":1},{"text":"Starting WireMock server as a QuarkusTestResource","hash":"proc-start-wiremock-server-quarkustestresource","id":2},{"text":"Starting WireMock server for a specific test","hash":"proc-start-wiremock-server-specific-test","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"44":{"id":44,"text":"","title":"","component":"serverlessworkflow","version":"1.42.0.Final","name":"tooling","url":"/serverlessworkflow/latest/tooling/tooling.html","titles":[]},"45":{"id":45,"text":"The Saga design pattern manages data consistency across participants that are available in distributed transaction scenarios. For more information about Saga pattern, see the initial publication. In a microservice architecture, you can define a participant as microservice, which is responsible to perform actions related to the business domain. The Saga pattern manages the transactions using a sequence of steps. If a failure occurs while executing a step, then a sequence of compensating actions is executed to undo the changes that are made during the execution. As an alternative, you can leave the system in a known termination state to be consistent. To understand the implementation of Saga pattern in a workflow, you can use the serverless-workflow-saga-quarkus example application in GitHub repository. The serverless-workflow-saga-quarkus example application is based on the order fulfillment process and describes how to define the Saga pattern using Kogito Serverless Workflow. In the order fulfillment example, a user buys an item from an e-commerce application. The user adds the delivery information and payment details, and waits for the item to be delivered. The following figure shows the sequence of steps that are executed to complete an order: Figure 1. Example of order fulfillment process The previous figure contains the following steps: Order checkout: User confirms the order with selected items, payment method, and delivery address. Stock reservation: The selected items in the order are reserved in the stock. Payment processing: Payment is processed based on the selected payment method and user information. For example, in case of processing payment using credit card, then the credit is verified and allocated to the payment. Shipping processing: The shipping processing represents a mechanism, which communicates with a third-party or an internal system who are responsible for logistics and delivery. The following figure describes the Saga pattern using the success and failure workflows in the order fulfillment process: Figure 2. Example of Saga pattern in Order fulfillment process The success workflow in the previous figure consists of the following steps: Reserve item stock Process the payment Schedule the order shipping However, in the failure workflow an error occurred during the shipping process. In this situation, a sequence of compensation actions is executed, including canceling the payment and releasing the stock for the items in the order. In the serverless-workflow-saga-quarkus example application, a workflow is used that implements the Saga pattern, in which all the steps and compensation actions are defined. Also, the workflow plays the role of Saga Executor Coordinator (SEC), which orchestrates the calls to the participants in the Saga pattern. The workflow definition used to define the Saga pattern is available in the order-saga-error-handling.sw.json file. Figure 3. Example of order fulfillment Saga workflow In the previous example figure of workflow, the calls are orchestrated to the participants (for example, order service, payment service), each participant can throw possible errors, and compensations for each step are defined, that are executed once an error appears during the workflow execution. To define the interactions among participants in the Saga pattern using Serverless Workflow specification, you can use workflow states with transitions. In Serverless Workflow specification, each workflow state represents a step to be completed in the Saga pattern. Also, an action associated with the workflow state represents how a participant is invoked to execute a given step. Example of workflow state declaration representing the payment process in Saga { \"name\":\"processPayment\", \"type\":\"operation\", \"actions\":[ { \"name\":\"processPaymentAction\", \"functionRef\":{ \"refName\":\"processPayment\", \"arguments\":{ \"orderId\":\".orderId\", \"failService\":\".failService\" } }, \"actionDataFilter\":{ \"results\":\".\", \"toStateData\":\".paymentResponse\" } } ], \"transition\":\"scheduleShipping\", \"compensatedBy\":\"CancelPayment\", \"onErrors\":[ { \"errorRef\":\"process payment failed\", \"transition\":\"ServiceError\" } ] } In the previous example, the processPayment state contains a processPaymentAction action, which invokes a function to execute the payment processing that Payment Service participant might process. The transition attribute represents the next step to be started, which schedules the order shipping for the Saga pattern. Compensation actions When designing a Saga pattern, compensation actions for each step is considered as a core functionality, which is executed by a participant. In Kogito Serverless Workflow each workflow state must define a compensation action using compensatedBy attribute, indicating another workflow state that performs the compensation action. For example, in serverless-workflow-saga-quarkus, processPayment state defines CancelPayment as a compensation action in the payment process. Example of defining a compensation action \"compensatedBy\": \"CancelPayment\" Errors In Kogito Serverless Workflow errors are identified by a name and can be associated with a workflow state. For example, a process payment failed error is associated with the processPayment state. Following is an example of error declaration in the workflow definition: Example the error declaration for the Saga { \"errors\":[ { \"name\":\"reserve stock failed\", \"code\":\"org.kie.kogito.ServiceException\" }, { \"name\":\"process payment failed\", \"code\":\"org.kie.kogito.ServiceException\" }, { \"name\":\"shipping failed\", \"code\":\"org.kie.kogito.ServiceException\" } ] } Once an error occurs during the workflow execution, the associated compensation action is triggered. An error definition uses the fully qualified class name (FQCN) for Java exceptions that are thrown by functions. In the previous example of error definition, org.kie.kogito.ServiceException is thrown by the service calls that are defined as Java methods in the PaymentService.java file. Example custom function using a Java class and method { \"name\":\"reserveStock\", \"type\":\"custom\", \"operation\":\"service:org.kie.kogito.PaymentService::processPayment\" } The function that are throwing errors can be any type of functions, such as REST, OpenAPI, or gRPC. For information about error handling, see Error handling in Kogito Serverless Workflow. The workflow engine controls the execution of the flow and keeps the track of the steps that need to be compensated. Also, the engine ensures that compensated states are executed in reverse order of each completed step. The engine is a stateful, allowing Saga to contain wait states, such as callbacks. After each wait state, the workflow is persisted and can continue once it receives a request or event. The serverless-workflow-saga-quarkus example application shows a Saga workflow that is executed as request-response. This is called a straight through process, in which an entire workflow is executed in a single request. You can use the following examples as a reference to run and test the Saga pattern in a workflow: Create new success order You can use the following example to send a request for creating an order: Example request to create an order curl -L -X POST \"http://localhost:8080/order_saga_error_workflow\" -H 'Content-Type: application/json' --data-raw '{ \"orderId\": \"03e6cf79-3301-434b-b5e1-d6899b5639aa\" }' Example response { \"id\":\"b5c0bf16-1e37-4d7a-82cd-610809090d9c\", \"workflowdata\":{ \"orderId\":\"03e6cf79-3301-434b-b5e1-d6899b5639aa\", \"stockResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"dc32abe6-9706-4061-8e96-910d8e06728d\" }, \"paymentResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"505259d9-1c12-40ea-af5d-679e2cd89394\" }, \"shippingResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"d6e2d538-0229-4b8e-a363-17ebabdb3585\" }, \"orderResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"03e6cf79-3301-434b-b5e1-d6899b5639aa\" } } } The response contains the workflow data with nested attributes, which represent the responses from the execution of each step including success or failure. In the previous example, the orderResponse attribute indicates if the order can be confirmed by the client by initiating the Saga workflow. Therefore, if the value of the orderResponse attribute is success, then the order can be confirmed, otherwise the order can be canceled. When executing the application, you can also verify the log with information related to the executed steps as shown in the following example: Example console output 2022-06-24 13:44:36,666 INFO [org.kie.kog.StockService] (executor-thread-0) Reserve Stock for order 03e6cf79-3301-434b-b5e1-d6899b5639aa 2022-06-24 13:44:36,669 INFO [org.kie.kog.PaymentService] (executor-thread-0) Process Payment for order 03e6cf79-3301-434b-b5e1-d6899b5639aa 2022-06-24 13:44:36,673 INFO [org.kie.kog.ShippingService] (executor-thread-0) Schedule Shipping for order 03e6cf79-3301-434b-b5e1-d6899b5639aa 2022-06-24 13:44:36,676 INFO [org.kie.kog.OrderService] (executor-thread-0) Order Success 03e6cf79-3301-434b-b5e1-d6899b5639aa Activate compensation actions To test the workflow, an optional failService attribute is introduced, indicating which participant must respond with an error. In the following example, the ShippingService state throws an error, which breaks the workflow execution and triggers the compensation actions: Example compensation request curl -L -X POST 'http://localhost:8080/order_saga_error_workflow' -H 'Content-Type: application/json' --data-raw '{ \"orderId\": \"03e6cf79-3301-434b-b5e1-d6899b5639aa\", \"failService\": \"ShippingService\" }' Example response { \"id\":\"217050a3-6676-4c0e-8555-2fcda936e00e\", \"workflowdata\":{ \"orderId\":\"03e6cf79-3301-434b-b5e1-d6899b5639aa\", \"failService\":\"ShippingService\", \"stockResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"6ab362c6-a6c4-4517-b232-3349741271d5\" }, \"paymentResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"2114cc5b-1912-4b34-b869-734907f0fef2\" }, \"cancelPaymentResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"2114cc5b-1912-4b34-b869-734907f0fef2\" }, \"cancelStockResponse\":{ \"type\":\"SUCCESS\", \"resourceId\":\"6ab362c6-a6c4-4517-b232-3349741271d5\" }, \"orderResponse\":{ \"type\":\"ERROR\", \"resourceId\":\"03e6cf79-3301-434b-b5e1-d6899b5639aa\" } } } When executing the application, you can also verify the log with information related to the executed steps as shown in the following example: Example console output 2022-06-24 13:43:45,077 INFO [org.kie.kog.StockService] (executor-thread-0) Reserve Stock for order 03e6cf79-3301-434b-b5e1-d6899b5639aa 2022-06-24 13:43:45,215 INFO [org.kie.kog.PaymentService] (executor-thread-0) Process Payment for order 03e6cf79-3301-434b-b5e1-d6899b5639aa 2022-06-24 13:43:45,219 INFO [org.kie.kog.ShippingService] (executor-thread-0) Schedule Shipping for order 03e6cf79-3301-434b-b5e1-d6899b5639aa 2022-06-24 13:43:45,219 ERROR [org.kie.kog.MockService] (executor-thread-0) Error in ShippingService for 03e6cf79-3301-434b-b5e1-d6899b5639aa 2022-06-24 13:43:45,230 INFO [org.kie.kog.PaymentService] (executor-thread-0) Cancel Payment 4b94408d-8cad-432d-85bb-63dd79c4071e 2022-06-24 13:43:45,239 INFO [org.kie.kog.StockService] (executor-thread-0) Cancel Stock 9d543764-8a8b-4d94-aaee-e6ccbe9c94c3 2022-06-24 13:43:45,244 INFO [org.kie.kog.OrderService] (executor-thread-0) Order Failed 03e6cf79-3301-434b-b5e1-d6899b5639aa Error handling in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Saga orchestration example in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"orchestration-based-saga-pattern","url":"/serverlessworkflow/latest/use-cases/orchestration-based-saga-pattern.html","titles":[{"text":"Overview of Saga pattern","hash":"con-saga-overview","id":1},{"text":"Example of Saga pattern a workflow","hash":"ref-sw-example-saga-pattern","id":2},{"text":"Examples of running and testing the Saga pattern in a workflow","hash":"ref-sw-run-test-saga-example","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"46":{"id":46,"text":"The timeouts showcase is designed to show how to configure and execute workflows that use timeouts, according to different deployment scenarios. While all the scenarios contain the same set of workflows, they are provided as independent example projects, to facilitate the execution and understanding of each case. The following workflows are provided: callback_state_timeouts switch_state_timeouts event_state_timeouts It is a simple workflow that, when the execution reaches the state CallbackState, an action is executed, and it waits for the event callbackEvent to arrive in order to continue the execution. However, a timeout is configured to set the maximum waiting time for that event. Figure 1. callback_state_timeouts workflow Callback event definition { \"name\": \"callbackEvent\", \"source\": \"\", \"type\": \"callback_event_type\" } CallbackState definition { \"name\": \"CallbackState\", \"type\": \"callback\", \"action\": { \"name\": \"callbackAction\", \"functionRef\": { \"refName\": \"callbackFunction\", \"arguments\": { \"input\": \"${\\\"callback-state-timeouts: \\\" + $WORKFLOW.instanceId + \\\" has executed the callbackFunction.\\\"}\" } } }, \"eventRef\": \"callbackEvent\", \"transition\": \"CheckEventArrival\", \"onErrors\": [ { \"errorRef\": \"callbackError\", \"transition\": \"FinalizeWithError\" } ], \"timeouts\": { \"eventTimeout\": \"PT30S\" } } The timeout is configured with a duration of 30 seconds, and if no event arrives during this time, the flow execution moves to the next state, and the workflow’s data remains unchanged. On the other hand, if the event arrive, the event payload is merged into the workflow’s data, and thus, the eventData property of the workflow’s data, will contain the information carried by the event payload. Using this simple configuration strategy, the workflow can collect the event information, and use it for example to determine the path to go in the next state. See the callback state definition for more information. For more information about how the incoming event information can be merged into the workflow’s data you can see Event data filters. This workflow is similar to the callback_state_timeouts, but when the execution reaches the state ChooseOneEvent, it waits for one of the two configured events, visaDeniedEvent or visaApprovedEvent to arrive. If any of the configured events arrives before the timeout is overdue, the workflow execution moves to the next state defined in the corresponding transition. If none of the events arrives before the timeout is overdue, the workflow execution moves to the state defined in the defaultCondition transition. See the switch state definition for more information. Figure 2. switch_state_timeouts workflow ChooseOneEvent definition { \"name\": \"ChooseOnEvent\", \"type\": \"switch\", \"eventConditions\": [ { \"eventRef\": \"visaApprovedEvent\", \"transition\": \"ApprovedVisa\" }, { \"eventRef\": \"visaDeniedEvent\", \"transition\": \"DeniedVisa\" } ], \"defaultCondition\": { \"transition\": \"HandleNoVisaDecision\" }, \"timeouts\": { \"eventTimeout\": \"PT30S\" } } This workflow is similar to the switch_state_timeouts, but when the execution reaches the state WaitForEvent, it waits for one of the configured events, event1 or event2, to arrive. Each event has a number of configured actions to execute, but unlike the switch state, only one possible transition exists. If none of the configured events arrives before the timeout is overdue, the workflow execution moves to the next state defined in the transition property, skipping the events that were not received in time together with actions configured for them. If one of the events arrives before the timeout is overdue, the workflow executes the corresponding actions, and finally moves to the state defined in transition. The semantic of this state might vary depending on the exclusive flag, in the example the default value of true will be applied, and thus, the workflow will transition as soon as the first event arrives. See the event state definition for more information. Figure 3. event_state_timeouts workflow WaitForEvent definition { \"name\": \"WaitForEvent\", \"type\": \"event\", \"onEvents\": [ { \"eventRefs\": [ \"event1\" ], \"eventDataFilter\": { \"data\": \"${ \\\"The event1 was received.\\\" }\", \"toStateData\": \"${ .exitMessage }\" }, \"actions\": [ { \"name\": \"printAfterEvent1\", \"functionRef\": { \"refName\": \"systemOut\", \"arguments\": { \"message\": \"${\\\"event-state-timeouts: \\\" + $WORKFLOW.instanceId + \\\" executing actions for event1.\\\"}\" } } } ] }, { \"eventRefs\": [ \"event2\" ], \"eventDataFilter\": { \"data\": \"${ \\\"The event2 was received.\\\" }\", \"toStateData\": \"${ .exitMessage }\" }, \"actions\": [ { \"name\": \"printAfterEvent2\", \"functionRef\": { \"refName\": \"systemOut\", \"arguments\": { \"message\": \"${\\\"event-state-timeouts: \\\" + $WORKFLOW.instanceId + \\\" executing actions for event2.\\\"}\" } } } ] } ], \"timeouts\": { \"eventTimeout\": \"PT30S\" }, \"transition\": \"PrintExitMessage\" } To execute the workflows you can use any of the available deployment scenarios: Kogito Serverless Workflow Operator Dev Profile Quarkus Workflow Project with embedded services Quarkus Workflow Project with standalone services When you work with the SonataFlow Operator Dev Profile, the operator will automatically provision an execution environment that contains an embedded job service instance, as well as an instance of the data index service. And thus, there is no need for additional configurations when you use timeouts. To execute the workflows you must: In a command terminal, clone the kogito-examples repository, navigate to the cloned directory, and follow these steps: git clone https://github.com/kiegroup/kogito-examples.git cd kogito-examples/serverless-workflow-examples/serverless-workflow-timeouts-showcase-operator-devprofile Similar to the SonataFlow Operator Dev Profile, this scenario shows how to configure the embedded job service and data index service, when you work with a Quarkus Workflow Project. And is also intended for development purposes. In a command terminal, clone the kogito-examples repository, navigate to the cloned directory, and follow these steps: git clone https://github.com/kiegroup/kogito-examples.git cd kogito-examples/serverless-workflow-examples/serverless-workflow-timeouts-showcase-embedded This is the most complex and close to a production scenario. In this case, the workflows, the job service, the data index service, and the database, are deployed as standalone services in the kubernetes/knative cluster. Additionally, the communications from the workflows to the job service, and from the jobs service to the data index service, are resolved via the knative eventing system. By using the knative eventing system the underlying low level communication system is transparent to the integration. The following diagram shows the architecture for this use case: Every time a workflow needs to program a timer for a given timeout, a cloud event is sent to the job service for that purpose. When a timer is overdue, a rest call is executed to notify the workflow, which then must execute accordingly to the given state semantic. Workflow and job status changes are propagated to the Data Index Service via cloud events. Figure 4. Knative Workflow with Job Service architecture timeouts-showcase-extended: Is the Quarkus Workflow Project that contains the workflows, that must be maven build, and deployed into the kubernetes cluster. jobs-service-postresql: Is the job service that will be deployed into the kubernetes cluster. data-index-service-postgresql: Is the data index service that will be deployed into the kubernetes cluster. timeouts-showcase-database: Is the PostgreSQL instance that will be deployed into the kubernetes cluster. For simplification purposes, a single database instance is used for both services to store the information about the workflow instances, and the timers. However, in a production environment is recommended to have independent database instances. To execute the workflows you must: In a command terminal, clone the kogito-examples repository, navigate to the cloned directory, and follow these steps: git clone https://github.com/kiegroup/kogito-examples.git cd kogito-examples/serverless-workflow-examples/serverless-workflow-timeouts-showcase-extended Timeouts support in Kogito Serverless Workflow If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Timeouts Showcase in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"timeout-showcase-example","url":"/serverlessworkflow/latest/use-cases/timeout-showcase-example.html","titles":[{"text":"callback_state_timeouts workflow","hash":"callback_state_timeouts_workflow","id":1},{"text":"switch_state_timeouts workflow","hash":"switch_state_timeouts_workflow","id":2},{"text":"event_state_timeouts workflow","hash":"event_state_timeouts_workflow","id":3},{"text":"Executing the workflows","hash":"_executing_the_workflows","id":4},{"text":"Kogito Serverless Workflow Operator Dev Profile","hash":"execute-operator-dev-profile","id":5},{"text":"Quarkus Workflow Project with embedded services","hash":"execute-quarkus-project-embedded-services","id":6},{"text":"Quarkus Workflow Project with standalone services","hash":"execute-quarkus-project-standalone-services","id":7},{"text":"Architecture","hash":"_architecture","id":8},{"text":"Running the example","hash":"_running_the_example","id":9},{"text":"Additional resources","hash":"_additional_resources","id":10},{"text":"Found an issue?","hash":"_found_an_issue","id":11}]},"47":{"id":47,"text":"This document describes how to build and deploy your workflow on a cluster using the SonataFlow Operator only by having a SonataFlow custom resource. Every time you need to change the workflow definition the system will (re)build a new immutable version of the workflow. If you’re still in development phase, please see the Developing Workflow with the Operator guide. Follow the Kubernetes or OpenShift sections of this document based on the cluster you wish to build your workflows on. SonataFlow Operator is under active development with features yet to be implemented. Please see SonataFlow Operator Known Issues, Limitations and Roadmap. Prerequisites A Workflow definition. The SonataFlow Operator installed. See Install the SonataFlow Operator guide The operator can build workflows on Kubernetes or OpenShift. On Kubernetes, it uses Kaniko and on OpenShift a standard BuildConfig. The operator build system is not tailored for advanced use cases and you can do only a few customizations. If your scenario has strict policies for image usage, such as security or hardening constraints, you can replace the default image used by the operator to build the final workflow container image. Alternatively, you might want to test a nightly build with a bug fix or a custom image containing your customizations. By default, the operator will use the image distributed upstream to run the workflows in the development profile. You can change this image by editing the SonataFlowPlatform custom resource in the namespace where you deployed your workflows: Patching the current SonataFlowPlatform with the new builder image # use `kubectl get sonataflowplatform` to get the SonataFlowPlatform name kubectl patch sonataflowplatform --patch 'spec:\\n build:\\n config:\\n baseImage: ' -n The operator uses the sonataflow-operator-builder-config ConfigMap in the operator’s installation namespace (sonataflow-operator-system) to configure and run the workflow build process. You can change the Dockerfile entry in this ConfigMap to tailor the Dockerfile to your needs. Just be aware that this can break the build process. Example of the sonataflow-operator-builder-config ConfigMap apiVersion: v1 data: DEFAULT_BUILDER_RESOURCE_NAME: Dockerfile DEFAULT_WORKFLOW_EXTENSION: .sw.json Dockerfile: \"FROM quay.io/kiegroup/kogito-swf-builder-nightly:latest AS builder\\n \\ \\n # Copy from build context to skeleton resources project\\nCOPY * ./resources/\\n\\nRUN /home/kogito/launch/build-app.sh ./resources\\n \\n #=============================\\n \\ # Runtime Run\\n #=============================\\nFROM registry.access.redhat.com/ubi8/openjdk-11:latest\\n\\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\\n \\n # We make four distinct layers so if there are application changes the library layers can be re-used\\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/lib/ /deployments/lib/\\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/*.jar /deployments/\\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/app/ /deployments/app/\\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/quarkus/ /deployments/quarkus/\\n\\nEXPOSE 8080\\nUSER 185\\nENV AB_JOLOKIA_OFF=\\\"\\\"\\nENV JAVA_OPTS=\\\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\\\"\\nENV JAVA_APP_JAR=\\\"/deployments/quarkus-run.jar\\\"\\n\" kind: ConfigMap metadata: name: sonataflow-operator-builder-config The excerpt above is just an example. The current version might have a slightly different version. Don’t use this example in your installation. You can create or edit a SonataFlowPlatform in the workflow namespace specifying the resources requirements for the internal builder pods: Example of SonataFlowPlatform apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: build: template: resources: requests: memory: \"64Mi\" cpu: \"250m\" limits: memory: \"128Mi\" cpu: \"500m\" Every build process will reuse this configuration and start new instances based on it from now on. Only one SonataFlowPlatform is allowed per namespace. Try fetching the one the operator created for you and edit it instead of trying to create another one. You can fine tune the resources requirements for a particular workflow. Every workflow instance will have a SonataFlowBuild instance created with the same name as the workflow. You can edit the SonataFlowBuild custom resource and specify the same parameters. For example: Example of SonataFlowBuild apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowBuild metadata: name: my-workflow spec: resources: requests: memory: \"64Mi\" cpu: \"250m\" limits: memory: \"128Mi\" cpu: \"500m\" This parameters will only apply to new build instances. You can skip this section if you’re running on OpenShift. Follow these steps to configure your Kubernetes namespace to build workflow images with the operator. Create a new namespace that will hold all the resources that the operator will create (Pods, Deployments, Services, Secrets, ConfigMap, and Custom Resources) in this guide. Create a Namespace for the workflow to build and run in kubectl create namespace workflows # set the workflows namespace to your context kubectl config set-context --current --namespace=workflows You can follow these steps to publish on external registry that requires authentication. If you’re running on Minikube, just enable the internal registry. You can skip this whole section since the internal Minikube registry doesn’t require authentication. Create a secret for the container registry authentication kubectl create secret docker-registry regcred --docker-server= --docker-username= --docker-password= --docker-email= -n workflows or you can directly import your local Docker config into your Kubernetes cluster: Create a Secret for the container registry authentication based on local Docker config kubectl create secret generic regcred --from-file=.dockerconfigjson=${HOME}/.docker/config.json --type=kubernetes.io/dockerconfigjson -n workflows Double-check your ${HOME}/.docker/config.json. If you’re using local desktop authentication, this configuration won’t work in the cluster. You can initialize this by logging in to the target registry, e.g. docker login. The SonataFlowPlatform is the Custom Resource used to control the behavior of the SonataFlow Operator. It defines the behavior of the operator when handling all Kogito Serverless Workflow Custom Resources (Workflow and Build) in the given namespace. Since the operator is installed in global mode, you will need to specify a SonataFlowPlatform in each Namespace where you want to deploy Workflows. If you have deployed a workflow for development you already have a SonataFlowPlatform custom resource since the operator created one for you. Just edit the one you have. Following is a very basic SonataFlowPlatform Custom Resource example to work on Kubernetes: Example of a basic SonataFlowPlatform on Kubernetes apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: build: config: strategyOptions: KanikoBuildCacheEnabled: \"true\" registry: address: quay.io/kiegroup (1) secret: regcred (2) 1 Your registry address 2 The secret name created in the steps above On Minikube, you can remove the registry information entirely since you don’t need credentials for pushing to the internal registry: Example of a basic SonataFlowPlatform on Minikube apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: build: config: strategyOptions: KanikoBuildCacheEnabled: \"true\" The spec.build.config.strategyOptions.KanikoBuildCacheEnabled enables the internal Kaniko process to cache builder images to try to speed up the building execution. You can save this file locally and run the following command: Create a SonataFlowPlatform kubectl apply -f my-sonataflowplatform.yaml -n workflows You can also update \"on-the-fly\" the SonataFlowPlatform registry field with this command (change ) Create a SonataFlowPlatform with a specific registry cat my-sonataflowplatform.yaml | sed \"s|address: .*|address: \" | kubectl apply -f - You don’t need to do anything to build on OpenShift since the operator will configure everything for you. There are a few customizations you can do described in the Configuring the build system section. In general, the operator will create a BuildConfig to build the workflow using the mapped resource files and your workflow definition. After the build is finished, the image will be pushed to the internal OpenShift registry backed by an ImageStream object. If you are running on OpenShift, you have access to the Red Hat’s supported registry. You can change the default builder image by editing the sonataflow-operator-builder-config ConfigMap. oc edit cm/sonataflow-operator-builder-config -n sonataflow-operator-system In your editor, change the first line in the Dockerfile entry where it reads FROM quay.io/kiegroup/kogito-swf-builder-nightly:latest to the desired image. This image must be compatible with your operator’s installation. You can now send your workflow definition (SonataFlow) to the operator. You can find a basic SonataFlow bellow: Example of the greetings workflow example apiVersion: sonataflow.org/v1alpha08 kind: SonataFlow metadata: name: greeting annotations: sonataflow.org/description: Greeting example on k8s! sonataflow.org/version: 0.0.1 spec: flow: start: ChooseOnLanguage functions: - name: greetFunction type: custom operation: sysout states: - name: ChooseOnLanguage type: switch dataConditions: - condition: \"${ .language == \\\"English\\\" }\" transition: GreetInEnglish - condition: \"${ .language == \\\"Spanish\\\" }\" transition: GreetInSpanish defaultCondition: GreetInEnglish - name: GreetInEnglish type: inject data: greeting: \"Hello from JSON Workflow, \" transition: GreetPerson - name: GreetInSpanish type: inject data: greeting: \"Saludos desde JSON Workflow, \" transition: GreetPerson - name: GreetPerson type: operation actions: - name: greetAction functionRef: refName: greetFunction arguments: message: \".greeting+.name\" end: true Save a file in your local file system with this contents named greetings-workflow.yaml then run: kubectl apply -f greetings-workflow.yaml -n workflows You can check the logs of the build of your Workflow via: Get the Workflow pod logs # on Kubernetes kubectl logs kogito-greeting-builder -n workflows # on OpenShift oc logs buildconfig/greeting -n workflows The final pushed image must be printed into the logs at the end of the build. In order to check that the Kogito Serverless Workflow Greeting is up and running, you can try to perform a test HTTP call, from the greeting Pod. Procedure Expose the workflow so you can access it: Exposing the greeting workflow on Minikube # On Minikube you can use Nodeport kubectl patch svc greeting -n workflows -p '{\"spec\": {\"type\": \"NodePort\"}}' GREETING_SVC=$(minikube service greeting -n workflows --url) Exposing the greeting workflow on OpenShift # On OpenShift you can expose a route: https://docs.openshift.com/container-platform/4.13/networking/routes/route-configuration.html#nw-creating-a-route_route-configuration oc expose svc greeting -n workflows # get the public URL GREETING_SVC=$(oc get route/greeting --template='{{.spec.host}}') Make the HTTP call using curl: Check if the greeting workflow is running curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' $GREETING_SVC/greeting If everything is working, you should receive a response like this: Response from the greeting workflow {\"id\":\"b5fbfaa3-b125-4e6c-9311-fe5a3577efdd\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} SonataFlow Operator Known Issues, Limitations and Roadmap Developing Workflow with the Operator If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Building and Deploying Workflows with the Operator","component":"serverlessworkflow","version":"1.42.0.Final","name":"build-and-deploy-workflows","url":"/serverlessworkflow/latest/cloud/operator/build-and-deploy-workflows.html","titles":[{"text":"Configuring the build system","hash":"configure-build-system","id":1},{"text":"Using another Workflow base builder image","hash":"_using_another_workflow_base_builder_image","id":2},{"text":"Customize the base build Dockerfile","hash":"_customize_the_base_build_dockerfile","id":3},{"text":"Changing resources requirements","hash":"_changing_resources_requirements","id":4},{"text":"Building on Kubernetes","hash":"building-kubernetes","id":5},{"text":"Create a Namespace for the building phase","hash":"_create_a_namespace_for_the_building_phase","id":6},{"text":"Create a Secret for the container registry authentication","hash":"_create_a_secret_for_the_container_registry_authentication","id":7},{"text":"Configure the SonataFlow Operator (i.e. registry address, secret) for building your Workflows","hash":"_configure_the_sonataflow_operator_i_e_registry_address_secret_for_building_your_workflows","id":8},{"text":"Building on OpenShift","hash":"building-openshift","id":9},{"text":"Changing the base builder image","hash":"_changing_the_base_builder_image","id":10},{"text":"Build and deploy your workflow","hash":"build-deploy-workflow","id":11},{"text":"Check if the Workflow is running","hash":"_check_if_the_workflow_is_running","id":12},{"text":"Additional resources","hash":"_additional_resources","id":13},{"text":"Found an issue?","hash":"_found_an_issue","id":14}]},"48":{"id":48,"text":"This document describes how to configure a Workflow service with the SonataFlow Operator. When the operator deploys the Workflow service, it also creates a ConfigMap named after the SonataFlow object with the suffix -props. For example, if your Workflow name is greeting, then the ConfigMap name is greeting-props. You can use the Kubernetes object editor of your preference to add or edit the properties in the Workflow configuration. Using kubectl you can do: Editing the Workflow Properties kubectl edit cm -props Note that it’s important to respect the properties format, otherwise the operator will replace your configuration with the default one. Here’s an example of a Workflow properties stored within a ConfigMap: Example of a Workflow ConfigMap Properties apiVersion: v1 kind: ConfigMap metadata: labels: app: greeting name: greeting-props namespace: default data: application.properties: | my.properties.key = any-value The underlying runtime engine that executes the Workflow service is based on Quarkus. The application.properties key in the ConfigMap means that you can configure the Workflow as you would any Quarkus application. Any Kogito Serverless Workflow configuration that the documentation describes or general Quarkus application property can be configured using this method. A few properties cannot be changed in this configuration. Usually, they are already defined in the properties file. The table below lists them. Table 1. List of immutable properties Property Key Immutable Value Profile quarkus.http.port 8080 all quarkus.http.host 0.0.0.0 all org.kie.kogito.addons.knative.eventing.health-enabled false dev If you try to change any of them, the operator will override them with the default, but preserving your changes in other property keys. Configuration properties in Kogito Serverless Workflow SonataFlow Operator Known Issues, Limitations and Roadmap Developing Workflow with the Operator Building and Deploying Workflows with the Operator If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Configuring Workflow Services","component":"serverlessworkflow","version":"1.42.0.Final","name":"configuring-workflows","url":"/serverlessworkflow/latest/cloud/operator/configuring-workflows.html","titles":[{"text":"Editing the Workflow Configuration","hash":"_editing_the_workflow_configuration","id":1},{"text":"Immutable properties","hash":"_immutable_properties","id":2},{"text":"Additional resources","hash":"_additional_resources","id":3},{"text":"Found an issue?","hash":"_found_an_issue","id":4}]},"49":{"id":49,"text":"This document describes how you can develop your Workflows directly on Kubernetes with the SonataFlow Operator. Workflows in the development profile are not tailored for production environments. To build and deploy an immutable Workflow with the operator, see Building and Deploying Workflows with the Operator. SonataFlow Operator is under active development with features yet to be implemented. Please see SonataFlow Operator Known Issues, Limitations and Roadmap. The development profile is the easiest way to start playing around with Workflows and the operator. To get started, you can use an editor of your choice to create a new SonataFlow Custom Resource YAML definition. For example: Example of a Kubernetes Kogito Serverless Workflow YAML definition apiVersion: sonataflow.org/v1alpha08 kind: SonataFlow metadata: name: greeting annotations: sonataflow.org/description: Greeting example on k8s! sonataflow.org/version: 0.0.1 sonataflow.org/profile: dev (1) spec: flow: (2) start: ChooseOnLanguage functions: - name: greetFunction type: custom operation: sysout states: - name: ChooseOnLanguage type: switch dataConditions: - condition: \"${ .language == \\\"English\\\" }\" transition: GreetInEnglish - condition: \"${ .language == \\\"Spanish\\\" }\" transition: GreetInSpanish defaultCondition: GreetInEnglish - name: GreetInEnglish type: inject data: greeting: \"Hello from JSON Workflow, \" transition: GreetPerson - name: GreetInSpanish type: inject data: greeting: \"Saludos desde JSON Workflow, \" transition: GreetPerson - name: GreetPerson type: operation actions: - name: greetAction functionRef: refName: greetFunction arguments: message: \".greeting+.name\" end: true 1 The annotation sonataflow.org/profile: dev tells the operator to deploy the Workflow using the development profile. This means that the operator will build a running instance of the Workflow ready to receive changes during your development cycle. 2 In the flow attribute goes the Workflow definition as described by the CNCF Serverless Workflow specification. So if you already have a workflow definition, you can use it there. Alternatively, you can use the editors to create your workflow definition. Prerequisites You have installed the SonataFlow Operator You have created a new Kogito Serverless Workflow Kubernetes YAML file Having a new Kubernetes Workflow definition in a YAML file (you can use the above example), you can deploy it in your cluster with the following command: Deploying a new SonataFlow Custom Resource in Kubernetes kubectl apply -f -n Alternatively, you can try one of the examples available in the operator repository: Deploying the greeting Workflow example kubectl apply -f https://raw.githubusercontent.com/kiegroup/kogito-serverless-operator/v1.42.0/test/testdata/sw.kogito_v1alpha08_sonataflow_devmode.yaml -n Replace with the Namespace you’re using to deploy your workflows You can follow the Workflow status to check if everything is fine with: Checking the Workflow status kubectl get workflow -n -w You should see the Workflow conditions evolving to READY in a few seconds: Example workflow deployment status NAME PROFILE VERSION ADDRESS READY REASON greeting dev 0.0.1 False WaitingForDeployment greeting dev 0.0.1 True The REASON field gives you a cue about the current Workflow status. You can make changes to the Workflow YAML using any Kubernetes editor. For example, you can use kubectl and the following command: kubectl edit workflow/greeting -n and changing the Workflow definition inside the Custom Resource Spec section. Alternatively, you can save the Custom Resource definition file and edit it with your desired editor and re-apply it. For example using VSCode, there are the commands needed: curl -S https://raw.githubusercontent.com/kiegroup/kogito-serverless-operator/v1.42.0/config/samples/sw.kogito_v1alpha08_sonataflow_devmode.yaml > workflow_devmode.yaml code workflow_devmode.yaml kubectl apply -f workflow_devmode.yaml -n The operator ensures that the latest Workflow definition is running and ready. This way, you can include the Workflow in your development scenario and start making requests to it. In order to check that the Kogito Serverless Workflow Greeting workflow is up and running, you can try to perform a test HTTP call. First, you must get the service URL: Exposing the Workflow minikube service greeting -n --url http://127.0.0.1:57053 # use the above output to get the current Workflow URL in your environment When running on Minikube, the service is already exposed for you via NodePort. On OpenShift, a Route is automatically created in devmode. If you’re running on Kubernetes you can expose your service using an Ingress. You can now point your browser to the Swagger UI and start making requests with the REST interface. For example, using the above command execution you can access the Swagger UI via http://127.0.0.1:57053/q/swagger-ui/. At the Swagger UI, click on \"POST /greeting\", then on \"Try it out!\". Copy the following JSON message and hit execute: Operation Greeting result { \"name\": \"Jane Doe\" } Figure 1. The Swagger UI executing the POST /greeting operation You should see a result similar to this: Operation Greeting result { \"id\": \"984b5c6c-36ef-48ba-aa11-89fa54d25e98\", \"workflowdata\": { \"name\": \"Jane Doe\", \"greeting\": \"Hello from JSON Workflow, \" } } You can even make changes to your SonataFlow YAML file and see the results using the Swagger UI. In order to remove the Kogito Serverless Workflow Greeting, you can execute the following command: Removing the Workflow kubectl delete -f -n See the Referencing Additional Files in the Workflow guide for more complex scenarios where you may need to reference other resources in the workflow definition. If your scenario has strict policies for image usage, such as security or hardening constraints, you can replace the default image used by the operator. Alternatively, you might want to test a nightly build with a bug fix or a custom image containing your customizations. By default, the operator will use the image distributed upstream to run the workflows in the development profile. You can change this image by editing the SonataFlowPlatform custom resource in the namespace where you deployed your workflows: Patching the current SonataFlowPlatform with the new image # use `kubectl get sonataflowplatform` to get the SonataFlowPlatform name kubectl patch sonataflowplatform --patch 'spec:\\n devMode:\\n baseImage: ' -n From now on, every deployment in the development profile will use this image to run the workflow. The default image was created to run a Quarkus Java application in dev mode. You can replace this image with another one as long as it has the same concept. One way of doing this is using the default as the base image. As you make changes to your workflow during development, it’s likely that you will need to troubleshoot it when something goes wrong. To ensure the Workflow is running in a healthy state, the operator deploys its Pod with health check probes. If the changes you make to your Workflow cause the health checks to fail, the Pod executing the Workflow will stop responding. The following will help you discover the reason for any failure during development. Analyze the Workflow status with: Get the Workflow status conditions kubectl get workflow -o jsonpath={.status.conditions} | jq . It can give you a clue about what might be happening. See Understanding Workflow Services Status Conditions for more information. Fetch the logs and look for ERROR messages: Watch the workflow logs kubectl logs deployment/ -f If you decide to open an issue or ask for help in Kogito Serverless Workflow communication channels, this logging information is always useful for the person who will try to help you. The SonataFlow Operator is under active development. Sometimes a feature might not be available yet. Please see SonataFlow Operator Known Issues, Limitations and Roadmap for a comprehensive list of available features. If you identify that you are attempting to use a feature that is not available yet, you can file a new issue, so we can prioritize it. Alternatively, you can ask in Kogito Serverless Workflow communication channels. A wrong configuration (or lack of one) might prevent your Workflow from running correctly. The operator deploys a ConfigMap that holds the workflow properties for the Workflow. Get the properties ConfigMap kubectl get cm -props The ConfigMap name pattern is the Workflow name followed by -props. Make sure that the configuration is correct and you’re not missing any required properties for a given feature to work. You can make any changes to the configuration by simply editing the content of the ConfigMap. Once you have updated the configuration in the ConfigMap, the operator ensures that these properties are applied to the workflow. See Configuring Workflow Services for more information. The SonataFlow Operator validates the Workflow definition at the moment you create or edit the YAML file, preventing you from creating an invalid workflow. As the operator is under active development, errors during the validation might occur. In the case where validation has not prevented your error, you might have to make a few modifications to the Workflow definition to fix any problems. You can identify such problems by looking at the deployed Workflow logs as explained here. If you find an issue with a cause is not listed in this section, please let us know. Referencing Additional Files in the Workflow Building and Deploying Workflows with the Operator If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Developing Workflow with the Operator","component":"serverlessworkflow","version":"1.42.0.Final","name":"developing-workflows","url":"/serverlessworkflow/latest/cloud/operator/developing-workflows.html","titles":[{"text":"Introduction to the Development Profile","hash":"_introduction_to_the_development_profile","id":1},{"text":"Deploying a New Workflow","hash":"_deploying_a_new_workflow","id":2},{"text":"Check if the Workflow is running","hash":"_check_if_the_workflow_is_running","id":3},{"text":"Remove the Workflow","hash":"_remove_the_workflow","id":4},{"text":"Referencing resources in the Workflow","hash":"_referencing_resources_in_the_workflow","id":5},{"text":"Using another Workflow base image","hash":"_using_another_workflow_base_image","id":6},{"text":"Troubleshooting the Workflow","hash":"troubleshooting","id":7},{"text":"Basic Troubleshooting","hash":"basic-troubleshooting","id":8},{"text":"Possible Failure Scenarios","hash":"_possible_failure_scenarios","id":9},{"text":"Feature Not Yet Supported","hash":"_feature_not_yet_supported","id":10},{"text":"Wrong Workflow Configuration","hash":"_wrong_workflow_configuration","id":11},{"text":"Wrong Workflow Definition","hash":"_wrong_workflow_definition","id":12},{"text":"Additional resources","hash":"_additional_resources","id":13},{"text":"Found an issue?","hash":"_found_an_issue","id":14}]},"50":{"id":50,"text":"This guide describes how to install the SonataFlow Operator in a Kubernetes cluster. The operator is in an early development stage (community only) and has been tested on Kubernetes 1.22+, and Minikube. Prerequisites A Kubernetes cluster with admin privileges. Alternatively, you can use Minikube or KIND. kubectl command-line tool is installed. Otherwise, Minikube provides it. You can safely skip this section if you’re not using Minikube. Prerequisites A machine with at least 8GB memory and a CPU with 8 cores Docker or Podman installed Run the following command to create a new instance capable of installing the operator and deploy workflows: minikube start --cpus 4 --memory 4096 --addons registry --addons metrics-server --insecure-registry \"10.0.0.0/24\" --insecure-registry \"localhost:5000\" To speed up the build time, you can increase the CPUs and memory options so that your Minikube instance will have more resources. For example, use --cpus 12 --memory 16384. If you have already created your Minikube instance, you will need to recreate it for these changes to apply. If Minikube does not work with the default driver, also known as docker, you can try to start with the podman driver as follows: Start Minikube with the Podman driver minikube start [...] --driver podman To install the Kogito Serverless Workflow Operator, you can use the following command: Install Kogito Serverless Workflow Operator on Kubernetes kubectl create -f https://raw.githubusercontent.com/kiegroup/kogito-serverless-operator/v1.42.0/operator.yaml You can follow the deployment of the Kogito Serverless Workflow Operator: Watch the Kogito Serverless Workflow Operator pod kubectl get pod -n sonataflow-operator-system --watch A successful installation should have an output like this: Successful Installation Output NAME READY STATUS RESTARTS AGE sonataflow-operator-controller-manager-948547ffd-sr2j2 0/2 ContainerCreating 0 6s sonataflow-operator-controller-manager-948547ffd-sr2j2 1/2 Running 0 7s sonataflow-operator-controller-manager-948547ffd-sr2j2 2/2 Running 0 20s You can also follow the operator’s log: Watch the Kogito Serverless Workflow Operator pod logs kubectl logs deployment/sonataflow-operator-controller-manager -n sonataflow-operator-system -f Once the operator is running, it will watch for instances of the Kogito Serverless Workflow Custom Resources (CR). Using CRs, you can configure your Kogito Serverless Workflow environment and define Workflows and builds to be handled by the operator. For the operator to correctly manage the CR instances, you must first install the Kogito Serverless Workflow Custom Resource Definitions (CRDs). To check if the CRDs are correctly installed, try running: Check if the CRDs are correctly installed kubectl get crds | grep sonataflow sonataflowbuilds.sonataflow.org 2023-03-08T18:31:15Z sonataflowplatforms.sonataflow.org 2023-03-08T18:31:15Z sonataflows.sonataflow.org 2023-03-08T18:31:15Z To uninstall the SonataFlow Operator, first, you must delete all the Kogito Serverless Workflow Custom Resources (CR) instances managed by it. Once the CRs are deleted, you can then delete all resources created during the operator installation. To delete every CR managed by the operator in your cluster, you can run these series of commands: Delete all Kogito Serverless Workflow CR instances kubectl delete --all workflow --all-namespaces kubectl delete --all sonataflowbuild --all-namespaces kubectl delete --all sonataflowplatform --all-namespaces Alternatively, if you created everything under the same Namespace, deleting the given namespace has the same outcome. To uninstall the correct version of the operator, first you must get the current version by running: Getting the operator version kubectl get deployment sonataflow-operator-controller-manager -n sonataflow-operator-system -o jsonpath=\"{.spec.template.spec.containers[?(@.name=='manager')].image}\" quay.io/kiegroup/kogito-serverless-operator-nightly:1.41.0 The operator manager image reflects the current operator’s version. Replace the major and minor version names in the command below. For example, if the image version is 1.41.0 use 1.41 in the placeholder: Uninstalling the operator kubectl delete -f https://raw.githubusercontent.com/kiegroup/kogito-serverless-operator/.x/operator.yaml If you’re running a snapshot version, use this URL instead https://raw.githubusercontent.com/kiegroup/kogito-serverless-operator/main/operator.yaml. SonataFlow Operator Known Issues, Limitations and Roadmap Developing Workflow with the Operator If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Install the SonataFlow Operator","component":"serverlessworkflow","version":"1.42.0.Final","name":"install-serverless-operator","url":"/serverlessworkflow/latest/cloud/operator/install-serverless-operator.html","titles":[{"text":"Prepare a Minikube Instance","hash":"_prepare_a_minikube_instance","id":1},{"text":"Install the Kogito Serverless Workflow Operator","hash":"_install_the_kogito_serverless_workflow_operator","id":2},{"text":"Uninstall the Operator","hash":"_uninstall_the_operator","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"51":{"id":51,"text":"The SonataFlow Operator is currently in Alpha version, is under active development. The following issues are currently being prioritized: Implement admission webhooks for workflow validation Manage the Functions included in a Workflow with Operator Enable toggle Workflow CR from devmode to production mode and vice-versa Review build failures and signal the reasoning in the Events API Handle deployment failures in prod profile Evaluate internal registry integration on OpenShift, Kubernetes and Minikube Add support to GET method to Knative custom function Review the need of the knative/kubernetes addons inside the dev profile builder image Knative eventing addon should not provide defaults for incoming/outgoing","title":"SonataFlow Operator Known Issues, Limitations and Roadmap","component":"serverlessworkflow","version":"1.42.0.Final","name":"known-issues","url":"/serverlessworkflow/latest/cloud/operator/known-issues.html","titles":[{"text":"Roadmap","hash":"_roadmap","id":1},{"text":"CNCF Specification v0.8 Alignment","hash":"_cncf_specification_v0_8_alignment","id":2},{"text":"Workflow Productization Profile","hash":"_workflow_productization_profile","id":3},{"text":"Knative Integration","hash":"_knative_integration","id":4}]},"52":{"id":52,"text":"When migrating to version 1.43.0, you must review the SonataFlowPlatform instances. Procedure Change the .spec.platform to .spec.build.config. For example, given that you have: apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: platform: registry: address: quay.io/kiegroup secret: regcred You should change it to: apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: build: config: registry: address: quay.io/kiegroup secret: regcred Change the .spec.build to .spec.build.template. For example, given that you have: apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: build: resources: requests: memory: \"64Mi\" cpu: \"250m\" limits: memory: \"128Mi\" cpu: \"500m\" You should change it to: apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: build: template: resources: requests: memory: \"64Mi\" cpu: \"250m\" limits: memory: \"128Mi\" cpu: \"500m\" Change the .spec.devModeBaseImage to spec.devMode.baseImage. For example, given that you have: apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: devModeBaseImage: quay.io/johndoe/myworkflow:latest You should change it to: apiVersion: sonataflow.org/v1alpha08 kind: SonataFlowPlatform metadata: name: sonataflow-platform spec: devMode: baseImage: quay.io/johndoe/myworkflow:latest","title":"Migration Guide","component":"serverlessworkflow","version":"1.42.0.Final","name":"migration-guide","url":"/serverlessworkflow/latest/cloud/operator/migration-guide.html","titles":[{"text":"Version 1.43.0","hash":"_version_1_43_0","id":1}]},"53":{"id":53,"text":"This document describes how to reference additional files in the SonataFlow Custom Resource (CR). Most of the time, a workflow definition will require not only the flow definition, but also OpenAPI or AsyncAPI specification descriptors, schemas, subflows definitions, and etc. For example, when doing service orchestration using OpenAPI descriptors, you need to tell the workflow where to find these descriptors in your context. If these files are not in a remote location that can be accessed via the HTTP protocol, you must describe in the SonataFlow CR where to find them within the cluster. This is done via ConfigMaps. Prerequisites You have the files available in your file system You have permissions to create ConfigMaps in the target namespace Given that you already have the file you want to add to your workflow definition, you can create a ConfigMap as you normally would with the contents of the file. For example, given the following workflow: Example of a workflow referencing additional files apiVersion: sonataflow.org/v1alpha08 kind: SonataFlow metadata: name: service annotations: sonataflow.org/description: Hello Service! sonataflow.org/version: 0.0.1 sonataflow.org/profile: dev spec: flow: start: Service dataInputSchema: specs/workflow-service-schema.json (1) functions: - name: isWinner operation: specs/workflow-service-openapi.json#isWinner (2) type: rest states: - name: Service type: operation actions: - name: CallService functionRef: refName: isWinner end: true 1 The workflow defines an input schema 2 The workflow requires an OpenAPI specification file to make a REST invocation For this example, you have two options. You can either create two ConfigMaps to have a clear separation of concerns or only one with both files. From the operator perspective, it won’t make any difference since both files will be available for the workflow application at runtime. To make it simple, you can create only one ConfigMap. Given that the files are available in the current directory: Creating a ConfigMap from the current directory kubectl create configmap service-files --from-file=$(pwd) -n Replace with the namespace where you are going to deploy the workflow. The operator won’t access ConfigMaps in other namespaces. You should have a ConfigMap with two data entries similar to this one: Example of a ConfigMap containing the data for the worflow kind: ConfigMap apiVersion: v1 metadata: name: service-files data: workflow-service-schema.json: # data was removed to save space workflow-service-openapi.json: # data was removed to save space Now you can reference this ConfigMap to your SonataFlow CR: SonataFlow CR referencing a ConfigMap resource apiVersion: sonataflow.org/v1alpha08 kind: SonataFlow metadata: name: service annotations: sonataflow.org/description: Hello Service! sonataflow.org/version: 0.0.1 sonataflow.org/profile: dev spec: resources: (1) configMaps: - configMap: name: service-files (2) workflowPath: specs (3) flow: start: Service dataInputSchema: specs/workflow-service-schema.json functions: - name: isWinner operation: specs/workflow-service-openapi.json#isWinner type: rest states: - name: Service type: operation actions: - name: CallService functionRef: refName: isWinner end: true 1 Introduced a new attribute .spec.resources where you can bind the ConfigMap to the SonataFlow CR 2 The name of the ConfigMap in the same namespace 3 The path where we want to reference these files Note that the workflowPath is specs. This is the path where you want to reference the files within the ConfigMap in the workflow definition. Always create your ConfigMaps before the SonataFlow since not having the files available during startup might break the deployment. Any files you have to map to the flow definition can be added to the SonataFlow CR using this procedure. The ConfigMap containing workflow files are not tied to a particular SonataFlow instance, just referenced by it. It means that the operator won’t edit or delete them if the SonataFlow CR is updated or deleted. You have total control of the ConfigMap instance. You can organize your ConfigMaps in a way that other workflows could reuse them. In other words, one ConfigMap can be mapped to many SonataFlow Custom Resources. For example, if you have many OpenAPI or AsyncAPI specification files that your workflows can access, you can group them by domain. This way you create a static Service Registry using ConfigMaps. Other developers within your company can reuse the same specification files when designing workflows. The same applies for data input and output schemas, subflows definitions, and so on. SonataFlow Operator Known Issues, Limitations and Roadmap Developing Workflow with the Operator Configuring Workflow Services If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Referencing Additional Files in the Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"referencing-resource-files","url":"/serverlessworkflow/latest/cloud/operator/referencing-resource-files.html","titles":[{"text":"Creating ConfigMaps with Workflow Additional Files","hash":"_creating_configmaps_with_workflow_additional_files","id":1},{"text":"Creating a Static Service Registry","hash":"_creating_a_static_service_registry","id":2},{"text":"Additional resources","hash":"_additional_resources","id":3},{"text":"Found an issue?","hash":"_found_an_issue","id":4}]},"54":{"id":54,"text":"This document describes the Status and Conditions of a SonataFlow object managed by the SonataFlow Operator. Kubernetes Status is an important property to observe in order to understand what is currently happening with the object. It can also help you troubleshoot or integrate with other objects in the cluster. You can inspect the Status of any Workflow object using the following command: Checking the Workflow Status kubectl get workflow -n -o jsonpath={.status} The table below lists the general structure of a Workflow status: Table 1. Description of SonataFlow Status object Status Description ObservedGeneration Last object generation observed by the operator Conditions Current observed Workflow Conditions Address External or internal Workflow access endpoint. Implements the Knative Addressable Interface RecoverFailureAttempts How many attempts the operator tried to recover from a failure The Conditions property might vary depending on the Workflow profile. The next sections describe the current implementation. When you deploy a Workflow with the development profile, the operator deploys a ready-to-use container with a running Workflow instance. The following table lists the possible Conditions. Table 2. Conditions Scenarios in Development Condition Status Reason Description Built Unknown In development profile there’s no build process, so this state remains in Unknown status Running True The Workflow is running and in healthy state Running False WaitingForDeployment The Workflow is waiting for the underlying deployment object to have a minimum availability Running False DeploymentFailure There was a problem with the underlying deployment object. Check the message in this Condition and the Workflow Pod logs for more info Running False DeploymentIsUnavailable The underlying deployment object doesn’t have the minimum availability for this Workflow. Check the message in this condition and the Workflow Pod logs for more info Running False AttemptToRedeployFailed If the Workflow Deployment is not available, the operator will try to rollout the Deployment three times before entering this stage. Check the message in this Condition and the Workflow Pod logs for more info In normal conditions, the Workflow will transition from Running, WaitingForDeployment condition to Running. In case something wrong happens, consult the section Workflow Troubleshooting in Development. Deploying the Workflow in Production profile makes the operator build an immutable image for the Workflow application. The progress of the immutable image build can be followed by observing the Workflow Conditions. Table 3. Condition Scenarios in Production Condition Status Reason Description Built False BuildIsRunningReason The build is currently running Built False BuildFailedReason The build has failed and any attempts to have it run failed Built True Last build has finished successfully Running True The Workflow is running and in healthy state Running False WaitingForPlatform The Workflow can’t have a Pod running until a SonataFlowPlatform is ready Running False WaitingForBuildReason The Workflow is waiting for the build to finish to start running Running False WaitingForDeployment The Workflow is waiting for the underlying Deployment object to have a minimum availability Running False DeploymentFailure There was a problem with the underlying Deployment object. Check the message in this Condition and the Workflow Pod logs for more info Running False DeploymentIsUnavailable The underlying Deployment object doesn’t have the minimum availability for this Workflow. Check the message in this Condition and the Workflow Pod logs for more info Running False AttemptToRedeployFailed If the Workflow Deployment is not available, the operator will try to roll out the Deployment three times before entering this stage. Check the message in this Condition and the Workflow Pod logs for more info When building an image for a Workflow resource, a SonataFlowBuild will first be created and the operator will wait for the associated build to finish. Once the build is complete, the Workflow transitions to the deployment phase, which will provide a new Workflow service Pod to run with the built image. SonataFlow Operator Known Issues, Limitations and Roadmap Developing Workflow with the Operator Building and Deploying Workflows with the Operator If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Understanding Workflow Services Status Conditions","component":"serverlessworkflow","version":"1.42.0.Final","name":"workflow-status-conditions","url":"/serverlessworkflow/latest/cloud/operator/workflow-status-conditions.html","titles":[{"text":"General Status","hash":"_general_status","id":1},{"text":"Development Profile Conditions","hash":"_development_profile_conditions","id":2},{"text":"Production Profile Conditions","hash":"_production_profile_conditions","id":3},{"text":"Additional resources","hash":"_additional_resources","id":4},{"text":"Found an issue?","hash":"_found_an_issue","id":5}]},"55":{"id":55,"text":"This document describes how to build a Serverless Application Container image using the Quarkus CLI. Prerequisites A workflow project is created. For more information about creating a workflow project, see Creating your first Serverless Workflow service. Latest version of Docker is installed. Alternatively, you can use Jib to build container images. However, Docker is required to build GraalVM native image using the Quarkus native builder image. Optionally, GraalVM 22.3.0 is installed. Quarkus provides a few extensions to build container images, such as Jib, docker, s2i, and buildpacks. For more information about the Quarkus extensions, see the Quarkus documentation. The examples in this document assume that you have the Quarkus tooling installed. For more information about the tooling, see Getting familiar with Kogito Serverless Workflow tooling. To get started with building workflow images, you can use the serverless-workflow-greeting-quarkus example application. You can skip the following procedure if you already have a workflow application. Procedure Clone the kogito-examples repository and navigate to the serverless-workflow-greeting-quarkus example application. Clone an example application git clone --branch main https://github.com/kiegroup/kogito-examples.git cd kogito-examples/serverless-workflow-examples/serverless-workflow-greeting-quarkus To run the example application, follow the instructions in Creating your first workflow service. Install the Quarkus command line interface (CLI). For more information, see Installing the Quarkus CLI. Add the required Quarkus extension using Quarkus CLI: Add the Jib extension The kogito-examples already have this extension added by default, and can be activated with the container Maven profile. The steps to add the extension in your Serverless Workflow application are: quarkus extension add 'container-image-jib' After adding the Jib extension, you can verify the newly added dependency in the pom.xml file: Verify the Jib extension io.quarkus quarkus-container-image-jib After installing the required tooling, you can start building your workflow application. Prerequisites You have created a Quarkus project. Quarkus CLI is installed. For more information about installing the Quarkus CLI, see Installing the Quarkus CLI. Procedure In a command terminal, navigate to your Quarkus project. To build your workflow application on Quarkus, set the quarkus.container-image.build property value to true and run the following command: Build your workflow application quarkus build -Dquarkus.container-image.build=true The previous command builds your image with name: {system_username}/{project_artifactId}:{project_version}. Optionally, you can set the following properties to specify the image: quarkus.container-image.registry: To define the registry address of the image, such as quay.io. When using OpenShift use the provided registry. quarkus.container-image.group: To define the registry namespace of the image. For example, context/namespace or in case of Kubernetes or OpenShift namespace/project. quarkus.container-image.name: To override the image name. By default, this property uses artifact ID. Build your workflow application with specific image information quarkus build -Dquarkus.container-image.build=true \\ -Dquarkus.container-image.group=kogito \\ -Dquarkus.container-image.name=serverless-workflow-greeting-quarkus \\ -Dquarkus.container-image.tag=1.0 \\ -Dquarkus.container-image.registry=quay.io The added Jib extension caches the target/lib directory. Based on the size of your project, Jib speeds up the rebuilds. You can also push your workflow application to the defined registry. You need to set the quarkus.container-image.push property value to true (default value is false). Example of pushing the built workflow application to a registry quarkus build -Dquarkus.container-image.build=true \\ -Dquarkus.container-image.group=kogito \\ -Dquarkus.container-image.name=serverless-workflow-greeting-quarkus \\ -Dquarkus.container-image.tag=1.0 \\ -Dquarkus.container-image.registry=quay.io \\ -Dquarkus.container-image.push=true The previous command results in the following container image pushed to quay.io: quay.io/kogito/serverless-workflow-greeting-quarkus:1.0 Alternatively, you can create an Apache Maven profile to build the container image, which can be triggered by setting the target profile. Example Apache Maven profile build-container true kogito serverless-workflow-greeting-quarkus 1.0 quay.io true You can activate the created Apache Maven profile using Quarkus CLI: Activate the Apache Maven profile quarkus build -- -Pbuild-container When it comes to workflows, a small startup footprint is expected, which can be better when using the native builds to build a workflow application. Prerequisites You have created a Quarkus project. Quarkus CLI is installed. For more information about installing the Quarkus CLI, see Installing the Quarkus CLI. Procedure In a command terminal, navigate to your Quarkus project. To build a native image, pass the --native flag using Quarkus CLI: Example of building a native image quarkus build --native -Dquarkus.container-image.build=true \\ -Dquarkus.container-image.group=kogito \\ -Dquarkus.container-image.name=serverless-workflow-greeting-quarkus \\ -Dquarkus.container-image.tag=1.0-native \\ -Dquarkus.container-image.registry=quay.io The previous command results in the following container image: quay.io/kogito/serverless-workflow-greeting-quarkus:1.0-native In case GraalVM is not installed, you can set the -Dquarkus.native.container-build=true system property, which creates a Linux executable. Configure Docker to use the in-cluster (Remote) Docker daemon When build Container Images using a remote Docker Daemon, i.e. Minikube, you need to use the following system property instead of -Dquarkus.native.container-build=true System property to use a remote Docker Daemon -Dquarkus.native.remote-container-build=true For more information about native builds, see Building a native executable. After building your workflow image using Quarkus CLI, you can test the built image. Prerequisites Latest version of Docker is installed. Procedure Start JVM and native Container Images. Example JVM image Example native image docker run -it -p 8080:8080 quay.io/kogito/serverless-workflow-greeting-quarkus:1.0 ... INFO [io.quarkus] (main) serverless-workflow-greeting-quarkus 1.22.1.Final on JVM (powered by Quarkus 2.9.2.Final) started in 1.302s docker run -it -p 8080:8080 quay.io/kogito/serverless-workflow-greeting-quarkus:1.0-native ... INFO [io.quarkus] (main) serverless-workflow-greeting-quarkus 1.22.1.Final native (powered by Quarkus 2.9.2.Final) started in 0.039s Note that the startup of native image is faster than the JVM image. To invoke the workflow application, execute the following command once the container is started: Example request Example response curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://localhost:8080/jsongreet { \"id\": \"2acf710d-7e4a-481d-925c-dfd85a369987\", \"workflowdata\": { \"name\": \"John\", \"language\": \"English\", \"greeting\": \"Hello from JSON Workflow, \" } } Deploying your Kogito Serverless Workflow application on Minikube Deploying your Kogito Serverless Workflow application on Kubernetes Deploying your Kogito Serverless Workflow application on OpenShift If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Building workflow images using Quarkus CLI","component":"serverlessworkflow","version":"1.42.0.Final","name":"build-workflow-image-with-quarkus-cli","url":"/serverlessworkflow/latest/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","titles":[{"text":"Using an example application","hash":"proc-using-example-application","id":1},{"text":"Building the workflow application","hash":"proc-building-serverless-workflow-application","id":2},{"text":"Building the workflow application using a native image","hash":"proc-building-serverless-workflow-application-using-native-image","id":3},{"text":"Testing your workflow image","hash":"proc-testing-serverless-workflow-image","id":4},{"text":"Additional resources","hash":"_additional_resources","id":5},{"text":"Found an issue?","hash":"_found_an_issue","id":6}]},"56":{"id":56,"text":"","title":"","component":"serverlessworkflow","version":"1.42.0.Final","name":"build-workflow-images-with-tekton","url":"/serverlessworkflow/latest/cloud/quarkus/build-workflow-images-with-tekton.html","titles":[]},"57":{"id":57,"text":"This document describes how to deploy a Kogito Serverless Workflow application using a Kubernetes cluster, along with a procedure to run the Knative platform. Prerequisites Your Kogito Serverless Workflow application is ready to use. For more information about building the application container, see Building workflow images using Quarkus CLI. Kubernetes Cluster is available kubectl command-line tool is installed Knative CLI is installed. For more information, see Install the Knative CLI. Knative workflow CLI is installed. For more information see Serverless Workflow plug-in for Knative CLI. (Optional) Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). Before proceeding further, make sure that you have access to the Kubernetes cluster with Knative available. To make sure Knative is available, it can be checked with the commands below: Verify if Knative is available kubectl get services -n knative-serving NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE activator-service ClusterIP 10.97.110.167 9090/TCP,8008/TCP,80/TCP,81/TCP,443/TCP 44m autoscaler ClusterIP 10.98.64.78 9090/TCP,8008/TCP,8080/TCP 44m autoscaler-bucket-00-of-01 ClusterIP 10.111.19.134 8080/TCP 44m controller ClusterIP 10.98.150.141 9090/TCP,8008/TCP 44m default-domain-service ClusterIP 10.106.202.150 80/TCP 43m domainmapping-webhook ClusterIP 10.102.87.208 9090/TCP,8008/TCP,443/TCP 44m net-kourier-controller ClusterIP 10.100.120.208 18000/TCP 43m webhook ClusterIP 10.108.153.180 9090/TCP,8008/TCP,443/TCP 44m For more information on how to figure out if Knative is installed please refer to this link. If not, follow the installation steps described in the Knative documentation. Once Knative is ready, you can initiate the process of deploying your Kogito Serverless Workflow application on Kubernetes. Prerequisites Kubernetes with Knative is ready. Knative is ready. For more information, see Verifying Knative on Kubernetes. Knative CLI is installed. (Optional) Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). Your Kogito Serverless Workflow application is ready to use. By default, Kubernetes does not have any registry installed. You can check with the administrator if a private registry is available. Otherwise, you can publish the Application Container image on the Quay.io, or on any other registry of your preference. If the registry requires authentication you need to create a Pull Secret with the registry credentials, for more information please take a look in this link. Procedure Create serverless-workflow-greeting-quarkus namespace using the following command: Create namespace kubectl create namespace serverless-workflow-greeting-quarkus Set the Kubernetes context to the newly created namespace using the following command: Set Kubernetes context to a namespace kubectl config set-context --current --namespace=serverless-workflow-greeting-quarkus After setting the context, all kubectl commands will use the selected namespace. You can use the following command to verify the current namespace: Verify the current namespace kubectl config view --minify -o jsonpath='{..namespace}' Deploy your Kogito Serverless Workflow application on Kubernetes. The next step is to deploy your workflow application and execute it. You can read the further sections on the different procedures to deploy your Kogito Serverless Workflow application. You can use the native image due to the faster startup. In the following procedures, you can find different approaches to deploy your workflow application, such as: Using Knative CLI (kn) Using kubectl command-line tool Using Quarkus CLI For this tutorial, we use the default-domain provided by Knative that configures Knative Serving to use the Magic DNS for naming resolution, for more details please check the Knative documentation. Once you have pushed your workflow application into the target registry, you can use the command-line tools, such as Knative CLI or Kubernetes CLI to initiate the deployment process. Prerequisites Workflow application is installed. Knative CLI is installed. For more information, see Install the Knative CLI. Procedure In a command terminal, execute the following command to deploy your workflow application using Knative CLI: Example of deploying workflow application using Knative CLI kn service create hello-workflow \\ --image=quay.io/kiegroup/serverless-workflow-greeting-quarkus:1.0 \\ --pull-policy=IfNotPresent \\ --port 8080 Example output Creating service 'hello-workflow' in namespace 'serverless-workflow-greeting-quarkus': 0.066s The Route is still working to reflect the latest desired specification. 0.099s ... 0.322s Configuration \"hello-workflow\" is waiting for a Revision to become ready. 4.885s ... 5.061s Ingress has not yet been reconciled. 5.322s Waiting for load balancer to be ready 5.460s Ready to serve. Service 'hello-workflow' created to latest revision 'hello-workflow-00001' is available at URL: http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io Depending on the cluster type where you have deployed the workflow application, the service URL might be different. Pay attention to the output to use the correct URL in the next topic. Verify if the workflow application is deployed correctly: On Kubernetes CLI On Knative CLI kubectl get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} You can also use kubectl command-line interface and plain Kubernetes objects to deploy your workflow application. And, instead of creating knative yaml|json descriptors, you can leverage the Quarkus Kubernetes extension and Kogito Knative add-on to generate the descriptors. Prerequisites Kogito Workflow application ready to use. Kubernetes CLI command-line tool is installed. (Optional) Quarkus CLI is installed For more information about installing the Quarkus CLI, see Installing the Quarkus CLI. Procedure Add the Quarkus extensions to generate knative yaml|json descriptors. To use the Quarkus Kubernetes extension and Kogito Knative add-on, ensure that the following dependencies are available in the pom.xml file and Gradle: pom.xml Gradle Quarkus CLI org.kie.kogito kogito-addons-quarkus-knative-eventing io.quarkus quarkus-kubernetes quarkus-kubernetes 'io.quarkus:quarkus-kubernetes:2.16.8.Final' quarkus-kubernetes 'org.kie.kogito:kogito-addons-quarkus-knative-eventing:1.42.0.Final' quarkus ext add org.kie.kogito:kogito-addons-quarkus-knative-eventing quarkus-openshift1.42.0.Final' To generate the knative yaml|json descriptors, set the following properties in the application.properties file of your workflow application: System properties to generate knative descriptors quarkus.kubernetes.deployment-target=knative quarkus.knative.name=hello-workflow Build your workflow application. Once you have built your application, you can find the generated descriptors files in the target/kubernetes directory: knative.json knative.yml The image used in this section is the one built in the following guide: Build Workflow Image with Quarkus CLI. Following is an example of the generated files: Knative descriptor example for a workflow application --- apiVersion: serving.knative.dev/v1 kind: Service metadata: annotations: app.quarkus.io/commit-id: 06c3fe8e2dfc42e2211cbcc41224f5a3d6bd1f26 app.quarkus.io/build-timestamp: 2022-06-23 - 23:53:38 +0000 labels: app.kubernetes.io/name: hello-workflow name: hello-workflow spec: template: metadata: labels: app.kubernetes.io/name: hello-workflow spec: containerConcurrency: 0 containers: - image: quay.io/kiegroup/serverless-workflow-greeting-quarkus:1.0-native livenessProbe: failureThreshold: 3 httpGet: path: /q/health/live port: null scheme: HTTP initialDelaySeconds: 0 periodSeconds: 30 successThreshold: 1 timeoutSeconds: 10 name: hello-workflow ports: - containerPort: 8080 name: http1 protocol: TCP readinessProbe: failureThreshold: 3 httpGet: path: /q/health/ready port: null scheme: HTTP initialDelaySeconds: 0 periodSeconds: 30 successThreshold: 1 timeoutSeconds: 10 Once the files are generated, you must add the imagePullPolicy manually before deploying the workflow application. Enter the following command to deploy the workflow application using kubectl: Deploy the workflow application using kubectl kubectl apply -f target/kubernetes/knative.yml Verify if the workflow application is deployed correctly: On Kubernetes CLI On Knative CLI kubectl get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} Prerequisites Workflow application is ready. Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). Procedure Add the Quarkus extensions to deploy the knative service. You can add the Kubernetes and the Kogito Knative extensions to your project with the Quarkus CLI: Add Kubernetes and Kogito Knative extensions to the project with Quarkus CLI quarkus ext add quarkus-kubernetes kogito-addons-quarkus-knative-eventing To deploy the workflow application using Quarkus CLI, set the following system properties in application.properties file: Required system properties quarkus.knative.name=hello-workflow (1) quarkus.kubernetes.deployment-target=knative (2) quarkus.kubernetes.deploy=true (3) quarkus.container-image.push=true (4) quarkus.container-image.group=kiegroup (5) quarkus.container-image.registry=quay.io (6) quarkus.container-image.tag=1.0-SNAPSHOT (7) 1 Property to set the Knative service name 2 Property to set the target deployment type 3 Property to set whether or not deploy on an active Kubernetes cluster 4 Property to push or not the Container image to the given registry 5 Property to define which registry group/namespace the built image belongs to 6 Property to define to which registry the built image will be pushed to 7 Sets the built Container Image tag This feature works with Quarkus 2.10.2.Final or later. For more information, see link. Build and Deploy your workflow application quarkus build -DskipTests The kogito-examples already have this extension added by default, and can be activated with the container Maven profile. Verify if the workflow application is deployed correctly: On Kubernetes CLI On Knative CLI kubectl get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Deploying your Serverless Workflow application on Kubernetes","component":"serverlessworkflow","version":"1.42.0.Final","name":"deploying-on-kubernetes","url":"/serverlessworkflow/latest/cloud/quarkus/deploying-on-kubernetes.html","titles":[{"text":"Verifying Knative availability on Kubernetes","hash":"proc-verify-knative-kubernetes","id":1},{"text":"Deploying your workflow application on Kubernetes","hash":"proc-deploy-sw-application-kubernetes","id":2},{"text":"Deploying your workflow application using Knative CLI","hash":"proc-deploy-sw-application-knative-cli","id":3},{"text":"Deploying your workflow application using Kubernetes CLI","hash":"proc-deploy-sw-application-kubectl","id":4},{"text":"Deploying your workflow application using Quarkus CLI","hash":"proc-deploy-sw-application-quarkus-cli","id":5},{"text":"Found an issue?","hash":"_found_an_issue","id":6}]},"58":{"id":58,"text":"This document describes how to deploy your workflow application using a local Kubernetes cluster, such as Minikube, along with a procedure to run the Knative platform. For more information about Minikube and related system requirements, see Getting started with Minikube documentation. Prerequisites Your Kogito Serverless Workflow application is ready to use. For more information about building the application container, see Building workflow images using Quarkus CLI. Minikube is installed kubectl command-line tool is installed. Otherwise, Minikube handles it. Knative CLI is installed. For more information, see Install the Knative CLI. Knative workflow CLI is installed. For more information see Serverless Workflow plug-in for Knative CLI. (Optional) Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). To deploy your workflow application on Minikube, you need to install Knative on Minikube. However, first you need to ensure that Minikube is installed correctly. You can check the Minikube installation by entering the following commands in a command terminal: Verify Minikube version minikube version Verify Knative CLI version kn version Verify kubectl CLI version kubectl version If kubectl is not installed, then Minikube handles it when you execute the following command: kubectl is available using Minikube alias kubectl=\"minikube kubectl --\" Once you verify the Minikube and Knative CLI installation, you can install Knative on Minikube. Prerequisites Minikube is installed. Knative CLI is installed. For more information, see Install the Knative CLI. Procedure Open a command terminal and install Knative on Minikube. Configure Knative on Minikube. Knative CLI offers quickstart plug-in, which provides the required configurations. For information about installing the quickstart plug-in, see Install Knative using quickstart. After configuring the plug-in, execute the following command to configure a Minikube profile: Configure a Minikube profile kn quickstart minikube The previous command configures a Minikube profile called knative. After creating a Minikube profile, all Minikube commands use the created profile. To list the available Minikube profiles, enter the following command: List the available Minikube profiles minikube profile list Enter the following command to open the Minikube web console on the knative profile: Open Minikube web console minikube dashboard --profile knative The previous command opens the Kubernetes Management console in your browser. If the console is not opened, you can go to the URL that is returned. To follow the manual process of installing Knative on Minikube, see Knative tutorial on Minikube. Once you install Knative on Minikube, you can initiate the process of deploying your workflow application on Minikube. Prerequisites Minikube is installed. Knative is ready. For more information, see Installing Knative on Minikube. Knative CLI is installed. (Optional) Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). Your Kogito Serverless Workflow application is ready to use. Procedure In a command terminal, enter the following command to configure Docker to use the in-cluster Docker daemon: Configure Docker to use in-cluster Docker Daemon eval $(minikube -p minikube docker-env --profile knative) Build your application to store it in the Minikube registry. If your workflow application container image is built before configuring Docker to use the in-cluster Docker daemon, then you might need to build the image again so that the image is available in the Minikube registry. If you are building native container images, ensure that you use the following system property to use Minikube Docker Daemon: System property to build container images -Dquarkus.native.remote-container-build=true You might be required to tag the container images using one of the following registry: ko.local dev.local For more information, see How to use locally built docker image. In that case, use the -Dquarkus.container-image.registry=some_of_the_values_above property to enable Knative fetch the container images from Minikube Docker Daemon. If you do not use the values, you might need to set the imagePullPolicy to Never or IfNotPresent, otherwise, Minikube pulls the images from a remote registry. This behavior can be avoided by tagging the image using previously listed domains. In a separate command terminal window, start the Minikube tunnel using the Knative profile to prepare the environment: Start Minikube tunnel using Knative profile minikube tunnel --profile knative The previous command starts in a loop. Therefore, this command must be running throughout the process mentioned in this document. On Mac and Windows, you might be required to provide the user password. Example tunnel output Status: machine: knative pid: 124859 route: 10.96.0.0/12 -> 192.168.58.2 minikube: Running services: [kourier] errors: minikube: no errors router: no errors loadbalancer emulator: no errors After starting the Minikube tunnel, create serverless-workflow-greeting-quarkus namespace using the following command: Create namespace kubectl create namespace serverless-workflow-greeting-quarkus Set the Kubernetes context to the newly created namespace using the following command: Set Kubernetes context to a namespace kubectl config set-context --current --namespace=serverless-workflow-greeting-quarkus After setting the context, all kubectl commands will use the selected namespace. You can use the following command to verify the current namespace: Verify the current namespace kubectl config view --minify -o jsonpath='{..namespace}' Deploy your Kogito Serverless Workflow application using the Minikube registry. The next step is to deploy your workflow application and execute it. You can read the further sections on the different procedures to deploy your Kogito Serverless Workflow application. You can use the native image due to the faster startup. In the following procedures, you can find different approaches to deploy your workflow application, such as: Using Knative CLI (kn) Using kubectl command-line tool Using Quarkus CLI Once you have pushed your workflow application into the Minikube’s registry, you can use the command-line tools, such as Knative CLI or Kubernetes CLI to initiate the deployment process. Prerequisites Workflow application is installed. Knative CLI is installed. For more information, see Install the Knative CLI. Procedure In a command terminal, execute the following command to deploy your workflow application using Knative CLI: Example of deploying workflow application using Knative CLI kn service create hello-workflow \\ --image=dev.local/kogito/serverless-workflow-greeting-quarkus:1.0 \\ --pull-policy=IfNotPresent \\ --port 8080 Example output Creating service 'hello-workflow' in namespace 'serverless-workflow-greeting-quarkus': 0.066s The Route is still working to reflect the latest desired specification. 0.099s ... 0.322s Configuration \"hello-workflow\" is waiting for a Revision to become ready. 4.885s ... 5.061s Ingress has not yet been reconciled. 5.322s Waiting for load balancer to be ready 5.460s Ready to serve. Service 'hello-workflow' created to latest revision 'hello-workflow-00001' is available at URL: http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io Depending on the cluster type where you have deployed the workflow application, the service URL might be different. Pay attention to the output to use the correct URL in the next topic. Verify if the workflow application is deployed correctly: On Kubernetes CLI On Knative CLI kubectl get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} You can also use kubectl command-line interface and plain Kubernetes objects to deploy your workflow application. And, instead of creating knative yaml|json descriptors, you can leverage the Quarkus Kubernetes extension and Kogito Knative add-on to generate the descriptors. Prerequisites Kogito Workflow application ready to use. Kubernetes CLI command-line tool is installed. (Optional) Quarkus CLI is installed For more information about installing the Quarkus CLI, see Installing the Quarkus CLI. Procedure Add the Quarkus extensions to generate knative yaml|json descriptors. To use the Quarkus Kubernetes extension and Kogito Knative add-on, ensure that the following dependencies are available in the pom.xml file and Gradle: pom.xml Gradle Quarkus CLI org.kie.kogito kogito-addons-quarkus-knative-eventing io.quarkus quarkus-kubernetes quarkus-kubernetes 'io.quarkus:quarkus-kubernetes:2.16.8.Final' quarkus-kubernetes 'org.kie.kogito:kogito-addons-quarkus-knative-eventing:1.42.0.Final' quarkus ext add org.kie.kogito:kogito-addons-quarkus-knative-eventing quarkus-openshift1.42.0.Final' To generate the knative yaml|json descriptors, set the following properties in the application.properties file of your workflow application: System properties to generate knative descriptors quarkus.kubernetes.deployment-target=knative quarkus.knative.name=hello-workflow Build your workflow application. Once you have built your application, you can find the generated descriptors files in the target/kubernetes directory: knative.json knative.yml The image used in this section is the one built in the following guide: Build Workflow Image with Quarkus CLI. Following is an example of the generated files: Knative descriptor example for a workflow application --- apiVersion: serving.knative.dev/v1 kind: Service metadata: annotations: app.quarkus.io/commit-id: 06c3fe8e2dfc42e2211cbcc41224f5a3d6bd1f26 app.quarkus.io/build-timestamp: 2022-06-23 - 23:53:38 +0000 labels: app.kubernetes.io/name: hello-workflow name: hello-workflow spec: template: metadata: labels: app.kubernetes.io/name: hello-workflow spec: containerConcurrency: 0 containers: - image: dev.local/kogito/serverless-workflow-greeting-quarkus:1.0-native livenessProbe: failureThreshold: 3 httpGet: path: /q/health/live port: null scheme: HTTP initialDelaySeconds: 0 periodSeconds: 30 successThreshold: 1 timeoutSeconds: 10 name: hello-workflow ports: - containerPort: 8080 name: http1 protocol: TCP readinessProbe: failureThreshold: 3 httpGet: path: /q/health/ready port: null scheme: HTTP initialDelaySeconds: 0 periodSeconds: 30 successThreshold: 1 timeoutSeconds: 10 Once the files are generated, you must add the imagePullPolicy manually before deploying the workflow application. Enter the following command to deploy the workflow application using kubectl: Deploy the workflow application using kubectl kubectl apply -f target/kubernetes/knative.yml Verify if the workflow application is deployed correctly: On Kubernetes CLI On Knative CLI kubectl get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} Prerequisites Workflow application is ready. Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). Procedure Add the Quarkus extensions to deploy the knative service. You can add the Kubernetes and the Kogito Knative extensions to your project with the Quarkus CLI: Add Kubernetes and Kogito Knative extensions to the project with Quarkus CLI quarkus ext add quarkus-kubernetes kogito-addons-quarkus-knative-eventing To deploy the workflow application using Quarkus CLI, set the following system properties in application.properties file: Required system properties quarkus.knative.name=hello-workflow (1) quarkus.kubernetes.deployment-target=knative (2) quarkus.kubernetes.deploy=true (3) quarkus.container-image.push=false (4) quarkus.container-image.group=kogito (5) quarkus.container-image.registry=dev.local (6) quarkus.container-image.tag=1.0-SNAPSHOT (7) 1 Property to set the Knative service name 2 Property to set the target deployment type 3 Property to set whether or not deploy on an active Kubernetes cluster 4 Property to whether or not push images. False when using Minikube’s remote Docker daemon to avoid image validation 5 Property to define which registry group/namespace the built image belongs to 6 Property to define to which registry the built image will be pushed to 7 Sets the built Container Image tag This feature works with Quarkus 2.10.2.Final or later. For more information, see link. Build and Deploy your workflow application quarkus build -DskipTests The kogito-examples already have this extension added by default, and can be activated with the container Maven profile. Verify if the workflow application is deployed correctly: On Kubernetes CLI On Knative CLI kubectl get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} Verify if the workflow application is deployed correctly: On Kubernetes CLI On Knative CLI kubectl get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Deploying your Kogito Serverless Workflow application on Minikube","component":"serverlessworkflow","version":"1.42.0.Final","name":"deploying-on-minikube","url":"/serverlessworkflow/latest/cloud/quarkus/deploying-on-minikube.html","titles":[{"text":"Installing Knative on Minikube","hash":"proc-install-knative-minikube","id":1},{"text":"Deploying your workflow application on Minikube","hash":"proc-deploy-sw-application-minikube","id":2},{"text":"Deploying your workflow application using Knative CLI","hash":"proc-deploy-sw-application-knative-cli","id":3},{"text":"Deploying your workflow application using Kubernetes CLI","hash":"proc-deploy-sw-application-kubectl","id":4},{"text":"Deploying your workflow application using Quarkus CLI","hash":"proc-deploy-sw-application-quarkus-cli","id":5},{"text":"Found an issue?","hash":"_found_an_issue","id":6}]},"59":{"id":59,"text":"This document describes how to deploy a Kogito Serverless Workflow application using a OpenShift cluster, along with a procedure to run the OpenShift Serverless Operator, which is based on Knative. Prerequisites Your Kogito Serverless Workflow application is ready to use. OpenShift CLI is installed. Knative CLI is installed. Knative CLI workflow plugin is installed. Podman If you are using Docker, you might need to update the commands accordingly. (Optional) Quarkus CLI is installed. For the following steps we will be using the OpenShift Local. However, the steps described here can be used on any OpenShift 4.x version that has support for OpenShift Serverless. If you already have an OpenShift cluster available you can skip this section. Instructions to install Openshift Local can be found here. Once you have OpenShift Local running, proceed to the next topic. If you are running OpenShift Local on Mac with M1 processors, you might not find the OpenShift Serverless Operator available. Before proceeding further, make sure that you have access to the OpenShift cluster, the OpenShift Serverless operator is properly installed and the Knative Serving is ready for use. For more information on each topic, please refer the following guides: Installing OpenShift Serverless Operator. Installing Knative Serving. Installing Knative Eventing. Knative Eventing is not required for this guide, however it is important to mention how to install it, if required by your Kogito Serverless Workflow application. If you get error messages related to Istio, this article might be helpful. Once Knative Serving is ready, you can initiate the process of deploying your Kogito Serverless Workflow application on OpenShift. Prerequisites OpenShift with Red Hat OpenShift Serverless is ready. Knative is ready. For more information, see Knative Serving. Knative CLI is installed. (Optional) Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). Your Kogito Serverless Workflow application is ready to use. After checking the prerequisites, prepare the project that will be used to deploy your application: Procedure Create project oc new-project kogito-serverless Set the Kubernetes context to the newly created namespace using the following command: Set OpenShift current project oc project kogito-serverless You can use the native image for a faster startup. OpenShift comes with a registry where you can push your images built locally to be deployed. First, let’s check if the Registry is already exposed, to do that, check if the route is exposed: Check whether the OpenShift registry is exposed oc get route default-route -n openshift-image-registry --template='{{ .spec.host }}' If no information or an error is returned, it does mean that the registry is not exposed. To expose the registry follow these steps. Now that we have the OpenShift registry exposed, let’s store into the OPENSHIFT_REGISTRY_URL environment variable, so we can use it easily in the next steps: Retrieve the OpenShift registry OPENSHIFT_REGISTRY_URL=$(oc get route default-route -n openshift-image-registry --template='{{ .spec.host }}') The OpenShift’s registry requires you to be logged in to be allowed to push Container Images. If you are already logged in the cluster you can use your token to authenticate to the OpenShift’s registry: Log in to the OpenShift’s registry podman login -u -p $(oc whoami -t) --tls-verify=false $OPENSHIFT_REGISTRY_URL If everything is working, you should get the Login Succeeded! message. Pushing Kogito Serverless Workflow Application To OpenShift’s registry First step, get the Container Image tag built previously: podman images With the Container Image, use the following command to tag the application image with the OpenShift’s registry and the namespace being used: podman tag $OPENSHIFT_REGISTRY_URL/kogito-serverless/serverless-workflow-greeting-quarkus:1.0 Then, push: podman push $OPENSHIFT_REGISTRY_URL/kogito-serverless/serverless-workflow-greeting-quarkus:1.0 The kogito-serverless is the current project/namespace created earlier to deploy your Kogito Serverless Workflow application. The next step is to deploy your workflow application and execute it. You can read further the next sections which explain different approaches to deploy your Kogito Serverless Workflow application: In the next steps you will notice the value image-registry.openshift-image-registry.svc:5000 being used. It is the internal OpenShift’s registry address where the images of the deployments will pulled from. Note that, the Container Image pushed in the previous step will be queried as image-registry.openshift-image-registry.svc:5000/kogito-serverless/serverless-workflow-greeting-quarkus:1.0 Using Knative CLI (kn) Using OpenShift command-line tool Using Quarkus CLI Once you have pushed your workflow application into the OpenShift’s registry, you can use the command-line tools, such as Knative CLI or OpenShift CLI to initiate the deployment process. Prerequisites Workflow application is installed. Knative CLI is installed. For more information, see Install the Knative CLI. Procedure In a command terminal, execute the following command to deploy your workflow application using Knative CLI: Example of deploying workflow application using Knative CLI kn service create hello-workflow \\ --image=image-registry.openshift-image-registry.svc:5000/kogito-serverless/serverless-workflow-greeting-quarkus:1.0 \\ --pull-policy=IfNotPresent \\ --port 8080 Example output Creating service 'hello-workflow' in namespace 'serverless-workflow-greeting-quarkus': 0.066s The Route is still working to reflect the latest desired specification. 0.099s ... 0.322s Configuration \"hello-workflow\" is waiting for a Revision to become ready. 4.885s ... 5.061s Ingress has not yet been reconciled. 5.322s Waiting for load balancer to be ready 5.460s Ready to serve. Service 'hello-workflow' created to latest revision 'hello-workflow-00001' is available at URL: http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io Depending on the cluster type where you have deployed the workflow application, the service URL might be different. Pay attention to the output to use the correct URL in the next topic. Verify if the workflow application is deployed correctly: On OpenShift CLI On Knative CLI oc get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} You can also use oc command-line interface and plain Kubernetes objects to deploy your workflow application. And, instead of creating knative yaml|json descriptors, you can leverage the Quarkus Kubernetes extension and Kogito Knative add-on to generate the descriptors. Prerequisites Kogito Workflow application ready to use. OpenShift CLI command-line tool is installed. (Optional) Quarkus CLI is installed For more information about installing the Quarkus CLI, see Installing the Quarkus CLI. Procedure Add the Quarkus extensions to generate knative yaml|json descriptors. To use the Quarkus Kubernetes extension and Kogito Knative add-on, ensure that the following dependencies are available in the pom.xml file and Gradle: pom.xml Gradle Quarkus CLI org.kie.kogito kogito-addons-quarkus-knative-eventing io.quarkus quarkus-openshift quarkus-kubernetes 'io.quarkus:quarkus-openshift:2.16.8.Final' quarkus-kubernetes 'org.kie.kogito:kogito-addons-quarkus-knative-eventing:1.42.0.Final' quarkus ext add org.kie.kogito:kogito-addons-quarkus-knative-eventing quarkus-openshift1.42.0.Final' To generate the knative yaml|json descriptors, set the following properties in the application.properties file of your workflow application: System properties to generate knative descriptors quarkus.kubernetes.deployment-target=knative quarkus.knative.name=hello-workflow Build your workflow application. Once you have built your application, you can find the generated descriptors files in the target/kubernetes directory: knative.json knative.yml The image used in this section is the one built in the following guide: Build Workflow Image with Quarkus CLI. Following is an example of the generated files: Knative descriptor example for a workflow application --- apiVersion: serving.knative.dev/v1 kind: Service metadata: annotations: app.quarkus.io/commit-id: 06c3fe8e2dfc42e2211cbcc41224f5a3d6bd1f26 app.quarkus.io/build-timestamp: 2022-06-23 - 23:53:38 +0000 labels: app.kubernetes.io/name: hello-workflow name: hello-workflow spec: template: metadata: labels: app.kubernetes.io/name: hello-workflow spec: containerConcurrency: 0 containers: - image: image-registry.openshift-image-registry.svc:5000/kogito-serverless/serverless-workflow-greeting-quarkus:1.0-native livenessProbe: failureThreshold: 3 httpGet: path: /q/health/live port: null scheme: HTTP initialDelaySeconds: 0 periodSeconds: 30 successThreshold: 1 timeoutSeconds: 10 name: hello-workflow ports: - containerPort: 8080 name: http1 protocol: TCP readinessProbe: failureThreshold: 3 httpGet: path: /q/health/ready port: null scheme: HTTP initialDelaySeconds: 0 periodSeconds: 30 successThreshold: 1 timeoutSeconds: 10 Once the files are generated, you must add the imagePullPolicy manually before deploying the workflow application. Enter the following command to deploy the workflow application using oc: Deploy the workflow application using oc oc apply -f target/kubernetes/knative.yml Verify if the workflow application is deployed correctly: On OpenShift CLI On Knative CLI oc get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} Prerequisites Workflow application is ready. Quarkus CLI is installed. For more information, see Building Quarkus Apps with Quarkus command line interface (CLI). Procedure Add the Quarkus extensions to deploy the knative service. You can add the OpenShift and the Kogito Knative extensions to your project with the Quarkus CLI: Add OpenShift and Kogito Knative extensions to the project with Quarkus CLI quarkus ext add quarkus-openshift kogito-addons-quarkus-knative-eventing To deploy the workflow application using Quarkus CLI, set the following system properties in application.properties file: Required system properties quarkus.knative.name=hello-workflow (1) quarkus.kubernetes.deployment-target=knative (2) quarkus.kubernetes.deploy=true (3) quarkus.container-image.push=true (4) quarkus.container-image.group=kogito-serverless (5) quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000 (6) quarkus.container-image.tag=1.0-SNAPSHOT (7) 1 Property to set the Knative service name 2 Property to set the target deployment type 3 Property to set whether or not deploy on an active OpenShift cluster 4 This property should be removed if deploying on OpenShift Clusters 5 Property to define which registry group/namespace the built image belongs to 6 Property to define to which registry the built image will be pushed to 7 Sets the built Container Image tag This feature works with Quarkus 2.10.2.Final or later. For more information, see link. Build and Deploy your workflow application quarkus build -DskipTests The kogito-examples already have this extension added by default, and can be activated with the container Maven profile. Verify if the workflow application is deployed correctly: On OpenShift CLI On Knative CLI oc get services.serving.knative.dev hello-workflow kn service list hello-workflow Example output NAME URL LATEST AGE CONDITIONS READY REASON hello-workflow http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io hello-workflow-00001 7m6s 3 OK / 3 True Use the URL in the output to send request to your workflow application. Example request curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\": \"John\", \"language\": \"English\"}' http://hello-workflow.serverless-workflow-greeting-quarkus.10.103.94.37.sslip.io/jsongreet Example response {\"id\":\"0f77abce-837e-4bd2-b4f1-a0e5e0265fcb\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}} If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Deploying your Kogito Serverless Workflow application on OpenShift","component":"serverlessworkflow","version":"1.42.0.Final","name":"deploying-on-openshift","url":"/serverlessworkflow/latest/cloud/quarkus/deploying-on-openshift.html","titles":[{"text":"Installing OpenShift Local","hash":"proc-install-openshift-local","id":1},{"text":"Deploying your workflow application on OpenShift","hash":"proc-deploy-sw-application-openshift","id":2},{"text":"Preparing the OpenShift’s Registry","hash":"_preparing_the_openshifts_registry","id":3},{"text":"Deploying your workflow application using Knative CLI","hash":"proc-deploy-sw-application-knative-cli","id":4},{"text":"Deploying your workflow application using OpenShift CLI","hash":"proc-deploy-sw-application-openfhift-client","id":5},{"text":"Deploying your workflow application using Quarkus CLI","hash":"proc-deploy-sw-application-quarkus-cli","id":6},{"text":"Found an issue?","hash":"_found_an_issue","id":7}]},"60":{"id":60,"text":"The Kubernetes service discovery allows you to describe the Kubernetes resource you want to perform HTTP requests on using a custom URI. Under the hood, it will discover the network endpoint (URL) to where to make the request. The Kubernetes service discovery feature works during the workflow application startup, in which this feature scans all the Quarkus configurations in search of the URI pattern. Therefore, you must remember that if the application startup time matters, consider using a known static URL instead. Following is the custom URI pattern in Kubernetes service discovery: URI pattern in Kubernetes service discovery kubernetes:..//?= \\________/ \\____/ \\_______/ \\_____/ \\_________/ \\____________/ \\______________________________/ scheme kind version group namespace resourceName additional resource attributes \\____________________/ \\__________________________/ GVK Supported values: - port-name={PORT_NAME} - labels=label-name=label-value;other-label=other-value The following scheme values are supported in the URI pattern: kubernetes openshift knative The following resources are supported for the Kubernetes GVK (Group, Version, and Kind): services.v1 services.v1.serving.knative.dev pods.v1 deployments.v1.apps deploymentconfigs.v1.apps.openshift.io statefulsets.v1.apps routes.v1.route.openshift.io ingresses.v1.networking.k8s.io When using knative, you can also use a simplified URI like: knative:/ The above URI looks directly for services.v1.serving.knative.dev resource. The namespace in the URI is optional, however, if namespace contains an empty value, the current namespace or context is used. Query parameters in URI Also known as query string. The query parameters are defined the similar way with URLs to assign value to specific attributes. The following query parameters help the engine to be more precise when querying for a given Kubernetes resource: Custom labels: The custom labels are used to filter services in case there are more than one service with the same label selector but exposing different ports. In this case, you can instruct the engine that if more than one service is found, then the engine must use the service containing the provided label. The label is defined with the following expression and in case of multiple labels, you can use semicolon (;): labels=label-name=namevalue;another-label=another-value Example label definition in URI kubernetes:pods.v1//?labels=label-name=test-label Using the previous URI example, if there are more than one service exposing the given pod, the label-name=test-label label is used to filter the service. If the label does not exist, the first found service is used. Custom port name: The custom port name is used to determine which port to use when multiple ports are configured in the target service or container. You can configure the port name to be queried using the following pattern: port-name= The service discovery engine requires that the Kubernetes Service Account running the application has read permissions for the discovered objects. The following Kubernetes Role resource has all the required permissions for the service discovery to work: Required permissions for the Service Discovery on Kubernetes apiVersion: rbac.authorization.k8s.io/v1 kind: Role metadata: name: service-discovery-role rules: - apiGroups: - \"\" resources: - pods - services verbs: - get - list - apiGroups: - apps resources: - deployments - statefulsets verbs: - get - list - apiGroups: - networking.k8s.io resources: - ingresses verbs: - get - list # Knative - apiGroups: - serving.knative.dev resources: - services verbs: - get - list If running on OpenShift, you must also add the following rules: Additional rules to run on OpenShift rules: - apiGroups: - route.openshift.io resources: - routes verbs: - get - list - apiGroups: - apps.openshift.io resources: - deploymentconfigs verbs: - get - list You must then bind the Service Account with the Role via a RoleBinding: RoleBinding for the required service discovery role apiVersion: rbac.authorization.k8s.io/v1 kind: RoleBinding metadata: name: service-discovery-rolebinding roleRef: apiGroup: rbac.authorization.k8s.io kind: Role name: service-discovery-role subjects: - kind: ServiceAccount name: default Usually, pods run using the default Service Account. If your cluster has a different configuration, you should adapt this RoleBinding to your requirements. You must create these two objects in every namespace that you wish to deploy Quarkus Workflow applications with Service Discovery enabled. As an alternative, you can create a ClusterRole instead of a Role in every namespace. In this case, the role will reflect globally in your cluster. For security reasons, you should avoid this approach. There is no specific configuration required for the Kubernetes service discovery except by using the expected URI pattern. However, the okhttp communication interceptor, which logs the communication between the application and the Kubernetes API is disabled by default. You can enable the okhttp communication interceptor if there is a need to debug the communication between the client and the Kubernetes API by setting the following application property: Application property to enable okhttp communication interceptor quarkus.log.category.\"okhttp3.OkHttpClient\".level=INFO Based on the resource to be discovered, the Kubernetes service discovery follows specific paths as shown in the following figure: The Kubernetes service discovery is performed at the STATIC_INIT time of Quarkus during the workflow application startup. First, the service discovery scans the Quarkus configuration values and searches for the Kubernetes URI pattern. If the URI pattern is found, the engine parses the URI, queries the Kubernetes API searching for the given resource, and overrides the given application property. For example, consider an application that consumes a resource running on Kubernetes. This resource is a Knative service that exposes a function, which can be discovered using the following URI: Example URI org.kie.kogito.sw.knative.service=knative:services.v1/serverless-workflow-greeting-quarkus/greeting-quarkus-cli The service discovery engine does not read the application property name, but only value. Once the workflow application is started, you can see the Kubernetes service discovery into action in the logs: Example logs $ java -jar target/quarkus-app/quarkus-run.jar __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ , org.kie.kogito kogito-addons-quarkus-kubernetes org.kie.kogito kogito-addons-quarkus-fabric8-kubernetes-service-catalog Currently, only org.kie.kogito:kogito-addons-quarkus-fabric8-kubernetes-service-catalog is available. When enabled, it uses the Kubernetes Java API to discover the services. Configuring the OpenAPI services endpoints If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Kubernetes service discovery in Kogito Serverless Workflow","component":"serverlessworkflow","version":"1.42.0.Final","name":"kubernetes-service-discovery","url":"/serverlessworkflow/latest/cloud/quarkus/kubernetes-service-discovery.html","titles":[{"text":"Required Kubernetes roles","hash":"required-kubernetes-roles","id":1},{"text":"Configuration in Kubernetes service discovery","hash":"con-kubernetes-service-doscovery-configuration","id":2},{"text":"Precedence in Kubernetes service discovery","hash":"con-precedence-kubernetes-service-discovery","id":3},{"text":"Example of Kubernetes service discovery in Kogito Serverless Workflow","hash":"ref-example-kubernetes-service-discovery","id":4},{"text":"Enabling Kubernetes service discovery","hash":"ref-enabling-kubernetes-service-discovery","id":5},{"text":"Available service discovery implementations","hash":"_available_service_discovery_implementations","id":6},{"text":"Additional resources","hash":"_additional_resources","id":7},{"text":"Found an issue?","hash":"_found_an_issue","id":8}]},"61":{"id":61,"text":"","title":"","component":"serverlessworkflow","version":"1.42.0.Final","name":"versioning-workflows-in-knative","url":"/serverlessworkflow/latest/cloud/quarkus/versioning-workflows-in-knative.html","titles":[]},"62":{"id":62,"text":"In Kogito Serverless Workflow Tools, the Dashboards page is used to display the available dashboard files. The page displays a list of available dashboards and add filters to the list. Figure 1. Dashboard page The table on the Dashboards page displays the following details: Name: the name of a custom dashboard. Last Modified: the time reference indicating when the custom dashboard was last updated. See the dashboard guide for creating dashboards and visualizations with YAML. You can run all examples with Dashbuilder YAML Online. The default storage path for dashboard files is src/main/resources/dashboards, but the property quarkus.kogito-runtime-tools.custom.dashboard.folder can be used to set a custom storage path. Figure 2. Default storage path To filter the dashboard based on name, enter a name in the Filter by dashboard name field and click Apply filter button. Figure 3. Example filters applied on the dashboards In the dashboard table, the name column contains a clickable link, which enables you to navigate to the Dashboard Details page. Figure 4. Dashboard Details page If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Dashboards in Kogito Serverless Workflow Tools extension","component":"serverlessworkflow","version":"1.42.0.Final","name":"quarkus-dev-ui-custom-dashboard-page","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","titles":[{"text":"Creating a custom dashboard","hash":"_creating_a_custom_dashboard","id":1},{"text":"Create a custom dashboard file","hash":"_create_a_custom_dashboard_file","id":2},{"text":"Storage path of custom dashboards","hash":"_storage_path_of_custom_dashboards","id":3},{"text":"Filtering the dashboards","hash":"_filtering_the_dashboards","id":4},{"text":"Accessing a dashboard details","hash":"_accessing_a_dashboard_details","id":5},{"text":"Found an issue?","hash":"_found_an_issue","id":6}]},"63":{"id":63,"text":"Quarkus applications come integrated with a Dev UI, providing a number of tools that help in developing the applications in Quarkus. You can plug in such tools to your Quarkus application as extensions, such as Kogito Serverless Workflow Tools. The Kogito Serverless Workflow Tools extension provides a console to view, manage, and start the workflow instances. Prerequisites Quarkus 2.16.8.Final is installed. Quarkus command line interface (CLI) is installed. For more information, see Installing the Quarkus CLI. Procedure In a command terminal, enter the following command to install the Kogito Serverless Workflow Tools extension: Install Kogito Serverless Workflow Tools extension quarkus ext add org.kie.kogito:kogito-quarkus-serverless-workflow-devui Executing the previous command adds the following dependency to pom.xml file of your project: Kogito Serverless Workflow Tools dependency in pom.xml file org.kie.kogito kogito-quarkus-serverless-workflow-devui ${VERSION} Enter the following command to add the kogito-addons-quarkus-source-files extension that provides the source code to generate the Serverless Workflow diagram in the consoles: Install Kogito source files add-on extension quarkus ext add org.kie.kogito:kogito-addons-quarkus-source-files Executing the previous command adds the following dependency to pom.xml file of your project: source files add-on dependency in pom.xml file org.kie.kogito kogito-addons-quarkus-source-files Run the following command to start the Quarkus application: Start Quarkus application quarkus dev To access the Quarkus Dev UI, go to http://localhost:8080/q/dev/. Figure 1. Kogito Serverless Workflow Tools extension in Quarkus Dev UI The Kogito Serverless Workflow Tools extension contains the following pages: Workflow Instances Workflow Definitions Dashboards If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","component":"serverlessworkflow","version":"1.42.0.Final","name":"quarkus-dev-ui-overview","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","titles":[{"text":"Installing Kogito Serverless Workflow Tools extension","hash":"proc-install-sw-tools-extension","id":1},{"text":"Found an issue?","hash":"_found_an_issue","id":2}]},"64":{"id":64,"text":"In the Kogito Serverless Workflow Tools extension, the Workflow Definitions page displays the list of available workflows in the Kogito project and helps you to start new workflow instances either via REST or by triggering cloud events. Figure 1. Workflow Definitions page In the Workflow Definitions table you will find the list of workflows that shows the following details: Workflow Name: Displays the name of a workflow definition. Endpoint: Displays the URL to a workflow definition. Actions: Provides the Start new Workflow button to start workflow instances via REST. In the table, the toolbar provides the ability to apply filters to the table or to trigger cloud events that can start workflow instances To search for a specific workflow definition, enter the workflow’s name in the Filter by workflow name field. Click the Apply Filter button. The matching workflow definitions appear as a chip below the search field. Click the Reset to default button to clear the applied filters. To fetch newly added workflow definitions, click on the refresh icon next to the Apply Filter button. Click the Apply Filter button. The matching workflow definitions appear as a chip below the search field. To clear the applied filters, you can click the Reset to default button. Also, to fetch newly added workflow definitions, click on the refresh icon next to the Apply Filter button. Figure 2. Workflow Definitions filters Workflows can be started either by using the specific workflow REST endpoints or by triggering Cloud Events. The Kogito Serverless Workflow Tools extension allows you to use both mechanisms. If you want to start a new workflow instance using the workflow REST endpoint, just click on the Start new Workflow button of any of the workflow in the Workflow Definitions table, then you’ll be redirected to the Start New Workflow page where you could setup the data and Business Key that will be used to start the new workflow instance. Depending on your workflow configuration the page can provide different mechanisms to fill the workflow data. If your workflow is configured with a valid Data Input Schema, this page will be able to display a custom Form to help a filling the data. Figure 3. Start Workflow Page with a Form defined in the Data Input Schema If your workflow does not provide a Data Input Schema, the page will display a Code Editor that will enable you to manually fill the workflow data in JSON format. Figure 4. Start Workflow Page with a Code Editor. For more information about how to setup the Input Schema Definition on your Kogito Serverless Workflow, please take a look at the Input Schema for Kogito Serverless Workflow section. You can use the Business key text box to define a custom business key value to the workflow instance. If the Business Key field is blank, then an auto-generated business key is defined for the workflow instance. By clicking on the Start button will POST the workflow data and the Business Key to the workflow REST endpoint. If the workflow instance starts successfully, a success alert appears on the top of the screen, which contains the Go to workflow list link to navigate to the Workflow Instances page. Figure 5. Example of workflow successful starting notification If there is an issue while starting a workflow, then a failure alert appears on the top of the screen, containing the*View Details* and Go to workflow list options. The View Details enables you to view the error message. Figure 6. Example of workflow starting failure notification On the Workflow Definitions Page, the Trigger Cloud Event button enables you to start new workflow instances by using HTTP Cloud Events. This will lead you to the Trigger Cloud Event page. Once there, you will have to fill out the form with the Cloud Event information: Endpoint: Defines the Path and the HTTP method where the cloud event should be triggered. Event Type: Sets the Cloud Event type header. Event Source: Sets the Cloud Event Source header. Defaults to /local/quarkus-devUi. Business Key: Sets the new workflow instance Business Key, it will be added in the kogitobusinesskey event header. Event Custom Headers: Allows you to define custom headers to be added to the event. Event Data: Data that will be in the event in JSON format. Figure 7. Starting a workflow using a cloud event Click the Trigger button to trigger the cloud event. If the workflow instance starts successfully, a success alert appears on the top of the screen, which contains the Go to workflow list link to navigate to the Workflow Instances page. Figure 8. Example of workflow successful starting notification If there is an issue while starting a workflow, then a failure alert appears on the top of the screen, containing View Details and Go to workflow list options. The View Details enables you to view the error message. Figure 9. Example of trigger workflow failure alert If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Workflow Definitions","component":"serverlessworkflow","version":"1.42.0.Final","name":"quarkus-dev-ui-workflow-definition-page","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","titles":[{"text":"Applying filters to the Workflow Definitions table","hash":"_applying_filters_to_the_workflow_definitions_table","id":1},{"text":"Starting new Workflow instances","hash":"con-start-workflow-instances","id":2},{"text":"Starting new Workflow instances using REST","hash":"con-start-workflow-instances-rest","id":3},{"text":"Filling up the Workflow data","hash":"_filling_up_the_workflow_data","id":4},{"text":"Setting up the Business Key","hash":"_setting_up_the_business_key","id":5},{"text":"Starting the new Workflow instance","hash":"_starting_the_new_workflow_instance","id":6},{"text":"Starting Workflows using Cloud Events","hash":"con-trigger-cloud-event-page","id":7},{"text":"Found an issue?","hash":"_found_an_issue","id":8}]},"65":{"id":65,"text":"In Kogito Serverless Workflow Tools, the Workflow Instances page is used to monitor and manage the available instances. The Workflow Instances page displays a list of available instances and add filters to the list. Figure 1. Workflow Instances page with no instances To create a workflow instance, you can use the Workflow Definitions page. For more information, see Workflow Definitions in Kogito Serverless Workflow Tools extension. When you create a workflow instance, the instance appears in the workflow instances table on the page, containing the following details: Id: Displays the name and business key of an instance. Also, when you hover on the name of the workflow instance, a unique ID is displayed for the instance. You can click on the ID to navigate to the Workflow Details page. Status: Displays the current state of the instance. This column can contain Active, Completed, Aborted, Error, and Suspended as values. Created: Displays the time reference indicating when the instance is created. Last Update: Displays the time reference indicating when the instance is last updated. Figure 2. Workflow Instances page with an instance You can also sort the columns of the workflow instances table. On the Workflow Instances page, you can filter the list of workflow instances based on the states and business keys. By default, Active, Completed, Aborted, Error, and Suspended are applied on the list. You can use the Status drop-down to see the available states. To filter the workflow instances based on the states, select or unselect the states in the Status drop-down and click Apply filter button. To filter the workflow instances based on business keys, enter a business key in the Filter by business key field and click Apply filter button. Figure 3. Example filters applied on the workflow instances To fetch the newly added workflow instances, click on the refresh icon next to the Apply Filter button. Also, to clear the applied filters and reset to the default state, click Reset to default button. In the workflow instances table, the Id column contains a clickable link, which enables you to navigate to the Workflow Details page. The Workflow Details page contains various panels, providing detailed information about a workflow instance. Figure 4. Example Workflow Details page The Workflow Details page consists of the following panels: Serverless Workflow Diagram panel Timeline panel Details panel Variables panel Serverless Workflow Diagram panel The Serverless Workflow Diagram panel enables you to explore the workflow diagram and execution path of the workflow instance. The workflow diagram and execution path are displayed by consuming the source which is exposed through the kogito-addons-quarkus-source-files. To add the source files add-on configuration, add the following dependency to pom.xml file of your project: source-files add-on dependency in pom.xml file org.kie.kogito kogito-addons-quarkus-source-files There are two ways to display the diagram. Stunner Diagram Mermaid Diagram By default, the Stunner diagram is displayed. To toggle between the two diagrams you can use the kogito.swf.stunner.enabled(defaulted to true) environment variable in your application properties. For yaml-based workflow files, the mermaid diagram is displayed instead of the stunner diagram. There is a slider available in the diagram panel, which when dragged to the right displays the source code in read-only mode. Figure 5. Stunner based Diagram panel Figure 6. Mermaid based Diagram panel Timeline panel The Timeline panel displays the list of nodes that are related to a workflow instance. Each node in the Timeline panel consists of an icon, indicating the state of the node, such as Active, Completed, or Error. Figure 7. Timeline panel Details panel The Details panel displays the basic information related to a workflow instance, including: Name: Name of the workflow instance. Business key: Business key related to the workflow instance. State: Current state of the workflow instance. Id: Unique ID of the workflow instance. Start: Time reference indicating when the workflow instance is started. Last Updated: Time reference indicating when the workflow instance is last updated. End: Time reference indicating when the workflow instance is completed. Figure 8. Details panel Variables panel The Variables panel displays the data of a workflow in the form of JSON. Figure 9. Variables panel The Workflow Instances page also allows you to send HTTP Cloud Events to the active workflow instances that are waiting for an event to advance. To do so you just have to click on the Trigger Cloud Event button that will lead you to the Trigger Cloud Event page. Once there, you will have to fill out the form with the Cloud Event information: Endpoint: Defines the Path and the HTTP method where the cloud event should be triggered. Event Type: Sets the Cloud Event type header. Event Source: Sets the Cloud Event Source header. Defaults to /local/quarkus-devUi. Instance Id: Sets the id of the workflow instance that must receive the event, it will be added in the kogitoprocrefid event header. Event Data: Data that will be in the event in JSON format. Figure 10. Sending a Cloud Event to an active workflow instance. Additionally, you can use the Send Cloud Event action present available on the instance actions kebab. By using it you will be lead to the Trigger Cloud Event page, but in this case the Instance Id field will be already filled with the selected workflow id. Figure 11. Send Cloud Event button in the actions kebab. To enable the actions kebab, make sure your project is configured to have the kogito-addons-quarkus-process-management dependency on its pom.xml file, like: org.kie.kogito kogito-addons-quarkus-process-management {kogito_version_redhat} Click the Trigger button to trigger the cloud event. If the event is successfully triggered, a success alert appears at the top of the screen, which contains the Go to workflow list link to navigate to the Workflow Instances page. Figure 12. Example of cloud event successfully sent notification. If there is an issue while sending the event, then a failure alert appears at the top of the screen, containing View Details and Go to workflow list options. The View Details enables you to view the error message. Figure 13. Example cloud event unsuccessfully sent notification. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Workflow Instances in Kogito Serverless Workflow Tools extension","component":"serverlessworkflow","version":"1.42.0.Final","name":"quarkus-dev-ui-workflow-instances-page","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","titles":[{"text":"Opening the Workflow instance details","hash":"_opening_the_workflow_instance_details","id":1},{"text":"Sending Cloud Events to active Workflow Instances","hash":"_sending_cloud_events_to_active_workflow_instances","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"66":{"id":66,"text":"You can deploy your Kogito Serverless Workflow projects to an OpenShift instance using the OpenShift integration. The OpenShift integration allows you to test your implementations in a live environment. The deployments described in this document are for development purposes, but not for production. You can deploy your first Kogito Serverless Workflow project to an OpenShift instance and run the project in a live environment. Prerequisites OpenShift integration is configured correctly. For more information, see Integrating your Kogito Serverless Workflow project with OpenShift using Serverless Logic Web Tools. Procedure Create a project using an example application in GitHub. You can use the serverless-workflow-greeting-quarkus example application, which does not contain external dependencies and is easy to test and comprehend. The serverless-workflow-greeting-quarkus example application contains a single operation state with one action, sending request to the greeting function. In the example application, the workflow data is assumed to be the name of the person to greet, and the result is the greeting for the person. The result is added to the state data, which later becomes the workflow data output. On the editor page, click Try on OpenShift button. On the context menu, click Deploy \"greetings\" (Kogito Serverless Workflow). A modal appears, displaying the following deployment options: Deploy as a project: This option is available if your current workspace contains the entire project structure including a single pom.xml file. If Deploy as a project option is disabled, a pre-built image container, containing a Quarkus project is used and the workflow files are placed in the src/main/resources folder of the project. In this case, ensure that the workflow files do not have other dependencies as the dependencies are not included in the deployment. If Deploy as a project option is enabled, all the workflow files are deployed as-is, indicating that no project template is used. Therefore, ensure that the project is deployable. Upload OpenAPI spec to Service Registry: After a workflow is deployed, an OpenAPI specification is available in the deployed service. When you check this option, the Serverless Logic Web Tools fetches the OpenAPI specification, and when ready, the OpenAPI specification is uploaded to your configured service registry. To use this option, you need to configure your service account and service registry on the Settings page. To configure the service account and service registry, see Integrating with Red Hat OpenShift Application and Data Services. Uncheck all options and click Confirm. A pop-up appears displaying Your deployment has been successfully started and will be available shortly. Please do not close this browser tab until the operation is completed. message. Clicking on the OpenShift deployments icon shows your deployment status. The deployment process takes a few minutes since a build needs to be completed before the services are active. OpenShift deployment status After the deployment of your Kogito Serverless Workflow project is successful, you can verify various information about the deployed service. Prerequisites OpenShift integration is configured correctly. For more information, see Integrating your Kogito Serverless Workflow project with OpenShift using Serverless Logic Web Tools. Your Kogito Serverless Workflow project is deployed successfully. Deployed project must be deployed using the Deploy as a project option as unchecked, as the deployment page is only available using the pre-built image container. If the option Deploy as a project option is checked the tool opens the index.html file your project provides, if any. Procedure Click on the OpenShift deployments icon to view a list of deployments. If your deployment is successful (listed with ), you can click on it and access the deployment page to check the Swagger UI, Open API specification, and Metrics page using DashBuilder. Serverless deployment page If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Deploying your Kogito Serverless Workflow projects using Serverless Logic Web Tools","component":"serverlessworkflow","version":"1.42.0.Final","name":"serverless-logic-web-tools-deploy-projects","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","titles":[{"text":"Deploying your first Kogito Serverless Workflow project","hash":"proc-deploy-first-serverless-project-serverless-logic-web-tools","id":1},{"text":"Verifying the deployment status of your first project","hash":"proc-verify-deploy-status-serverless-logic-web-tools","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"67":{"id":67,"text":"The Serverless Logic Web Tools implements a web version of a Git client, enabling you to clone, create, commit, push, and pull repositories. This process synchronizes your workspaces remotely. This document describes how you can configure the integration and synchronize your projects. You can generate a token from your GitHub account and add the token to the Serverless Logic Web Tools. Prerequisites You have an account in GitHub. Procedure Go to Serverless Logic Web Tools web application, and click the Cogwheel (⚙️) on the top-right corner of the screen. Go to the GitHub tab. In the GitHub tab, click the Add access token button and a window will be shown. Click Create a new token option. Ensure that you select the repo option. Optionally, select gist, which enables you to import and update gists. Copy the generated token and paste it into the Token field in Serverless Logic Web Tools GitHub Settings. The contents of the tab are updated and displays that you are signed into the GitHub and contains all the required permissions. After your GitHub token is set, you can synchronize your workspaces with remote repositories. Prerequisites Your GitHub token is configured in the Serverless Logic Web Tools. For more information, see Setting your GitHub token in Serverless Logic Web Tools. Procedure In the Serverless Logic Web Tools web application, create or open a workspace. Add or edit the existing files in the workspace. Click Share → Github: Create Repository. Name your repository and set the repository as Public or Private. (Optional) Select the Use Quarkus Accelerator to create a repository with a base Quarkus project and move the workspace files to src/main/resources folder. Figure 1. Create a repository for your workspace Click Sync → Push to update the remote repository with your local changes. To get new updates from the remote repository, click Sync → Pull. Currently, Serverless Logic Web Tools cannot resolve the merge conflicts. Therefore, ensure that you always pull changes before working on your files. You can import a workspace from GitHub in Serverless Logic Web Tools when you need to work from another computer or need to use someone else’s workspace. Prerequisites Your GitHub token is configured in the Serverless Logic Web Tools. For more information, see Setting your GitHub token in Serverless Logic Web Tools. You have a repository containing workflow files. Procedure Go to GitHub, find the repository with your project, and copy the repository URL. In Serverless Logic Web Tools web application, paste the repository URL in the Import → From URL field and click Clone. The page loads your imported project, defaulting to a workflow file, if present. If applicable, you can push to the imported repository by clicking on the Sync → Push. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Integrating your Kogito Serverless Workflow project in GitHub using Serverless Logic Web Tools","component":"serverlessworkflow","version":"1.42.0.Final","name":"serverless-logic-web-tools-github-integration","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","titles":[{"text":"Setting your GitHub token in Serverless Logic Web Tools","hash":"proc-setting-github-token-serverless-logic-web-tools","id":1},{"text":"Synchronizing your workspaces with GitHub","hash":"proc-sync-workspace-github-serverless-logic-web-tools","id":2},{"text":"Importing a workspace from GitHub","hash":"proc-import-workspace-github-serverless-logic-web-tools","id":3},{"text":"Found an issue?","hash":"_found_an_issue","id":4}]},"68":{"id":68,"text":"You can integrate your Kogito Serverless Workflow project with Red Hat OpenShift. OpenShift is an enterprise-ready Kubernetes container platform, enabling your Kogito Serverless Workflow projects to be deployed and tested online. The Extended Services tool is required to proxy requests to an OpenShift instance. Therefore, setting the Extended Services enables you to deploy and monitor your Kogito Serverless Workflow projects. Procedure In the Serverless Logic Web Tools web application, click the Cogwheel (⚙️) on the top-right corner and go to the Extended Services tab. In case you are not connected to Extended Services, you see You are not connected to Extended Services. Click to setup message. Click on the link in the message. A window appears containing your current operating system as selected and a link to download the latest version of Extended Services. Download the Extended Services and execute it. You might need to grant permissions to run the file depending on your operating system and settings. If you are using macOS, you might encounter the \"Extended Services\" is damaged and can’t be opened. You should move it to Bin error message while running the \"Extended Services\" application. This is due to the overeager approach towards security by macOS and you can fix it by moving the \"Extended Services\" application out of quarantine. You can execute the xattr -d com.apple.quarantine /Applications/KIE\\ Sandbox\\ Extended\\ Services.app command to achieve this. After executing the Extended Services the content in the Extended Services is updated and displays that you are connected to the Extended Services. After setting the Extended Services, you can connect to your OpenShift instance to deploy your Kogito Serverless Workflow projects with Serverless Logic Web Tools. Prerequisites Extended Services tool is installed and running. OpenShift instance is active. You can create a free developer sandbox. For more information, see OpenShift Developer Sandbox. Procedure Log in to your OpenShift instance console interface. In the OpenShift instance console interface, you need your OpenShift project name (also known as namespace), API server, and an access token. For the OpenShift project name, go to the Topology tab and in the top-left corner you see your project name. Figure 1. OpenShift project name in OpenShift instance console To obtain the API server and access token, click on your username and Copy login command. A new page opens containing your new API token along with oc cli login command. From the oc cli command, copy the value of --server=. Figure 2. OpenShift access token and API server Go to the Serverless Logic Web Tools web application, click the Cogwheel (⚙️) on the top-right corner and go to the OpenShift tab. Click the Add connection button and a window will be shown. Enter your OpenShift project name in the Namespace (project) field. Enter the value copied value of --server flag in the Host field. Enter the value of API token in the Token field. Click Connect. If the entered values are correct, then the tab updates and displays You’re connected to OpenShift message. After connecting to OpenShift, you are ready to deploy your Kogito Serverless Workflow projects using Serverless Logic Web Tools. For more information about deploying your projects, see Deploying your Kogito Serverless Workflow projects using Serverless Logic Web Tools. If your OpenShift instance uses self-signed certificates, then you must enable the InsecureSkipVerify on Extended Services. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Integrating your Kogito Serverless Workflow project with OpenShift using Serverless Logic Web Tools","component":"serverlessworkflow","version":"1.42.0.Final","name":"serverless-logic-web-tools-openshift-integration","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","titles":[{"text":"Setting Extended Services","hash":"proc-setting-kie-sandbox-extended-services-serverless-logic-web-tools","id":1},{"text":"Connecting to OpenShift instance using Serverless Logic Web Tools","hash":"proc-connecting-openshift-instance-serverless-logic-web-tools","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"69":{"id":69,"text":"The Serverless Logic Web Tools is a web application that enables you to create and synchronize your Kogito Serverless Workflow, decision files, and Dashbuilder files in a single interface. Also, the Serverless Logic Web Tools application provides the integrations that are needed to deploy and test the Kogito Serverless Workflow models in development mode. Figure 1. Home page of Serverless Logic Web Tools The Serverless Logic Web Tools provides three different editors for your projects, including Kogito Serverless Workflow editor for .sw.json or .sw.yaml|yml files Serverless Decision editor for .yard.json or .yard.yaml|yml files Dashbuilder editor for dash.yaml|yml files You can start by creating a new model from scratch or using one of the samples provided. Procedure Go to the Serverless Logic Web Tools web application. On the Home page, select the type of model you want to create and click the button corresponding to the file type you wish such as JSON or YAML. Figure 2. Create section in Serverless Logic Web Tools A new workspace is created, containing a single file named as Untitled of the selected type. Click on the name to rename the file. Edit your workflow file, which updates the preview on the right-side of the editor. The workflow files in Serverless Logic Web Tools are saved automatically after each change. The files are persisted in the browser, but you can synchronize the file using GitHub integration. For more information about GitHub integration, see Integrating your Kogito Serverless Workflow project in GitHub using Serverless Logic Web Tools. Integrating your Kogito Serverless Workflow project with OpenShift using Serverless Logic Web Tools Integrating with Red Hat OpenShift Application and Data Services Deploying your Kogito Serverless Workflow projects using Serverless Logic Web Tools If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Serverless Logic Web Tools","component":"serverlessworkflow","version":"1.42.0.Final","name":"serverless-logic-web-tools-overview","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","titles":[{"text":"Creating a workflow model in Serverless Logic Web Tools","hash":"proc-create-workflow-model-web-tools","id":1},{"text":"Additional resources","hash":"_additional_resources","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"70":{"id":70,"text":"Some of the features in Serverless Logic Web Tools require integration with Red Hat OpenShift Application and Data Services. Consider uploading OpenAPI specifications to a service registry and fetching its service functions as examples of integration with Red Hat OpenShift Application and Data Services. This document describes how you can configure the required settings to complete the integration with Red Hat OpenShift Application and Data Services. You can create or use a service account from your Red Hat OpenShift Application and Data Services console and add the service account to the Serverless Logic Web Tools. Prerequisites You have access to the Red Hat OpenShift Application and Data Services console. Procedure To create a service account in Red Hat Openshift Application and Data Services, perform the following steps: You can skip this step if you already have a service account. Go to Service Accounts | Red Hat OpenShift Application and Data Services. Click Create service account. In the Create a service account window, enter a service account name in the Short description field. Click Create. A modal displaying your Client ID and Client Secret appears. Copy and save the Client ID and Client Secret. Check the I have copied the client ID and secret checkbox and click Close. If you already have a service account, find your Client ID and Client Secret. In the Serverless Logic Web Tools, click the Cogwheel (⚙️) on the top-right corner and go to the Service Account tab. Click on the Add service account button and a window will be shown. Enter your Client ID and Client Secret in the respective fields. Click Apply. The content in the Service Account tab updates and displays Your Service Account information is set message. You can create or use a Service Registry instance from your Red Hat OpenShift Application and Data Services console and add the Service Registry to Serverless Logic Web Tools. Prerequisites You have access to the Red Hat OpenShift Application and Data Services console. You have created a service account. For information about creating a service account, see Creating a service account in Red Hat OpenShift application and Data Services. Procedure To create a Service Registry instance in Red Hat Openshift Application and Data Services console, perform the following steps: You can skip this step if you already have a Service Registry instance. Go to Service Registry | Red Hat OpenShift Application and Data Services. Click Create Service Registry instance button. In the Create a Service Registry instance window, enter a Service Registry instance name and click Create. The list of Service Registry instances updates with your instance. Find the Service Registry instance you created in the list and click on the instance. Go to the Settings tab and click on Grant access. In the drop-down, select the service account you created in the previous procedure. Select a role for your service account. You must select the role as Manager or Administrator to have the read and write access. Click Save. Click on the menu on the top-right corner of the screen. Click Connection. A drawer opens containing the required connection and authentication information. Copy the value of Core Registry API. If you already have a Service Registry, find the value of Core Registry API of your Service Registry. In the Serverless Logic Web Tools web application, click the Cogwheel (⚙️) on the top-right corner and go to the Service Registry tab. Click on the Add service registry button and a window will be shown. Enter a name for your registry. You can enter the same name that you used while creating the Service Registry instance. Enter the value of Core Registry API and click Apply. The content in the Service Registry tab updates and displays Your Service Registry information is set message. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Integrating with Red Hat OpenShift Application and Data Services","component":"serverlessworkflow","version":"1.42.0.Final","name":"serverless-logic-web-tools-redhat-application-services-integration","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","titles":[{"text":"Creating a service account in Red Hat OpenShift application and Data Services","hash":"proc-create-service-account-serverless-logic-web-tools","id":1},{"text":"Creating a Service Registry in Red Hat OpenShift application and Data Services","hash":"proc-create-service-registry-serverless-logic-web-tools","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"71":{"id":71,"text":"The Google Chrome extension for the Serverless Workflow editor enables you to view and edit CNCF Serverless Workflow specification files in GitHub. This document describes how to install and use the Chrome extension for Serverless Workflow editor on GitHub. You can install the Chrome extension for the Serverless Workflow editor to view and edit the workflow specification files in GitHub. Prerequisites Google Chrome is installed. Procedure You can install the Chrome extension using one of the following methods: Go to Chrome web store: Go to the Serverless Workflow Editor for GitHub extension page in Chrome web store and click Add to Chrome. Figure 1. Serverless Workflow Chrome extension page Download the ZIP file: Download and extract the chrome_extension_serverless_workflow_editor_VERSION.zip file from the kie-tools releases page in GitHub. Go to Customize and control → Settings → Extensions → Load unpacked in the upper-right corner in Chrome. Open the extracted dist folder. The Chrome extension for Serverless Workflow editor is successfully installed. After installing the Chrome extension for the Serverless Workflow editor, you can use the editor to edit and view the workflow files in GitHub. Prerequisites You have installed the Serverless Workflow editor extension in Chrome. For more information, see Installing the Chrome extension for Serverless Workflow editor on GitHub. Procedure Create a workflow file (.sw.json or .sw.yaml). Push the created workflow file to GitHub, or you can go to the GitHub page and click on the workflow file to open in the editor. Figure 2. Serverless Workflow file in GitHub The Serverless Workflow editor opens in read-only mode. To change the read-only mode to edit mode, click the pencil icon on the top-right corner of the screen. You can switch to the full-screen mode. Also, you can hide the editor and view the source code using See as source button. Make changes to the source code, add a commit message. You can either commit the changes to a branch directly or create a new branch for pull request. If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Chrome extension for Serverless Workflow editor on GitHub","component":"serverlessworkflow","version":"1.42.0.Final","name":"swf-editor-chrome-extension","url":"/serverlessworkflow/latest/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","titles":[{"text":"Installing the Chrome extension for Serverless Workflow editor on GitHub","hash":"proc-install-chrome-extension-sw-editor","id":1},{"text":"Using the Chrome extension for Serverless Workflow editor on GitHub","hash":"proc-using-chrome-extension-sw-editor","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"72":{"id":72,"text":"You can use the Serverless Workflow editor to edit the CNCF Serverless Workflow specification files in the code editor and view the workflow diagram in the diagram visualizer. When you make changes to the specification files in the editor, you see the workflow diagram is updated with the new changes. Figure 1. Serverless Workflow editor The Serverless Workflow editor contains the following main features: Reload diagram dynamically: In the Serverless Workflow editor, when you make a change in the code editor, the workflow diagram updates automatically. SVG generation: In the Serverless Workflow editor, you can save a workflow diagram as .svg file in the workspace. Auto-completion based on the context: The Serverless Workflow editor contains the capability of auto-completing the code based on the context. Validation: The Serverless Workflow editor performs validation on the workflow files and provides an error-free experience. The editor performs validation using JSON schema to the workflow file structure but not the values, and auto-completion works with JSON but not with YAML. The following extensions are provided that you can use to design the workflow files: VS Code extension Chrome GitHub extension You can also try it at the Serverless Logic Web Tools. CNCF Serverless Workflow specification If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"Serverless Workflow editor","component":"serverlessworkflow","version":"1.42.0.Final","name":"swf-editor-overview","url":"/serverlessworkflow/latest/tooling/serverless-workflow-editor/swf-editor-overview.html","titles":[{"text":"Features in Serverless Workflow editor","hash":"ref-sw-editor-features","id":1},{"text":"Additional resources","hash":"_additional_resources","id":2},{"text":"Found an issue?","hash":"_found_an_issue","id":3}]},"73":{"id":73,"text":"The VS Code extension for the Serverless Workflow editor enables you to view and edit CNCF Serverless Workflow specification files in your local projects. This document describes how to install and use the VS Code extension for Serverless Workflow editor, along with how to load OpenAPI files using the extension. Using the VS Code extension for Serverless Workflow editor, enables you to view and edit the workflow specification files in your local projects. Figure 1. Serverless Workflow VS Code extension Prerequisites Visual Studio Code 1.66.0 or later is installed. Procedure You can install the VS Code extension for Serverless Workflow editor using one of the following methods: Go to Visual Studio Marketplace: Go to KIE Serverless Workflow Editor extension page in Visual Studio Marketplace and click Install. Figure 2. KIE Serverless Workflow Editor in Visual Studio Marketplace Download VSIX file: Download the latest Kogito Serverless Workflow VS Code extension VSIX file from the kie-tools releases page in GitHub. Click Install from VSIX option from the extensions menu and install the serverless_workflow_vscode_extension_VERSION.vsix file in VS Code. Figure 3. Install VS Code extension using VSIX Once installation is complete, you can create a workflow file or open an existing workflow file in VS Code. When you open a workflow file, VS Code uses the extension automatically. The Serverless Workflow editor contains the following main features: Reload diagram dynamically: In the Serverless Workflow editor, when you make a change in the code editor, the workflow diagram updates automatically. SVG generation: In the Serverless Workflow editor, you can save a workflow diagram as .svg file in the workspace. Auto-completion based on the context: The Serverless Workflow editor contains the capability of auto-completing the code based on the context. The Serverless Workflow VS Code extension parses the OpenAPI specification files and provides a list of function definitions in the auto-complete dialog box. Figure 4. Function definition in auto-complete dialog box Once you select an option in the auto-complete dialog box, a function definition is added to the functions array with proper settings as shown in the following example: Figure 5. Example of function definition object When the function definition is added, the function is available for auto-completion in the function reference section as shown in the following example: Figure 6. Example of a function reference Once you select an option from the auto-complete dialog box, a function reference is added with proper reference name and attributes. Validation: The Serverless Workflow editor performs validation on the workflow files and provides an error-free experience. The VS Code extension for Serverless Workflow editor supports the following commands: Table 1. Supported commands in Serverless Workflow VS Code extension Command Description Serverless Workflow: Generate SVG without any notification Generates an SVG file of a workflow diagram in the workspace next to the workflow file. Serverless Workflow: Open as Diagram (to the side) Opens the workflow diagram to the right side of the editor. Serverless Workflow: Setup automatically open Diagram Editor alongside Text Editor Allows you to set whether or not a workflow diagram needs to be opened by default alongside the editor. This operation provides two options, including Open automatically and Do not open. Serverless Workflow: Configure Service Registries Opens the service registries configurations on the Extension Settings page. Serverless Workflow: Refresh Service Registries Refreshes the artifact list of service registries. Serverless Workflow: Log in Service Registries Triggers a login action of service registries. To trigger a command in VS Code, go to View → Command Palette…​ or you can press Ctrl+Shift+P to open the command palette. Enter Serverless Workflow in the search tab to see the list of supported commands. Figure 7. Command Palette in VS Code You can navigate to File → Preferences → Settings and configure the following settings for the Serverless Workflow editor: Table 2. Settings in Serverless Workflow VS Code extension Setting Description Automatically Open Diagram Editor Alongside Text Editor This setting enables the editor to open a workflow diagram when a workflow is being edited. The available options include: Ask next time (default) Do not open Open automatically Run On Save This setting executes a VS Code command when you save an edited workflow file. The default VS Code command that is executed is extension.kogito.swf.silentlyGenerateSvg (generate a diagram SVG). Service Registries This setting provides access to the configuration of service registries in the setting.json file. Should Reference Service Registry Functions With Urls When automatically completing the functions in the service registry, this setting specifies whether a function operation uses the URL of OpenAPI specification file or uses the local path, where the file is downloaded (Specs Storage Path). Specs Storage Path This setting enables you to define or edit the path of OpenAPI specification file. The default value is specs folder. Svg Filename Template This setting enables you to set a file name template, which can be used while generating the diagram SVG file. The default value is fileName.svg. Svg File Path This setting enables you to set a path, where the generated diagram SVG file will be stored. Figure 8. Settings page in VS Code extension The VS Code extension for Serverless Workflow editor can use OpenAPI specification files that are stored locally in the specs folder. Also, the OpenAPI specification files can be stored in remote service registries, providing auto-complete feature for function definitions. For more information about OpenAPI specification files path, see Serverless Workflow editor settings. The VS Code extension configures a list of service registries, which enables the Serverless Workflow editor to load OpenAPI specification files that are stored in the external registries. Prerequisites VS Code extension for the Serverless Workflow editor is installed. For more information about installing the VS Code extension, see Installing the VS Code Extension for Serverless Workflow editor. Procedure Open your workflow file in VS Code IDE and select the Setup Service Registries option. Navigate to the settings.json file. Add the list of service registries in the settings.json file using the kogito.swf.serviceRegistries key, which matches the following JSON schema: Service Registry Schema { \"type\": \"object\", \"properties\": { \"registries\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"name\": { \"type\": \"string\" }, (1) \"url\": { (2) \"type\": \"string\", \"format\": \"uri\", \"pattern\": \"^https?://?[-A-Za-z0-9+&@#/%?=_!:.]+[-A-Za-z0-9+&@#/%=~_|]\" }, \"authProvider\": { (3) \"type\": \"string\", \"enum\": [\"none\", \"red-hat-account\"], \"default\": \"none\" } }, \"required\": [\"name\", \"url\", \"authProvider\"] } } } } In the registries array, each item must contain the following properties: 1 name: Identifier provided for a registry. 2 url: URL for the REST API of the remotes service registry, such as Apicurio registry. 3 authProvider: Type of authentication for the remote service registry. This property contains values as none (no authentication) and red-hat-account (log in with your Red Hat account). Following is an example of a service registry configuration: Example of service registry configuration { \"kogito.swf.serviceRegistries\": { \"registries\": [ { \"name\": \"openshift\", \"url\": \"https://{url-to-openshift-registry}/apis/registry/v2\", \"authProvider\": \"red-hat-account\" }, { \"name\": \"local\", \"url\": \"https://{url-to-local-registry}/apis/registry/v2\", \"authProvider\": \"none\" }, ] } } To access the service registry settings in the VS Code, click on the Setup Service Registries option and use the Serverless Workflow: Configure Service Registries command. You can use the service registries for auto-completion feature in the Serverless Workflow VS Code extension. Prerequisites The following prerequisites are for the service registries that require Red Hat authentication: You have a Red Hat account with access to Red Hat Hybrid Cloud Console. Red Hat authentication extension is installed. Procedure In a workflow file, click the Setup Service Registries options and navigate to the settings.json file to configure the service registries. Figure 9. Function definition section with Setup Service Registries option Once you configure the service registry settings, the function definition section in the workflow file displays a Log in Service Registries button. The Log in Service Registries button appears when the function definition is configured to a remote service registry, such as Apicurio registry. Click on the Log in Service Registries option. You are redirected to the Red Hat login (SSO) page. Log in with your Red Hat credentials to connect to the remote service registry. You are redirected to the Red Hat login (SSO) page only if the authProvider property contains the value of red-hat-account in the service registry settings. Figure 10. Function definition section with Log in Service Registries option After logging in, use Ctrl+Space in the function definition section to view the list of available functions. Figure 11. Example of function definition section auto-complete dialog box Click on a function to auto-complete the function definition as shown in the following example: Figure 12. Example of an auto-completed function definition After selecting an option in the auto-complete dialog box, the OpenAPI specification file is downloaded into the specs folder. The downloaded OpenAPI specification file follows the REGISTRY-NAME_OPERATION-NAME_VERSION format. Figure 13. Downloaded OpenAPI specification file To fetch the new changes in the service registry, click Refresh Service Registries. Figure 14. Refresh Service Registries button in function definition section To create a new function definition object, click Add function. You can also validate the auto-completion using the JSON schema to the workflow file structure. The Serverless Workflow editor performs validation using JSON schema to the workflow file structure but not the values, and auto-completion works with JSON but not with YAML. To view the validation warnings and errors, go to View → Problems or press Ctrl+Shift+M to open the Problems tab. Figure 15. Errors and warnings in Problems tab If you find an issue or any misleading information, please feel free to report it here. We really appreciate it!","title":"VS Code extension for Serverless Workflow editor","component":"serverlessworkflow","version":"1.42.0.Final","name":"swf-editor-vscode-extension","url":"/serverlessworkflow/latest/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","titles":[{"text":"Installing the VS Code Extension for Serverless Workflow editor","hash":"proc-install-vscode-extension-sw-editor","id":1},{"text":"Features in Serverless Workflow editor","hash":"_features_in_serverless_workflow_editor","id":2},{"text":"Supported commands in Serverless Workflow VS Code extension","hash":"ref-supported-commands-vscode-extension","id":3},{"text":"Serverless Workflow editor settings","hash":"ref-sw-editor-settings","id":4},{"text":"Enabling VS Code extension to load OpenAPI files from remote service registries","hash":"_enabling_vs_code_extension_to_load_openapi_files_from_remote_service_registries","id":5},{"text":"Using service registries for auto-completion","hash":"_using_service_registries_for_auto_completion","id":6},{"text":"Found an issue?","hash":"_found_an_issue","id":7}]}},"components":{},"componentVersions":{"serverlessworkflow/main":{"displayVersion":"snapshot","title":"Kogito Serverless Workflow Guides","version":"main","name":"serverlessworkflow","prerelease":"snapshot","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"SonataFlow Operator","operator_installation_namespace":"sonataflow-operator-system","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.9.Final","quarkus_platform_version":"2.16.9.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.66.0","kn_cli_version":"0.21.3","docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"main","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/main/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_guides_kafka_url":"https://quarkus.io/guides/kafka","quarkus_guides_config_reference_url":"https://quarkus.io/guides/config-reference","quarkus_guides_infinispan_client_reference_url":"https://quarkus.io/guides/infinispan-client-reference","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","docker_compose_install_url":"https://docs.docker.com/compose/install/","kn_cli_install_url":"https://knative.dev/docs/client/install-kn/","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new","ocp_local_url":"https://access.redhat.com/documentation/en-us/red_hat_openshift_local/2.17","ocp_knative_serving_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-serving.html","ocp_knative_eventing_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-eventing.html","ocp_kn_cli_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-kn.html","serverless_workflow_vscode_extension_name":"KIE Serverless Workflow Editor"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/main/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/main/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating a Quarkus Workflow Project","url":"/serverlessworkflow/main/getting-started/create-your-first-workflow-service.html","urlType":"internal"}]},{"content":"Core Concepts","items":[{"content":"Serverless Workflow Specification","url":"/serverlessworkflow/main/core/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Events","url":"/serverlessworkflow/main/core/handling-events-on-workflows.html","urlType":"internal"},{"content":"Callbacks","url":"/serverlessworkflow/main/core/working-with-callbacks.html","urlType":"internal"},{"content":"jq Expressions","url":"/serverlessworkflow/main/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/main/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/main/core/configuration-properties.html","urlType":"internal"},{"content":"Input Schema","url":"/serverlessworkflow/main/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom Functions","url":"/serverlessworkflow/main/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts","url":"/serverlessworkflow/main/core/timeouts-support.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/main/core/working-with-parallelism.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Editor","url":"/serverlessworkflow/main/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension","url":"/serverlessworkflow/main/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome extension for GitHub","url":"/serverlessworkflow/main/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/main/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integration with GitHub","url":"/serverlessworkflow/main/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integration with OpenShift","url":"/serverlessworkflow/main/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integration with Service Registries","url":"/serverlessworkflow/main/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deployment","url":"/serverlessworkflow/main/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"OpenAPI","url":"/serverlessworkflow/main/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal","items":[{"content":"Advanced Configuration","url":"/serverlessworkflow/main/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Callbacks","url":"/serverlessworkflow/main/service-orchestration/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"gRPC","url":"/serverlessworkflow/main/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Event Orchestration","items":[{"content":"AsyncAPI","url":"/serverlessworkflow/main/eventing/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/main/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Quarkus","items":[{"content":"Apache Kafka","url":"/serverlessworkflow/main/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Knative Eventing","url":"/serverlessworkflow/main/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"}]}]},{"content":"Security","items":[{"content":"Client Authentication","items":[{"content":"OpenAPI Authentication","url":"/serverlessworkflow/main/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"OpenAPI OAuth2","url":"/serverlessworkflow/main/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]}]},{"content":"Executing, Testing and Troubleshooting","items":[{"content":"Executing and Testing Workflows","items":[{"content":"Developer UI","url":"/serverlessworkflow/main/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances","url":"/serverlessworkflow/main/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions","url":"/serverlessworkflow/main/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards","url":"/serverlessworkflow/main/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Command Line","url":"/serverlessworkflow/main/testing-and-troubleshooting/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Mocking HTTP CloudEvents","url":"/serverlessworkflow/main/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI Services","url":"/serverlessworkflow/main/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing with REST Assured","url":"/serverlessworkflow/main/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"}]}]},{"content":"Persistence","items":[{"content":"Quarkus","items":[{"content":"PostgreSQL Configuration","url":"/serverlessworkflow/main/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"PostgreSQL Database Migration","url":"/serverlessworkflow/main/persistence/postgresql-flyway-migration.html","urlType":"internal"},{"content":"Integration Tests with PostgreSQL","url":"/serverlessworkflow/main/persistence/integration-tests-with-postgresql.html","urlType":"internal"}]}]},{"content":"Cloud","url":"/serverlessworkflow/main/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/main/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Development Mode","url":"/serverlessworkflow/main/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Referencing Workflow Resources","url":"/serverlessworkflow/main/cloud/operator/referencing-resource-files.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/main/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Building and Deploying Workflow Images","url":"/serverlessworkflow/main/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Custom Resource Status","url":"/serverlessworkflow/main/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/main/cloud/operator/known-issues.html","urlType":"internal"},{"content":"Migration Guide","url":"/serverlessworkflow/main/cloud/operator/migration-guide.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building Workflow Images","url":"/serverlessworkflow/main/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying on Minikube","url":"/serverlessworkflow/main/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying on Kubernetes","url":"/serverlessworkflow/main/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Deploying on OpenShift","url":"/serverlessworkflow/main/cloud/quarkus/deploying-on-openshift.html","urlType":"internal"},{"content":"Service Discovery","url":"/serverlessworkflow/main/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Camel Routes","url":"/serverlessworkflow/main/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Knative Serving","url":"/serverlessworkflow/main/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing Prometheus Metrics","url":"/serverlessworkflow/main/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow Data in Dashboards","url":"/serverlessworkflow/main/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Job Service","items":[{"content":"Core Concepts","url":"/serverlessworkflow/main/job-services/core-concepts.html","urlType":"internal"},{"content":"Quarkus Extensions","url":"/serverlessworkflow/main/job-services/quarkus-extensions.html","urlType":"internal"}]},{"content":"Data Index","items":[{"content":"Core concepts","url":"/serverlessworkflow/main/data-index/data-index-core-concepts.html","urlType":"internal"},{"content":"Standalone service","url":"/serverlessworkflow/main/data-index/data-index-service.html","urlType":"internal"},{"content":"Quarkus Extension","url":"/serverlessworkflow/main/data-index/data-index-quarkus-extension.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration","url":"/serverlessworkflow/main/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeouts Showcase","url":"/serverlessworkflow/main/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.42.0.Final":{"displayVersion":"1.42","title":"Kogito Serverless Workflow Guides","version":"1.42.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"SonataFlow Operator","operator_installation_namespace":"sonataflow-operator-system","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.8.Final","quarkus_platform_version":"2.16.8.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.66.0","kn_cli_version":"0.21.3","docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"v1.42.0","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.42.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_guides_kafka_url":"https://quarkus.io/guides/kafka","quarkus_guides_config_reference_url":"https://quarkus.io/guides/config-reference","quarkus_guides_infinispan_client_reference_url":"https://quarkus.io/guides/infinispan-client-reference","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","docker_compose_install_url":"https://docs.docker.com/compose/install/","kn_cli_install_url":"https://knative.dev/docs/client/install-kn/","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new","ocp_local_url":"https://access.redhat.com/documentation/en-us/red_hat_openshift_local/2.17","ocp_knative_serving_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-serving.html","ocp_knative_eventing_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-eventing.html","ocp_kn_cli_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-kn.html","serverless_workflow_vscode_extension_name":"KIE Serverless Workflow Editor"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/latest/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/latest/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating a Quarkus Workflow Project","url":"/serverlessworkflow/latest/getting-started/create-your-first-workflow-service.html","urlType":"internal"}]},{"content":"Core Concepts","items":[{"content":"Serverless Workflow Specification","url":"/serverlessworkflow/latest/core/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Events","url":"/serverlessworkflow/latest/core/handling-events-on-workflows.html","urlType":"internal"},{"content":"Callbacks","url":"/serverlessworkflow/latest/core/working-with-callbacks.html","urlType":"internal"},{"content":"jq Expressions","url":"/serverlessworkflow/latest/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/latest/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/latest/core/configuration-properties.html","urlType":"internal"},{"content":"Input Schema","url":"/serverlessworkflow/latest/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom Functions","url":"/serverlessworkflow/latest/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts","url":"/serverlessworkflow/latest/core/timeouts-support.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/latest/core/working-with-parallelism.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Editor","url":"/serverlessworkflow/latest/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension","url":"/serverlessworkflow/latest/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome extension for GitHub","url":"/serverlessworkflow/latest/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integration with GitHub","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integration with OpenShift","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integration with Service Registries","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deployment","url":"/serverlessworkflow/latest/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"OpenAPI","url":"/serverlessworkflow/latest/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal","items":[{"content":"Advanced Configuration","url":"/serverlessworkflow/latest/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Callbacks","url":"/serverlessworkflow/latest/service-orchestration/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"gRPC","url":"/serverlessworkflow/latest/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Event Orchestration","items":[{"content":"AsyncAPI","url":"/serverlessworkflow/latest/eventing/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/latest/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Quarkus","items":[{"content":"Apache Kafka","url":"/serverlessworkflow/latest/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Knative Eventing","url":"/serverlessworkflow/latest/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"}]}]},{"content":"Security","items":[{"content":"Client Authentication","items":[{"content":"OpenAPI Authentication","url":"/serverlessworkflow/latest/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"OpenAPI OAuth2","url":"/serverlessworkflow/latest/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]}]},{"content":"Executing, Testing and Troubleshooting","items":[{"content":"Executing and Testing Workflows","items":[{"content":"Developer UI","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards","url":"/serverlessworkflow/latest/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Command Line","url":"/serverlessworkflow/latest/testing-and-troubleshooting/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Mocking HTTP CloudEvents","url":"/serverlessworkflow/latest/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI Services","url":"/serverlessworkflow/latest/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing with REST Assured","url":"/serverlessworkflow/latest/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"}]}]},{"content":"Persistence","items":[{"content":"Quarkus","items":[{"content":"PostgreSQL Configuration","url":"/serverlessworkflow/latest/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"PostgreSQL Database Migration","url":"/serverlessworkflow/latest/persistence/postgresql-flyway-migration.html","urlType":"internal"},{"content":"Integration Tests with PostgreSQL","url":"/serverlessworkflow/latest/persistence/integration-tests-with-postgresql.html","urlType":"internal"}]}]},{"content":"Cloud","url":"/serverlessworkflow/latest/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/latest/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Development Mode","url":"/serverlessworkflow/latest/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Referencing Workflow Resources","url":"/serverlessworkflow/latest/cloud/operator/referencing-resource-files.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/latest/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Building and Deploying Workflow Images","url":"/serverlessworkflow/latest/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Custom Resource Status","url":"/serverlessworkflow/latest/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/latest/cloud/operator/known-issues.html","urlType":"internal"},{"content":"Migration Guide","url":"/serverlessworkflow/latest/cloud/operator/migration-guide.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building Workflow Images","url":"/serverlessworkflow/latest/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying on Minikube","url":"/serverlessworkflow/latest/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying on Kubernetes","url":"/serverlessworkflow/latest/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Deploying on OpenShift","url":"/serverlessworkflow/latest/cloud/quarkus/deploying-on-openshift.html","urlType":"internal"},{"content":"Service Discovery","url":"/serverlessworkflow/latest/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Camel Routes","url":"/serverlessworkflow/latest/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Knative Serving","url":"/serverlessworkflow/latest/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing Prometheus Metrics","url":"/serverlessworkflow/latest/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow Data in Dashboards","url":"/serverlessworkflow/latest/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Job Service","items":[{"content":"Core Concepts","url":"/serverlessworkflow/latest/job-services/core-concepts.html","urlType":"internal"},{"content":"Quarkus Extensions","url":"/serverlessworkflow/latest/job-services/quarkus-extensions.html","urlType":"internal"}]},{"content":"Data Index","items":[{"content":"Core concepts","url":"/serverlessworkflow/latest/data-index/data-index-core-concepts.html","urlType":"internal"},{"content":"Standalone service","url":"/serverlessworkflow/latest/data-index/data-index-service.html","urlType":"internal"},{"content":"Quarkus Extension","url":"/serverlessworkflow/latest/data-index/data-index-quarkus-extension.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration","url":"/serverlessworkflow/latest/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeouts Showcase","url":"/serverlessworkflow/latest/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.41.0.Final":{"displayVersion":"1.41","title":"Kogito Serverless Workflow Guides","version":"1.41.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"SonataFlow Operator","operator_installation_namespace":"sonataflow-operator-system","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.7.Final","quarkus_platform_version":"2.16.7.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.66.0","kn_cli_version":"0.21.3","docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"v1.41.0","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.41.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_guides_kafka_url":"https://quarkus.io/guides/kafka","quarkus_guides_config_reference_url":"https://quarkus.io/guides/config-reference","quarkus_guides_infinispan_client_reference_url":"https://quarkus.io/guides/infinispan-client-reference","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","docker_compose_install_url":"https://docs.docker.com/compose/install/","kn_cli_install_url":"https://knative.dev/docs/client/install-kn/","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new","ocp_local_url":"https://access.redhat.com/documentation/en-us/red_hat_openshift_local/2.17","ocp_knative_serving_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-serving.html","ocp_knative_eventing_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-eventing.html","ocp_kn_cli_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-kn.html","serverless_workflow_vscode_extension_name":"KIE Serverless Workflow Editor"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.41.0.Final/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/1.41.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating a Quarkus Workflow Project","url":"/serverlessworkflow/1.41.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"}]},{"content":"Core Concepts","items":[{"content":"Serverless Workflow Specification","url":"/serverlessworkflow/1.41.0.Final/core/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Events","url":"/serverlessworkflow/1.41.0.Final/core/handling-events-on-workflows.html","urlType":"internal"},{"content":"Callbacks","url":"/serverlessworkflow/1.41.0.Final/core/working-with-callbacks.html","urlType":"internal"},{"content":"jq Expressions","url":"/serverlessworkflow/1.41.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/1.41.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/1.41.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input Schema","url":"/serverlessworkflow/1.41.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom Functions","url":"/serverlessworkflow/1.41.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts","url":"/serverlessworkflow/1.41.0.Final/core/timeouts-support.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/1.41.0.Final/core/working-with-parallelism.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Editor","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome extension for GitHub","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integration with GitHub","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integration with OpenShift","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integration with Service Registries","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deployment","url":"/serverlessworkflow/1.41.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"OpenAPI","url":"/serverlessworkflow/1.41.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal","items":[{"content":"Advanced Configuration","url":"/serverlessworkflow/1.41.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Callbacks","url":"/serverlessworkflow/1.41.0.Final/service-orchestration/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"gRPC","url":"/serverlessworkflow/1.41.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Event Orchestration","items":[{"content":"AsyncAPI","url":"/serverlessworkflow/1.41.0.Final/eventing/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/1.41.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Quarkus","items":[{"content":"Apache Kafka","url":"/serverlessworkflow/1.41.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Knative Eventing","url":"/serverlessworkflow/1.41.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"}]}]},{"content":"Security","items":[{"content":"Client Authentication","items":[{"content":"OpenAPI Authentication","url":"/serverlessworkflow/1.41.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"OpenAPI OAuth2","url":"/serverlessworkflow/1.41.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]}]},{"content":"Executing, Testing and Troubleshooting","items":[{"content":"Executing and Testing Workflows","items":[{"content":"Developer UI","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Command Line","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Mocking HTTP CloudEvents","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI Services","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing with REST Assured","url":"/serverlessworkflow/1.41.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"}]}]},{"content":"Persistence","items":[{"content":"Quarkus","items":[{"content":"PostgreSQL Configuration","url":"/serverlessworkflow/1.41.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"PostgreSQL Database Migration","url":"/serverlessworkflow/1.41.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"},{"content":"Integration Tests with PostgreSQL","url":"/serverlessworkflow/1.41.0.Final/persistence/integration-tests-with-postgresql.html","urlType":"internal"}]}]},{"content":"Cloud","url":"/serverlessworkflow/1.41.0.Final/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/1.41.0.Final/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Development Mode","url":"/serverlessworkflow/1.41.0.Final/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Referencing Workflow Resources","url":"/serverlessworkflow/1.41.0.Final/cloud/operator/referencing-resource-files.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/1.41.0.Final/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Building and Deploying Workflow Images","url":"/serverlessworkflow/1.41.0.Final/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Custom Resource Status","url":"/serverlessworkflow/1.41.0.Final/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/1.41.0.Final/cloud/operator/known-issues.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building Workflow Images","url":"/serverlessworkflow/1.41.0.Final/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying on Minikube","url":"/serverlessworkflow/1.41.0.Final/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying on Kubernetes","url":"/serverlessworkflow/1.41.0.Final/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Deploying on OpenShift","url":"/serverlessworkflow/1.41.0.Final/cloud/quarkus/deploying-on-openshift.html","urlType":"internal"},{"content":"Service Discovery","url":"/serverlessworkflow/1.41.0.Final/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Camel Routes","url":"/serverlessworkflow/1.41.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Knative Serving","url":"/serverlessworkflow/1.41.0.Final/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing Prometheus Metrics","url":"/serverlessworkflow/1.41.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow Data in Dashboards","url":"/serverlessworkflow/1.41.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Job Service","items":[{"content":"Core Concepts","url":"/serverlessworkflow/1.41.0.Final/job-services/core-concepts.html","urlType":"internal"},{"content":"Quarkus Extensions","url":"/serverlessworkflow/1.41.0.Final/job-services/quarkus-extensions.html","urlType":"internal"}]},{"content":"Data Index","items":[{"content":"Core concepts","url":"/serverlessworkflow/1.41.0.Final/data-index/data-index-core-concepts.html","urlType":"internal"},{"content":"Standalone service","url":"/serverlessworkflow/1.41.0.Final/data-index/data-index-service.html","urlType":"internal"},{"content":"Quarkus Extension","url":"/serverlessworkflow/1.41.0.Final/data-index/data-index-quarkus-extension.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration","url":"/serverlessworkflow/1.41.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeouts Showcase","url":"/serverlessworkflow/1.41.0.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.40.0.Final":{"displayVersion":"1.40","title":"Kogito Serverless Workflow Guides","version":"1.40.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"SonataFlow Operator","operator_installation_namespace":"sonataflow-operator-system","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.7.Final","quarkus_platform_version":"2.16.7.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.66.0","kn_cli_version":"0.21.3","docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"v1.40.0","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.40.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_guides_kafka_url":"https://quarkus.io/guides/kafka","quarkus_guides_config_reference_url":"https://quarkus.io/guides/config-reference","quarkus_guides_infinispan_client_reference_url":"https://quarkus.io/guides/infinispan-client-reference","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","docker_compose_install_url":"https://docs.docker.com/compose/install/","kn_cli_install_url":"https://knative.dev/docs/client/install-kn/","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new","ocp_local_url":"https://access.redhat.com/documentation/en-us/red_hat_openshift_local/2.17","ocp_knative_serving_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-serving.html","ocp_knative_eventing_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-eventing.html","ocp_kn_cli_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-kn.html","serverless_workflow_vscode_extension_name":"KIE Serverless Workflow Editor"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.40.0.Final/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/1.40.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.40.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.40.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with tooling","url":"/serverlessworkflow/1.40.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions","url":"/serverlessworkflow/1.40.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/1.40.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/1.40.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties","url":"/serverlessworkflow/1.40.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition","url":"/serverlessworkflow/1.40.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your workflow service","url":"/serverlessworkflow/1.40.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts Support","url":"/serverlessworkflow/1.40.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Editor","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome extension for GitHub","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integration with GitHub","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integration with OpenShift","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integration with Service Registries","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deployment","url":"/serverlessworkflow/1.40.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.40.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.40.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.40.0.Final/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.40.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event State","url":"/serverlessworkflow/1.40.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.40.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.40.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/1.40.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback State","url":"/serverlessworkflow/1.40.0.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback","url":"/serverlessworkflow/1.40.0.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Client Authentication","items":[{"content":"OpenAPI Authentication","url":"/serverlessworkflow/1.40.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"OpenAPI OAuth2","url":"/serverlessworkflow/1.40.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]}]},{"content":"Executing, Testing and Troubleshooting","items":[{"content":"Executing and Testing Workflows","items":[{"content":"Developer UI","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Command Line","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Mocking HTTP CloudEvents","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI Services","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing with REST Assured","url":"/serverlessworkflow/1.40.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"}]}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.40.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.40.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","url":"/serverlessworkflow/1.40.0.Final/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/1.40.0.Final/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Development Mode","url":"/serverlessworkflow/1.40.0.Final/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Referencing Workflow Resources","url":"/serverlessworkflow/1.40.0.Final/cloud/operator/referencing-resource-files.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/1.40.0.Final/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Building and Deploying Workflow Images","url":"/serverlessworkflow/1.40.0.Final/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Custom Resource Status","url":"/serverlessworkflow/1.40.0.Final/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/1.40.0.Final/cloud/operator/known-issues.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.40.0.Final/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying Workflows on OpenShift","url":"/serverlessworkflow/1.40.0.Final/cloud/quarkus/deploying-on-openshift.html","urlType":"internal"},{"content":"Deploying Workflows on Minikube","url":"/serverlessworkflow/1.40.0.Final/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying Workflows on Kubernetes","url":"/serverlessworkflow/1.40.0.Final/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery","url":"/serverlessworkflow/1.40.0.Final/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Camel Routes","url":"/serverlessworkflow/1.40.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Knative Serving","url":"/serverlessworkflow/1.40.0.Final/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing Prometheus Metrics","url":"/serverlessworkflow/1.40.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow Data in Dashboards","url":"/serverlessworkflow/1.40.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Job Service","items":[{"content":"Core Concepts","url":"/serverlessworkflow/1.40.0.Final/job-services/core-concepts.html","urlType":"internal"},{"content":"Quarkus Extensions","url":"/serverlessworkflow/1.40.0.Final/job-services/quarkus-extensions.html","urlType":"internal"}]},{"content":"Data Index","items":[{"content":"Core concepts","url":"/serverlessworkflow/1.40.0.Final/data-index/data-index-core-concepts.html","urlType":"internal"},{"content":"Standalone service","url":"/serverlessworkflow/1.40.0.Final/data-index/data-index-service.html","urlType":"internal"},{"content":"Quarkus Extension","url":"/serverlessworkflow/1.40.0.Final/data-index/data-index-quarkus-extension.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration","url":"/serverlessworkflow/1.40.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeouts Showcase","url":"/serverlessworkflow/1.40.0.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.40.0-SNAPSHOT":{"displayVersion":"1.40-RC","title":"Kogito Serverless Workflow Guides","version":"1.40.0-SNAPSHOT","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"SonataFlow Operator","operator_installation_namespace":"sonataflow-operator-system","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.13.8.Final","quarkus_platform_version":"2.13.8.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.66.0","kn_cli_version":"0.21.3","docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"v1.40.0","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.40.x-prod/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_guides_kafka_url":"https://quarkus.io/guides/kafka","quarkus_guides_config_reference_url":"https://quarkus.io/guides/config-reference","quarkus_guides_infinispan_client_reference_url":"https://quarkus.io/guides/infinispan-client-reference","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","docker_compose_install_url":"https://docs.docker.com/compose/install/","kn_cli_install_url":"https://knative.dev/docs/client/install-kn/","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new","ocp_local_url":"https://access.redhat.com/documentation/en-us/red_hat_openshift_local/2.17","ocp_knative_serving_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-serving.html","ocp_knative_eventing_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-knative-eventing.html","ocp_kn_cli_url":"https://docs.openshift.com/container-platform/4.12/serverless/install/installing-kn.html","serverless_workflow_vscode_extension_name":"KIE Serverless Workflow Editor"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.40.0-SNAPSHOT/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/1.40.0-SNAPSHOT/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.40.0-SNAPSHOT/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.40.0-SNAPSHOT/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with tooling","url":"/serverlessworkflow/1.40.0-SNAPSHOT/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions","url":"/serverlessworkflow/1.40.0-SNAPSHOT/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/1.40.0-SNAPSHOT/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/1.40.0-SNAPSHOT/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties","url":"/serverlessworkflow/1.40.0-SNAPSHOT/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition","url":"/serverlessworkflow/1.40.0-SNAPSHOT/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your workflow service","url":"/serverlessworkflow/1.40.0-SNAPSHOT/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts Support","url":"/serverlessworkflow/1.40.0-SNAPSHOT/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Editor","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome extension for GitHub","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integration with GitHub","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integration with OpenShift","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integration with Service Registries","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deployment","url":"/serverlessworkflow/1.40.0-SNAPSHOT/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.40.0-SNAPSHOT/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.40.0-SNAPSHOT/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.40.0-SNAPSHOT/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.40.0-SNAPSHOT/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event State","url":"/serverlessworkflow/1.40.0-SNAPSHOT/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.40.0-SNAPSHOT/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.40.0-SNAPSHOT/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/1.40.0-SNAPSHOT/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback State","url":"/serverlessworkflow/1.40.0-SNAPSHOT/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback","url":"/serverlessworkflow/1.40.0-SNAPSHOT/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Client Authentication","items":[{"content":"OpenAPI Authentication","url":"/serverlessworkflow/1.40.0-SNAPSHOT/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"OpenAPI OAuth2","url":"/serverlessworkflow/1.40.0-SNAPSHOT/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]}]},{"content":"Executing, Testing and Troubleshooting","items":[{"content":"Executing and Testing Workflows","items":[{"content":"Developer UI","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Command Line","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Mocking HTTP CloudEvents","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI Services","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing with REST Assured","url":"/serverlessworkflow/1.40.0-SNAPSHOT/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"}]}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.40.0-SNAPSHOT/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.40.0-SNAPSHOT/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Development Mode","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Referencing Workflow Resources","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/operator/referencing-resource-files.html","urlType":"internal"},{"content":"Configuration","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Building and Deploying Workflow Images","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Custom Resource Status","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/operator/known-issues.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying Workflows on OpenShift","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/quarkus/deploying-on-openshift.html","urlType":"internal"},{"content":"Deploying Workflows on Minikube","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying Workflows on Kubernetes","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery","url":"/serverlessworkflow/1.40.0-SNAPSHOT/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Camel Routes","url":"/serverlessworkflow/1.40.0-SNAPSHOT/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Knative Serving","url":"/serverlessworkflow/1.40.0-SNAPSHOT/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing Prometheus Metrics","url":"/serverlessworkflow/1.40.0-SNAPSHOT/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow Data in Dashboards","url":"/serverlessworkflow/1.40.0-SNAPSHOT/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Job Service","items":[{"content":"Core Concepts","url":"/serverlessworkflow/1.40.0-SNAPSHOT/job-services/core-concepts.html","urlType":"internal"},{"content":"Quarkus Extensions","url":"/serverlessworkflow/1.40.0-SNAPSHOT/job-services/quarkus-extensions.html","urlType":"internal"}]},{"content":"Data Index","items":[{"content":"Core concepts","url":"/serverlessworkflow/1.40.0-SNAPSHOT/data-index/data-index-core-concepts.html","urlType":"internal"},{"content":"Standalone service","url":"/serverlessworkflow/1.40.0-SNAPSHOT/data-index/data-index-service.html","urlType":"internal"},{"content":"Quarkus Extension","url":"/serverlessworkflow/1.40.0-SNAPSHOT/data-index/data-index-quarkus-extension.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration","url":"/serverlessworkflow/1.40.0-SNAPSHOT/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeouts Showcase","url":"/serverlessworkflow/1.40.0-SNAPSHOT/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.39.0.Final":{"displayVersion":"1.39","title":"Kogito Serverless Workflow Guides","version":"1.39.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"Kogito Serverless Workflow Operator","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.6.Final","quarkus_platform_version":"2.16.6.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"main","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.39.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.39.0.Final/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/1.39.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.39.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.39.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with tooling","url":"/serverlessworkflow/1.39.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions","url":"/serverlessworkflow/1.39.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/1.39.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/1.39.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties","url":"/serverlessworkflow/1.39.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition","url":"/serverlessworkflow/1.39.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your workflow service","url":"/serverlessworkflow/1.39.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts Support","url":"/serverlessworkflow/1.39.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.39.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.39.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.39.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.39.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Kogito Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.39.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.39.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.39.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.39.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.39.0.Final/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.39.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event State","url":"/serverlessworkflow/1.39.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.39.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.39.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/1.39.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback State","url":"/serverlessworkflow/1.39.0.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback","url":"/serverlessworkflow/1.39.0.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services","url":"/serverlessworkflow/1.39.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication","url":"/serverlessworkflow/1.39.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.39.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.39.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing using REST Assured","url":"/serverlessworkflow/1.39.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Integration tests using PostgreSQL","url":"/serverlessworkflow/1.39.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.39.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.39.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","url":"/serverlessworkflow/1.39.0.Final/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/1.39.0.Final/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Developing Workflows","url":"/serverlessworkflow/1.39.0.Final/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Configuring Workflows","url":"/serverlessworkflow/1.39.0.Final/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Workflows Status","url":"/serverlessworkflow/1.39.0.Final/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Building and Deploying Workflows","url":"/serverlessworkflow/1.39.0.Final/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/1.39.0.Final/cloud/operator/known-issues.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.39.0.Final/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying Workflows on Minikube","url":"/serverlessworkflow/1.39.0.Final/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying Workflows on Kubernetes","url":"/serverlessworkflow/1.39.0.Final/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery","url":"/serverlessworkflow/1.39.0.Final/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Integrating with Camel Routes","url":"/serverlessworkflow/1.39.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Invoking Knative services","url":"/serverlessworkflow/1.39.0.Final/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.39.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.39.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Supporting Services","items":[{"content":"Job Service","url":"/serverlessworkflow/1.39.0.Final/supporting-services/jobs-service.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration Example","url":"/serverlessworkflow/1.39.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeout Example","url":"/serverlessworkflow/1.39.0.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.38.0.Final":{"displayVersion":"1.38","title":"Kogito Serverless Workflow Guides","version":"1.38.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"Kogito Serverless Workflow Operator","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.6.Final","quarkus_platform_version":"2.16.6.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"main","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.38.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.38.0.Final/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/1.38.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.38.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.38.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with tooling","url":"/serverlessworkflow/1.38.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions","url":"/serverlessworkflow/1.38.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/1.38.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/1.38.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties","url":"/serverlessworkflow/1.38.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition","url":"/serverlessworkflow/1.38.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your workflow service","url":"/serverlessworkflow/1.38.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts Support","url":"/serverlessworkflow/1.38.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.38.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.38.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.38.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.38.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Kogito Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.38.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.38.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.38.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.38.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.38.0.Final/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.38.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event State","url":"/serverlessworkflow/1.38.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.38.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.38.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/1.38.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback State","url":"/serverlessworkflow/1.38.0.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback","url":"/serverlessworkflow/1.38.0.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services","url":"/serverlessworkflow/1.38.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication","url":"/serverlessworkflow/1.38.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.38.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.38.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing using REST Assured","url":"/serverlessworkflow/1.38.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Integration tests using PostgreSQL","url":"/serverlessworkflow/1.38.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.38.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.38.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","url":"/serverlessworkflow/1.38.0.Final/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/1.38.0.Final/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Developing Workflows","url":"/serverlessworkflow/1.38.0.Final/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Configuring Workflows","url":"/serverlessworkflow/1.38.0.Final/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Workflows Status","url":"/serverlessworkflow/1.38.0.Final/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Building and Deploying Workflows","url":"/serverlessworkflow/1.38.0.Final/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/1.38.0.Final/cloud/operator/known-issues.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.38.0.Final/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying Workflows on Minikube","url":"/serverlessworkflow/1.38.0.Final/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying Workflows on Kubernetes","url":"/serverlessworkflow/1.38.0.Final/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery","url":"/serverlessworkflow/1.38.0.Final/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Integrating with Camel Routes","url":"/serverlessworkflow/1.38.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Invoking Knative services","url":"/serverlessworkflow/1.38.0.Final/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.38.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.38.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Supporting Services","items":[{"content":"Job Service","url":"/serverlessworkflow/1.38.0.Final/supporting-services/jobs-service.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration Example","url":"/serverlessworkflow/1.38.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeout Example","url":"/serverlessworkflow/1.38.0.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.37.0.Final":{"displayVersion":"1.37","title":"Kogito Serverless Workflow Guides","version":"1.37.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito Serverless Workflow","kogito_version_redhat":"","operator_name":"Kogito Serverless Workflow Operator","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.5.Final","quarkus_platform_version":"2.16.5.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"main","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.37.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","quarkus_url":"https://quarkus.io/","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io","kogito_serverless_operator_url":"https://github.com/kiegroup/kogito-serverless-operator/","docs_issues_url":"https://github.com/kiegroup/kogito-docs/issues/new"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.37.0.Final/index.html","navigation":[{"items":[{"content":"Release notes","url":"/serverlessworkflow/1.37.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.37.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.37.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with tooling","url":"/serverlessworkflow/1.37.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions","url":"/serverlessworkflow/1.37.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling","url":"/serverlessworkflow/1.37.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism","url":"/serverlessworkflow/1.37.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties","url":"/serverlessworkflow/1.37.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition","url":"/serverlessworkflow/1.37.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your workflow service","url":"/serverlessworkflow/1.37.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts Support","url":"/serverlessworkflow/1.37.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.37.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.37.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.37.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.37.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Kogito Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.37.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.37.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.37.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.37.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.37.0.Final/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.37.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event State","url":"/serverlessworkflow/1.37.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.37.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.37.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event Correlation","url":"/serverlessworkflow/1.37.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback State","url":"/serverlessworkflow/1.37.0.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback","url":"/serverlessworkflow/1.37.0.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services","url":"/serverlessworkflow/1.37.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication","url":"/serverlessworkflow/1.37.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.37.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.37.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing using REST Assured","url":"/serverlessworkflow/1.37.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Integration tests using PostgreSQL","url":"/serverlessworkflow/1.37.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.37.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.37.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","url":"/serverlessworkflow/1.37.0.Final/cloud/index.html","urlType":"internal","items":[{"content":"Operator","items":[{"content":"Installation","url":"/serverlessworkflow/1.37.0.Final/cloud/operator/install-serverless-operator.html","urlType":"internal"},{"content":"Developing Workflows","url":"/serverlessworkflow/1.37.0.Final/cloud/operator/developing-workflows.html","urlType":"internal"},{"content":"Configuring Workflows","url":"/serverlessworkflow/1.37.0.Final/cloud/operator/configuring-workflows.html","urlType":"internal"},{"content":"Workflows Status","url":"/serverlessworkflow/1.37.0.Final/cloud/operator/workflow-status-conditions.html","urlType":"internal"},{"content":"Building and Deploying Workflows","url":"/serverlessworkflow/1.37.0.Final/cloud/operator/build-and-deploy-workflows.html","urlType":"internal"},{"content":"Known Issues","url":"/serverlessworkflow/1.37.0.Final/cloud/operator/known-issues.html","urlType":"internal"}]},{"content":"Quarkus","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.37.0.Final/cloud/quarkus/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying Workflows on Minikube","url":"/serverlessworkflow/1.37.0.Final/cloud/quarkus/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying Workflows on Kubernetes","url":"/serverlessworkflow/1.37.0.Final/cloud/quarkus/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery","url":"/serverlessworkflow/1.37.0.Final/cloud/quarkus/kubernetes-service-discovery.html","urlType":"internal"}]}]},{"content":"Integrations","items":[{"content":"Integrating with Camel Routes","url":"/serverlessworkflow/1.37.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Invoking Knative services","url":"/serverlessworkflow/1.37.0.Final/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.37.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.37.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga Orchestration Example","url":"/serverlessworkflow/1.37.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeout Example","url":"/serverlessworkflow/1.37.0.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.36.1.Final":{"displayVersion":"1.36","title":"Kogito Serverless Workflow Guides","version":"1.36.1.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.4.Final","quarkus_platform_version":"2.16.4.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"main","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.36.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.36.1.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.36.1.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.36.1.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.36.1.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.36.1.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.36.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.36.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.36.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.36.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.36.1.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.36.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.36.1.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.36.1.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.36.1.Final/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.36.1.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.36.1.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.36.1.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.36.1.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.36.1.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.36.1.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.36.1.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.36.1.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.36.1.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.36.1.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.36.1.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Kubernetes","url":"/serverlessworkflow/1.36.1.Final/cloud/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"},{"content":"Buiding and deploying a  Serverless Workflow application on Kubernetes using the Kogito Serverless Operator","url":"/serverlessworkflow/1.36.1.Final/cloud/build-and-deploy-with-serverless-operator-on-kubernetes.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Integrating with Camel Routes","url":"/serverlessworkflow/1.36.1.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Invoking Knative services from Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.36.1.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.36.1.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeout example in Serverless Workflow","url":"/serverlessworkflow/1.36.1.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.35.0.Final":{"displayVersion":"1.35","title":"Kogito Serverless Workflow Guides","version":"1.35.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.0.Final","quarkus_platform_version":"2.16.0.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"main","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.35.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.35.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.35.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.35.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.35.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.35.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.35.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.35.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.35.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.35.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.35.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.35.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.35.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.35.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.35.0.Final/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.35.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.35.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.35.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.35.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.35.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.35.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.35.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.35.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.35.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.35.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.35.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Kubernetes","url":"/serverlessworkflow/1.35.0.Final/cloud/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"},{"content":"Buiding and deploying a  Serverless Workflow application on Kubernetes using the Kogito Serverless Operator","url":"/serverlessworkflow/1.35.0.Final/cloud/build-and-deploy-with-serverless-operator-on-kubernetes.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Integrating with Camel Routes","url":"/serverlessworkflow/1.35.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Invoking Knative services from Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/integrations/custom-functions-knative.html","urlType":"internal"},{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.35.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.35.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeout example in Serverless Workflow","url":"/serverlessworkflow/1.35.0.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.34.0.Final":{"displayVersion":"1.34","title":"Kogito Serverless Workflow Guides","version":"1.34.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.0.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"main","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.34.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.34.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.34.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.34.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.34.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.34.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.34.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.34.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.34.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"},{"content":"Dashboards in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.34.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-custom-dashboard-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.34.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.34.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.34.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.34.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestrating the AsyncAPI services","url":"/serverlessworkflow/1.34.0.Final/service-orchestration/orchestration-of-asyncapi-based-services.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.34.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.34.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.34.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.34.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.34.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.34.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.34.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.34.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.34.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.34.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.34.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Kubernetes","url":"/serverlessworkflow/1.34.0.Final/cloud/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"},{"content":"Buiding and deploying a  Serverless Workflow application on Kubernetes using the Kogito Serverless Operator","url":"/serverlessworkflow/1.34.0.Final/cloud/build-and-deploy-with-serverless-operator-on-kubernetes.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Integrating with Camel Routes","url":"/serverlessworkflow/1.34.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.34.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.34.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"},{"content":"Timeout example in Serverless Workflow","url":"/serverlessworkflow/1.34.0.Final/use-cases/timeout-showcase-example.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.33.0.Final":{"displayVersion":"1.33","title":"Kogito Serverless Workflow Guides","version":"1.33.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.16.0.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.33.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.33.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.33.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.33.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.33.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.33.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.33.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.33.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.33.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.33.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.33.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.33.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.33.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.33.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.33.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.33.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.33.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.33.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.33.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.33.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.33.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.33.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.33.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.33.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Kubernetes","url":"/serverlessworkflow/1.33.0.Final/cloud/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Integrating with Camel Routes","url":"/serverlessworkflow/1.33.0.Final/integrations/camel-routes-integration.html","urlType":"internal"},{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.33.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.33.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.33.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.32.0.Final":{"displayVersion":"1.32","title":"Kogito Serverless Workflow Guides","version":"1.32.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.15.0.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","operator_version":"v1.32.0","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.32.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","cloud_events_git_url":"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","open_api_swagger_spec_url":"https://swagger.io/docs/specification","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas","camel_url":"https://camel.apache.org/","camel_extensions_url":"https://camel.apache.org/camel-quarkus/2.14.x/reference/extensions","kaoto_url":"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-kaoto","minikube_url":"https://minikube.sigs.k8s.io"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.32.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.32.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.32.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.32.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.32.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.32.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.32.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.32.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.32.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.32.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.32.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.32.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.32.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.32.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.32.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/eventing/working-with-callbacks.html","urlType":"internal"},{"content":"OpenAPI Callback in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/eventing/working-with-openapi-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.32.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.32.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.32.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.32.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.32.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"},{"content":"Migrate your PostgreSQL database","url":"/serverlessworkflow/1.32.0.Final/persistence/postgresql-flyway-migration.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.32.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.32.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Kubernetes","url":"/serverlessworkflow/1.32.0.Final/cloud/deploying-on-kubernetes.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"},{"content":"Buiding and deploying a  Serverless Workflow application on Kubernetes using the Kogito Serverless Operator","url":"/serverlessworkflow/1.32.0.Final/cloud/build-and-deploy-with-serverless-operator-on-kubernetes.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.32.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.32.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.32.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.31.1.Final":{"displayVersion":"1.31","title":"Kogito Serverless Workflow Guides","version":"1.31.1.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.15.0.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.3.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.31.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.31.1.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.31.1.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.31.1.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.31.1.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.31.1.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.31.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.31.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.31.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.31.1.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.31.1.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.31.1.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.31.1.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.31.1.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.31.1.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.31.1.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.31.1.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.31.1.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.31.1.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.31.1.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.31.1.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.31.1.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.31.1.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.31.1.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.31.1.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.31.1.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.30.0.Final":{"displayVersion":"1.30","title":"Kogito Serverless Workflow Guides","version":"1.30.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.14.0.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.2.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"docker_min_version":"20.10.7","docker_compose_min_version":"1.27.2","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.30.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","docker_compose_install_url":"https://docs.docker.com/compose/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.30.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.30.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.30.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.30.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.30.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.30.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.30.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.30.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.30.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.30.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.30.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.30.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.30.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.30.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.30.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.30.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.30.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.30.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.30.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.30.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.30.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.30.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.30.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.30.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.30.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.29.0.Final":{"displayVersion":1.29,"title":"Kogito Serverless Workflow Guides","version":"1.29.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.13.1.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.2.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.29.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","kogito_apps_url":"https://github.com/kiegroup/kogito-apps/tree/main","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.29.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.29.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.29.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.29.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.29.0.Final/core/custom-functions-support.html","urlType":"internal"},{"content":"Timeouts in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/core/timeouts-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.29.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.29.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.29.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.29.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.29.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.29.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.29.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.29.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.29.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.29.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.29.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.29.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.29.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.29.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.29.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.29.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.29.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.29.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.29.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.29.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.28.0.Final":{"displayVersion":1.28,"title":"Kogito Serverless Workflow Guides","version":"1.28.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.13.0.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.2.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.28.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.28.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.28.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.28.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.28.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.28.0.Final/core/custom-functions-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.28.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.28.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.28.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.28.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"Integrating your Serverless Workflow project in GitHub using Serverless Logic Web Tools","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"Integrating your Serverless Workflow project with OpenShift using Serverless Logic Web Tools","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Integrating with Red Hat OpenShift Application and Data Services","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow projects using Serverless Logic Web Tools","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Enabling Kogito Serverless Workflow Visualization in Serverless Logic Web Tools","url":"/serverlessworkflow/1.28.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.28.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.28.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.28.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.28.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.28.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.28.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.28.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.28.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.28.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.28.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.28.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.28.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.28.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.28.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.28.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.27.0.Final":{"displayVersion":1.27,"title":"Kogito Serverless Workflow Guides","version":"1.27.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.7.6.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.2.0","spec_version":0.8,"vscode_version":"1.46.0","kn_cli_version":"0.21.3","kie_tools_node_min_version":"16.13.2","kie_tools_pnpm_min_version":"7.0.0","kie_tools_golang_min_version":1.19,"kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.27.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","quarkus_swagger_url":"https://quarkus.io/guides/openapi-swaggerui","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/","node_install_url":"https://nodejs.org/en/download/package-manager/","pnpm_install_url":"https://pnpm.io/installation","golang_install_url":"https://go.dev/doc/install","serverless_logic_web_tools_url":"https://start.kubesmarts.org/","serverless_logic_web_tools_name":"Serverless Logic Web Tools","github_tokens_url":"https://github.com/settings/tokens","openshift_developer_sandbox_url":"https://developers.redhat.com/developer-sandbox","openshift_application_data_services_service_account_url":"https://console.redhat.com/application-services/service-accounts","openshift_application_data_services_service_registry_url":"https://console.redhat.com/application-services/service-registry","openshift_application_data_services_apache_kafka_url":"https://console.redhat.com/application-services/streams/kafkas"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.27.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.27.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.27.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.27.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Input schema definition for Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/core/defining-an-input-schema-for-workflows.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.27.0.Final/core/custom-functions-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.27.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.27.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.27.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.27.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"},{"content":"Serverless Logic Web Tools","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-overview.html","urlType":"internal","items":[{"content":"GitHub integration","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-github-integration.html","urlType":"internal"},{"content":"OpenShift integration","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-openshift-integration.html","urlType":"internal"},{"content":"Red Hat OpenShift Application and Data Services integration","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-redhat-application-services-integration.html","urlType":"internal"},{"content":"Deploying projects","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-deploy-projects.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Visualization","url":"/serverlessworkflow/1.27.0.Final/tooling/serverless-logic-web-tools/serverless-logic-web-tools-enable-kogito-swf-visualization.html","urlType":"internal"}]}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.27.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.27.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.27.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.27.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.27.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.27.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.27.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.27.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.27.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.27.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.27.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.27.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"},{"content":"Kubernetes service discovery in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/cloud/kubernetes-service-discovery.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Exposing workflow base metrics to Prometheus","url":"/serverlessworkflow/1.27.0.Final/integrations/expose-metrics-to-prometheus.html","urlType":"internal"},{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.27.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.27.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.26.0.Final":{"displayVersion":1.26,"title":"Kogito Serverless Workflow Guides","version":"1.26.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.11.2.Final","java_min_version":"11+","maven_min_version":"3.8.6","graalvm_min_version":"22.1.0","spec_version":0.8,"vscode_version":"1.46.0","kn-cli-version":"0.21.2","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.26.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.26.0.Final/index.html","navigation":[{"items":[{"content":"Release notes for Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/release_notes.html","urlType":"internal"},{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.26.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.26.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.26.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.26.0.Final/core/custom-functions-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.26.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.26.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.26.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.26.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.26.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.26.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.26.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.26.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.26.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.26.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.26.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.26.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.26.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.26.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.26.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.26.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.26.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.26.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.26.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.26.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.26.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.25.0.Final":{"displayVersion":1.25,"title":"Kogito Serverless Workflow Guides","version":"1.25.0.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.10.2.Final","java_min_version":"11+","maven_min_version":"3.8.1","graalvm_min_version":"22.1.0","spec_version":0.8,"vscode_version":"1.46.0","kn-cli-version":"0.21.2","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.25.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.25.0.Final/index.html","navigation":[{"items":[{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.25.0.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.25.0.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.25.0.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.25.0.Final/core/custom-functions-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.25.0.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.25.0.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.25.0.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.25.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.25.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.25.0.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.25.0.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.25.0.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.25.0.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.25.0.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.25.0.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.25.0.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.25.0.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.25.0.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.25.0.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.25.0.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.25.0.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.25.0.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.25.0.Final/cloud/deploying-on-minikube.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.25.0.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.25.0.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]},"serverlessworkflow/1.24.1.Final":{"displayVersion":1.24,"title":"Kogito Serverless Workflow Guides","version":"1.24.1.Final","name":"serverlessworkflow","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Kogito Serverless Workflow Guides","toc":null,"product_name":"Kogito","context":"Serverless Workflow","kogito_version_redhat":"","quarkus_platform":"io.quarkus.platform","kogito_sw_ga":"kogito-quarkus-serverless-workflow","quarkus_version":"2.10.2.Final","java_min_version":"11+","maven_min_version":"3.8.1","graalvm_min_version":"22.1.0","spec_version":0.8,"vscode_version":"1.46.0","kn-cli-version":"0.21.2","kogito_devservices_imagename":"registry.redhat.io/openshift-serverless-1-tech-preview/logic-data-index-ephemeral-rhel8","kogito_examples_repository_url":"https://github.com/kiegroup/kogito-examples","kogito_sw_examples_url":"https://github.com/kiegroup/kogito-examples/tree/1.24.x/serverless-workflow-examples","kogito_examples_url":"https://github.com/kiegroup/kogito-examples.git","quarkus_cli_url":"https://quarkus.io/guides/cli-tooling","spec_website_url":"https://serverlessworkflow.io/","spec_doc_url":"https://github.com/serverlessworkflow/specification/blob/0.8.x/specification.md","cloud_events_url":"https://cloudevents.io/","cloud_events_sdk_url":"https://github.com/cloudevents/sdk-java","open_api_spec_url":"https://spec.openapis.org/oas/v3.1.0.html","quarkus_openapi_gen_url":"https://github.com/quarkiverse/quarkus-openapi-generator","kie_tools_releases_page_url":"https://github.com/kiegroup/kie-tools/releases","quarkus_guides_base_url":"https://quarkus.io/guides","smallrye_messaging_url":"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.3","quarkus_config_url":"https://quarkus.io/guides/config","java_install":"https://www.java.com/en/download/help/download_options.html","maven_install":"https://maven.apache.org/install.html","docker_install":"https://docs.docker.com/engine/install/","podman_install":"https://docs.podman.io/en/latest/","kubectl_install":"https://kubernetes.io/docs/tasks/tools/install-kubectl","java_install_url":"https://www.java.com/en/download/help/download_options.html","maven_install_url":"https://maven.apache.org/install.html","docker_install_url":"https://docs.docker.com/engine/install/","podman_install_url":"https://docs.podman.io/en/latest/","kubectl_install_url":"https://kubernetes.io/docs/tasks/tools/install-kubectl","kn_cli_install_url":"https://github.com/knative/client/blob/main/docs/README.md#installing-kn","kafka_doc_url":"https://kafka.apache.org/documentation/"},"sourcemap":false,"extensions":[{},{}]},"url":"/serverlessworkflow/1.24.1.Final/index.html","navigation":[{"items":[{"content":"Getting Started","items":[{"content":"Creating your first workflow service","url":"/serverlessworkflow/1.24.1.Final/getting-started/create-your-first-workflow-service.html","urlType":"internal"},{"content":"CNCF Serverless Workflow specification","url":"/serverlessworkflow/1.24.1.Final/getting-started/cncf-serverless-workflow-specification-support.html","urlType":"internal"},{"content":"Getting familiar with Serverless Workflow tooling","url":"/serverlessworkflow/1.24.1.Final/getting-started/getting-familiar-with-our-tooling.html","urlType":"internal"}]},{"content":"Core","items":[{"content":"jq expressions in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/core/understanding-jq-expressions.html","urlType":"internal"},{"content":"Error handling in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/core/understanding-workflow-error-handling.html","urlType":"internal"},{"content":"Parallelism in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/core/working-with-parallelism.html","urlType":"internal"},{"content":"Configuration properties in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/core/configuration-properties.html","urlType":"internal"},{"content":"Custom functions for your Serverless Workflow service","url":"/serverlessworkflow/1.24.1.Final/core/custom-functions-support.html","urlType":"internal"}]},{"content":"Tooling","items":[{"content":"Serverless Workflow editor","url":"/serverlessworkflow/1.24.1.Final/tooling/serverless-workflow-editor/swf-editor-overview.html","urlType":"internal"},{"content":"VS Code extension for Serverless Workflow editor","url":"/serverlessworkflow/1.24.1.Final/tooling/serverless-workflow-editor/swf-editor-vscode-extension.html","urlType":"internal"},{"content":"Chrome GitHub extension for Serverless Workflow editor","url":"/serverlessworkflow/1.24.1.Final/tooling/serverless-workflow-editor/swf-editor-chrome-extension.html","urlType":"internal"},{"content":"Kogito Serverless Workflow Tools extension in Quarkus Dev UI","url":"/serverlessworkflow/1.24.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-overview.html","urlType":"internal","items":[{"content":"Workflow Instances in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.24.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-instances-page.html","urlType":"internal"},{"content":"Workflow Definitions in Kogito Serverless Workflow Tools extension","url":"/serverlessworkflow/1.24.1.Final/tooling/quarkus-dev-ui-extension/quarkus-dev-ui-workflow-definition-page.html","urlType":"internal"}]},{"content":"Serverless Workflow plug-in for Knative CLI","url":"/serverlessworkflow/1.24.1.Final/tooling/kn-plugin-workflow-overview.html","urlType":"internal"}]},{"content":"Service Orchestration","items":[{"content":"Orchestrating the OpenAPI services","url":"/serverlessworkflow/1.24.1.Final/service-orchestration/orchestration-of-openapi-based-services.html","urlType":"internal"},{"content":"Configuring the OpenAPI services endpoints","url":"/serverlessworkflow/1.24.1.Final/service-orchestration/configuring-openapi-services-endpoints.html","urlType":"internal"},{"content":"Orchestration of gRPC based services","url":"/serverlessworkflow/1.24.1.Final/service-orchestration/orchestration-of-grpc-services.html","urlType":"internal"}]},{"content":"Eventing","items":[{"content":"Event state in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/eventing/handling-events-on-workflows.html","urlType":"internal"},{"content":"Consuming and producing events using Apache Kafka","url":"/serverlessworkflow/1.24.1.Final/eventing/consume-producing-events-with-kafka.html","urlType":"internal"},{"content":"Consuming and producing events on Knative Eventing","url":"/serverlessworkflow/1.24.1.Final/eventing/consume-produce-events-with-knative-eventing.html","urlType":"internal"},{"content":"Event correlation in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/eventing/event-correlation-with-workflows.html","urlType":"internal"},{"content":"Callback state in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/eventing/working-with-callbacks.html","urlType":"internal"}]},{"content":"Security","items":[{"content":"Authentication for OpenAPI services in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/security/authention-support-for-openapi-services.html","urlType":"internal"},{"content":"Orchestration of third-party services using OAuth 2.0 authentication in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/security/orchestrating-third-party-services-with-oauth2.html","urlType":"internal"}]},{"content":"Testing and Troubleshooting","items":[{"content":"Mocking HTTP CloudEvents sink using WireMock","url":"/serverlessworkflow/1.24.1.Final/testing-and-troubleshooting/mocking-http-cloudevents-with-wiremock.html","urlType":"internal"},{"content":"Mocking OpenAPI services using WireMock","url":"/serverlessworkflow/1.24.1.Final/testing-and-troubleshooting/mocking-openapi-services-with-wiremock.html","urlType":"internal"},{"content":"Testing your workflow application using REST Assured","url":"/serverlessworkflow/1.24.1.Final/testing-and-troubleshooting/basic-integration-tests-with-restassured.html","urlType":"internal"},{"content":"Serverless Workflow integration test using PostgreSQL","url":"/serverlessworkflow/1.24.1.Final/testing-and-troubleshooting/integration-tests-with-postgresql.html","urlType":"internal"}]},{"content":"Persistence","items":[{"content":"Running a workflow service using PostgreSQL","url":"/serverlessworkflow/1.24.1.Final/persistence/persistence-with-postgresql.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"Building workflow images using Quarkus CLI","url":"/serverlessworkflow/1.24.1.Final/cloud/build-workflow-image-with-quarkus-cli.html","urlType":"internal"},{"content":"Deploying your Serverless Workflow application on Minikube","url":"/serverlessworkflow/1.24.1.Final/cloud/deploying-on-minikube.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Displaying workflow data in dashboards","url":"/serverlessworkflow/1.24.1.Final/integrations/serverless-dashboard-with-runtime-data.html","urlType":"internal"}]},{"content":"Use Cases","items":[{"content":"Saga orchestration example in Serverless Workflow","url":"/serverlessworkflow/1.24.1.Final/use-cases/orchestration-based-saga-pattern.html","urlType":"internal"}]}],"root":true,"order":0}]}}}})